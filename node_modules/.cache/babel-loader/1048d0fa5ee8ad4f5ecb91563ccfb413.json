{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore';\nimport { Dropdown, Checkbox, Button, Icon, Card, Image, Grid, Segment } from 'semantic-ui-react';\nimport mapStyles from './mapStyles';\nimport Markers from './Markers';\nimport { HorizontalBar, Bar, Line } from 'react-chartjs-2';\nimport xyz from './xyz.jpg';\nimport { fetchCitiesSuccess } from \"../actions/city\";\nexport class ClimateMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      showClimateScore: false,\n      coords: {\n        lat: -23.304354,\n        lng: 151.916417\n      },\n      address: 'Wilson Island, Australia',\n      allScores: false,\n      showAQI: true,\n      hoveredPinStat: {},\n      hoveredCoords: {\n        lat: '',\n        lng: ''\n      },\n      showInfo: false,\n      activeMarker: {},\n      selectedPlace: {},\n      data: false,\n      markersRendered: false\n    };\n\n    this.mapCLicked = (mapProps, map, event) => {\n      console.log(event);\n    };\n\n    this.onMarkerDragEnd = coord => {\n      const {\n        latLng\n      } = coord;\n      const newLat = latLng.lat();\n      const newLon = latLng.lng();\n      this.setState({\n        coords: {\n          lat: newLat,\n          lng: newLon\n        }\n      });\n      console.log(this.state.coords);\n      this._score.state.coords.lat = newLat;\n      this._score.state.coords.lng = newLon;\n\n      this._map.map.setCenter({\n        lat: newLat,\n        lng: newLon\n      }); // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n      // \t\"method\": \"GET\",\n      // \t\"headers\": {\n      // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n      //   this.setState({\n      //     allScores: false,\n      //   })\n      //   console.log(err)})\n      // Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      // Geocode.fromLatLng(newLat, newLon).then(\n      //   response => {\n      //     const newAddress = response.results[0].formatted_address;\n      //     this._score.state.address = newAddress\n      //   },\n      //   error => {\n      //     console.error(error);\n      //   }\n      // );\n      // fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this._score.state.aqi = data.data.aqi})  \n\n    };\n\n    this.handleSubmit = value => {\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromAddress(`${value.description}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this._score.state.lat = lat;\n        this._score.state.lng = lng;\n\n        this._map.map.setCenter({\n          lat: lat,\n          lng: lng\n        });\n\n        console.log(this._marker.marker.position.lat());\n\n        this._marker.marker.setPosition({\n          lat: lat,\n          lng: lng\n        });\n\n        fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n          }\n        }).then(resp => resp.json()).then(data => {\n          console.log(data);\n          this.setState({\n            allScores: {\n              ClimateScore: data.ClimateScore,\n              DroughtScore: data.DroughtScore,\n              FireScore: data.FireScore,\n              SeaLevelScore: data.SeaLevelScore,\n              StormScore: data.StormScore,\n              TempScore: data.TempScore\n            }\n          });\n        }).catch(err => {\n          this.setState({\n            allScores: false\n          });\n          console.log(err);\n        });\n        Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n        Geocode.fromLatLng(lat, lng).then(response => {\n          const newAddress = response.results[0].formatted_address;\n          this._score.state.address = newAddress;\n        }, error => {\n          console.error(error);\n        });\n        fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.labelClicked = e => {\n      console.log('working');\n      console.log(e.nativeEvent.target.innerHTML);\n\n      if (e.nativeEvent.target.innerHTML === 'Climate Scoreâ„¢') {\n        this.setState({\n          showAQI: false\n        });\n      }\n    };\n\n    this.markerHover = () => {\n      const google = this.props.google;\n\n      if (this._marker.marker.getAnimation() !== null) {\n        this._marker.marker.setAnimation(null);\n      } else {\n        this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n      }\n    };\n\n    this.mouseOut = e => {\n      this.setState({\n        showInfo: false\n      });\n    };\n\n    this.onMarkerClick = (marker, e) => {\n      console.log(\"i got clicked\");\n      fetch(`https://api.waqi.info/feed/geo:${marker.info.lat};${marker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        this.setState({\n          data: data.data\n        });\n        console.log(data);\n      });\n    };\n\n    this.onMarkerHover = (props, marker, e) => {\n      console.log(marker);\n      console.log(e);\n      this.setState({\n        activeMarker: marker,\n        showInfo: true\n      });\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.coords !== nextState.coords) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      let currentLocation = {\n        lat: lat,\n        lng: lng\n      };\n      this.setState({\n        coords: currentLocation\n      });\n    });\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n  } // shouldComponentUpdate(nextProps, nextState) {\n  //   if (this.state.coords=== nextState.coords) {\n  //     return false;\n  //   } else {\n  //   return true;\n  //   }\n  // }\n\n\n  // showInfo = () => {\n  //   console.log('works')\n  // }\n  render() {\n    let config, days, hour, minutes;\n\n    if (this.state.data !== false && 'o3' in this.state.data.forecast.daily) {\n      let labelArr = [],\n          avgArr = [],\n          minArr = [],\n          maxArr = [];\n      let now = new Date().getTime();\n      let newDate = new Date(this.state.data.time.iso).getTime();\n      console.log(newDate);\n      console.log(now);\n      let distance = newDate - now;\n      days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      hour = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      console.log('days:' + days + 'hours:' + hours + 'mins:' + minutes);\n\n      for (let i = 0; i < this.state.data.forecast.daily.o3.length; i++) {\n        labelArr.push(new Date(this.state.data.forecast.daily.o3[i].day).toString().substring(0, 10));\n        avgArr.push(this.state.data.forecast.daily.o3[i].avg);\n        minArr.push(this.state.data.forecast.daily.o3[i].min);\n        maxArr.push(this.state.data.forecast.daily.o3[i].max);\n      }\n\n      config = {\n        labels: labelArr,\n        datasets: [{\n          label: \"max\",\n          backgroundColor: '#ff7070',\n          borderColor: \"rgba(140, 140, 140, 0.0)\",\n          borderWidth: 0,\n          data: maxArr,\n          fill: \"1\",\n          line: false,\n          radius: 0\n        }, {\n          label: \"avg\",\n          backgroundColor: '#f7ff66',\n          borderColor: '#f7ff66',\n          borderWidth: 5,\n          data: avgArr,\n          fill: \"-1\",\n          radius: 0\n        }, {\n          label: \"min\",\n          backgroundColor: '#87ff9f',\n          borderColor: \"rgba(140, 140, 140, 0.0)\",\n          borderWidth: 0,\n          data: minArr,\n          fill: '1',\n          radius: 0\n        }]\n      };\n    } // options: {\n    //   tooltips: {\n    //     mode: 'index',\n    //     intersect: false,\n    //     displayColors: false,\n    //   },\n    //   responsive: true,\n    //   title: {\n    //     display: true,\n    //     text: \"Chart.js stackable with Min/Avg/Max\"\n    //   },\n    //   scales: {\n    //     xAxes: [\n    //       {\n    //         type: \"time\",\n    //         stacked: false,\n    //         // time: {\n    //         //   format: timeFormat,\n    //         //   // round: 'day'\n    //         //   tooltipFormat: \"ll HH:mm\"\n    //         // },\n    //         scaleLabel: {\n    //           display: true,\n    //           labelString: \"Date\"\n    //         },\n    //         ticks: {\n    //           maxRotation: 0\n    //         }\n    //       }\n    //     ],\n    //     yAxes: [\n    //       {\n    //         stacked: false,\n    //         scaleLabel: {\n    //           display: true,\n    //           labelString: \"value\"\n    //         }\n    //       }\n    //     ]\n    //   }\n    // }\n\n\n    console.log(this.state);\n    let o3ChartData;\n    let pm10ChartData;\n\n    if (this.state.data !== false && 'o3' in this.state.data.forecast.daily) {\n      let labelArr = [];\n      let dataArr = [];\n\n      for (let i = 0; i < this.state.data.forecast.daily.o3.length; i++) {\n        labelArr.push(this.state.data.forecast.daily.o3[i].day);\n        dataArr.push(this.state.data.forecast.daily.o3[i].avg);\n      }\n\n      o3ChartData = {\n        labels: labelArr,\n        datasets: [{\n          label: `Ozone (O3) - Currently:${'o3' in this.state.data.iaqi ? this.state.data.iaqi.o3.v : '-'}`,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: dataArr\n        }]\n      };\n    }\n\n    if (this.state.data !== false && 'pm10' in this.state.data.forecast.daily) {\n      let labelArr = [];\n      let dataArr = [];\n\n      for (let i = 0; i < this.state.data.forecast.daily.o3.length; i++) {\n        labelArr.push(this.state.data.forecast.daily.pm10[i].day);\n        dataArr.push(this.state.data.forecast.daily.pm10[i].avg);\n      }\n\n      pm10ChartData = {\n        labels: labelArr,\n        datasets: [{\n          label: `PM10 (Small Particles) - Currently:${'pm10' in this.state.data.iaqi ? this.state.data.iaqi.pm10.v : '-'}`,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: dataArr\n        }]\n      };\n    }\n\n    const mapOptions = [{\n      key: 'Climate Score',\n      text: 'Climate Scoreâ„¢',\n      value: 'Climate Score'\n    }, {\n      key: 'Air Quality Index',\n      text: 'Air Quality Index',\n      value: 'Air Quality Index'\n    }];\n    let response;\n\n    if (this.state.data !== false) {\n      if (this.state.data.aqi <= 25) {\n        response = 'Great Quality!';\n      } else if (this.state.data.aqi <= 50) {\n        response = 'Good';\n      } else {\n        response = 'HIGH';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      padded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      ref: map => this._map = map,\n      google: this.props.google,\n      styles: mapStyles,\n      style: {\n        width: '100%',\n        height: '100%',\n        'border-bottom-left-radius': '15px',\n        'border-bottom-right-radius': '15px',\n        'border-top-left-radius': '15px'\n      },\n      mapTypeControlOptions: {\n        style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n        mapTypeIds: [this.props.google.maps.MapTypeId.ROADMAP, this.props.google.maps.MapTypeId.SATELLITE, this.props.google.maps.MapTypeId.HYBRID]\n      },\n      onCenterChanged: () => {},\n      initialCenter: this.state.coords,\n      center: this.state.coords,\n      onClick: this.mapCLicked,\n      zoom: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      closeOnChange: true,\n      inline: true,\n      options: mapOptions,\n      onChange: this.labelClicked,\n      defaultValue: mapOptions[1].value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Markers, {\n      onMouseover: this.onMarkerHover,\n      onMouseout: this.mouseOut,\n      onClick: this.onMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Marker, {\n      ref: marker => this._marker = marker,\n      onClick: this.onMarkerClick,\n      name: 'Current location',\n      draggable: true,\n      onMouseover: () => this.markerHover(),\n      initialCenter: this.state.coords,\n      position: this.state.coords,\n      onDragend: (t, map, coord) => this.onMarkerDragEnd(coord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      maxWidth: 175,\n      onMouseover: () => this.showInfo(),\n      style: {\n        'background-color': '#000000'\n      },\n      visible: this.state.showInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }\n    }, this.state.showInfo ? this.state.activeMarker.info.station.name : null, \" \")))))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      onSelect: ({\n        value\n      }) => {\n        this.setState({\n          searchText: value\n        });\n      },\n      onSelect: this.handleSubmit,\n      placeholder: \"\\uD83D\\uDD0E Search Anywhere!\" // suggestionsStyles={{container: {width: '50%',height: '100%','border-radius': '1px'}}}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 3\n      }\n    }, this.state.data !== false ? this.state.data.city.name : null), /*#__PURE__*/React.createElement(Image, {\n      src: xyz,\n      wrapped: true,\n      ui: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 3\n      }\n    }, this.state.data !== false ? 'Air Quality Index: ' + this.state.data.aqi : null), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 3\n      }\n    }, \"updated \", this.state.data !== false ? +'..' + hours.substr(1) + ', and ' + minutes.substr(1) + ' ago-' + this.state.data.time.s : null), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: config,\n      options: {\n        responsive: true,\n        tooltips: {\n          mode: 'index',\n          intersect: false,\n          displayColors: true\n        },\n        title: {\n          display: false,\n          text: 'Local Air Quality Forecast',\n          fontSize: 20\n        },\n        legend: {\n          display: false,\n          position: 'top'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      data: o3ChartData,\n      options: {\n        title: {\n          display: false,\n          text: 'Local Air Quality Forecast',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'top'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(HorizontalBar, {\n      data: pm10ChartData,\n      options: {\n        title: {\n          display: false,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'top'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 5\n      }\n    }))), /*#__PURE__*/React.createElement(Card.Content, {\n      extra: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 5\n      }\n    }), \"10 Friends\"))), /*#__PURE__*/React.createElement(ClimateScore, {\n      ref: score => this._score = score,\n      map: this._map,\n      onMarkerDragEnd: this.onMarkerDragEnd,\n      coords: this.state.coords,\n      scores: this.state.allScores,\n      address: this.state.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 1\n      }\n    }))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8'\n})(ClimateMap);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","GooglePlacesAutocomplete","Geocode","ClimateScore","Dropdown","Checkbox","Button","Icon","Card","Image","Grid","Segment","mapStyles","Markers","HorizontalBar","Bar","Line","xyz","fetchCitiesSuccess","ClimateMap","state","searchText","showClimateScore","coords","lat","lng","address","allScores","showAQI","hoveredPinStat","hoveredCoords","showInfo","activeMarker","selectedPlace","data","markersRendered","mapCLicked","mapProps","map","event","console","log","onMarkerDragEnd","coord","latLng","newLat","newLon","setState","_score","_map","setCenter","handleSubmit","value","setApiKey","fromAddress","description","then","response","results","geometry","location","_marker","marker","position","setPosition","fetch","resp","json","DroughtScore","FireScore","SeaLevelScore","StormScore","TempScore","catch","err","fromLatLng","newAddress","formatted_address","error","labelClicked","e","nativeEvent","target","innerHTML","markerHover","google","props","getAnimation","setAnimation","maps","Animation","BOUNCE","mouseOut","onMarkerClick","info","lon","onMarkerHover","shouldComponentUpdate","nextProps","nextState","componentDidMount","navigator","geolocation","getCurrentPosition","latitude","longitude","currentLocation","render","config","days","hour","minutes","forecast","daily","labelArr","avgArr","minArr","maxArr","now","Date","getTime","newDate","time","iso","distance","Math","floor","hours","i","o3","length","push","day","toString","substring","avg","min","max","labels","datasets","label","backgroundColor","borderColor","borderWidth","fill","line","radius","o3ChartData","pm10ChartData","dataArr","iaqi","v","pm10","mapOptions","key","text","aqi","width","height","style","MapTypeControlStyle","HORIZONTAL_BAR","mapTypeIds","MapTypeId","ROADMAP","SATELLITE","HYBRID","t","station","name","city","substr","s","responsive","tooltips","mode","intersect","displayColors","title","display","fontSize","legend","score","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Marker, GoogleApiWrapper, } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore'\nimport { Dropdown, Checkbox, Button, Icon, Card, Image, Grid, Segment } from 'semantic-ui-react'\nimport mapStyles from './mapStyles'\nimport Markers from './Markers'\nimport {HorizontalBar, Bar, Line} from 'react-chartjs-2';\nimport xyz from './xyz.jpg'\nimport { fetchCitiesSuccess } from \"../actions/city\";\n\n\n\n\nexport class ClimateMap extends Component {\n\n  state = {\n    searchText: '',\n    showClimateScore: false,\n    coords: {\n      lat: -23.304354,\n      lng: 151.916417\n    },\n    address: 'Wilson Island, Australia',\n    allScores: false,\n    showAQI: true,\n    hoveredPinStat: {},\n    hoveredCoords: {\n      lat: '',\n      lng: ''\n    },\n    showInfo: false,\n    activeMarker: {},\n    selectedPlace: {},\n    data: false,\n    markersRendered: false,\n  }\n\n  shouldComponentUpdate( nextProps, nextState ){\n    if (this.state.coords !== nextState.coords){\n      return false\n    } else {\n      return true\n    }\n  }\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude\n      let lng = position.coords.longitude\n      let currentLocation = {lat: lat,lng: lng}\n      this.setState({\n        coords: currentLocation\n      })\n    })\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => console.log(data.data))\n    \n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if (this.state.coords=== nextState.coords) {\n  //     return false;\n  //   } else {\n  //   return true;\n  //   }\n  // }\n\n  mapCLicked = (mapProps, map, event) => {\n    console.log(event)\n  }\n\n  onMarkerDragEnd = (coord) => {\n    const { latLng } = coord;\n    const newLat = latLng.lat();\n    const newLon = latLng.lng();\n    this.setState({\n      coords: {\n        lat: newLat,\n        lng: newLon\n      }\n    })\n    console.log(this.state.coords)\n    this._score.state.coords.lat = newLat\n    this._score.state.coords.lng = newLon\n    this._map.map.setCenter({lat: newLat, lng: newLon})    \n    // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n    // \t\"method\": \"GET\",\n    // \t\"headers\": {\n\t  // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t  // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n    //   }\n    // })\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   console.log(data)\n    //   this.setState({\n    //     allScores: {\n    //       ClimateScore: data.ClimateScore,\n    //       DroughtScore: data.DroughtScore,\n    //       FireScore: data.FireScore,\n    //       SeaLevelScore: data.SeaLevelScore,\n    //       StormScore: data.StormScore,\n    //       TempScore: data.TempScore,\n    //     },\n    //   })\n    // })\n    // .catch(err => {\n    //   this.setState({\n    //     allScores: false,\n    //   })\n    //   console.log(err)})\n    // Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    // Geocode.fromLatLng(newLat, newLon).then(\n    //   response => {\n    //     const newAddress = response.results[0].formatted_address;\n    //     this._score.state.address = newAddress\n    //   },\n    //   error => {\n    //     console.error(error);\n    //   }\n    // );\n    // fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   console.log(data)\n    //   this._score.state.aqi = data.data.aqi})  \n  };\n\n  handleSubmit = (value) => {\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromAddress(`${value.description}`).then(\n      response => {\n      const { lat, lng } = response.results[0].geometry.location;\n      this._score.state.lat = lat\n      this._score.state.lng = lng\n      this._map.map.setCenter({lat: lat, lng: lng})  \n      console.log(this._marker.marker.position.lat())\n      this._marker.marker.setPosition({lat: lat, lng: lng})  \n      fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n        \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        }\n      })\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data)\n        this.setState({\n          allScores: {\n            ClimateScore: data.ClimateScore,\n            DroughtScore: data.DroughtScore,\n            FireScore: data.FireScore,\n            SeaLevelScore: data.SeaLevelScore,\n            StormScore: data.StormScore,\n            TempScore: data.TempScore,\n          },\n        })\n      })\n      .catch(err => {\n        this.setState({\n          allScores: false,\n        })\n        console.log(err)})\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(lat, lng).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress\n      },\n      error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => console.log(data.data))  \n      },\n      error => {\n      console.error(error);\n    })\n  }\n\n      // } else {\n      //   return this.props.climateScores.map((score)=>{\n      //     const numberString = score.ClimateScore.toString()\n      //     const google = this.props.google\n      //     let iw = 83,\n      //     ih = 107\n      //     return <Marker position={{lat: score.lat, lng: score.lng}}\n          \n      //     icon={{\n      //       url: `https://waqi.info/mapicon/${numberString}.50.png`,\n      //       anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n      //       size: new google.maps.Size(iw / 2, ih / 2),\n      //       scaledSize: new google.maps.Size(30, 40)\n      //     }}\n          \n          \n      //     />})\n      //   }  \n      // }\n      \n    labelClicked = (e) => {\n      console.log('working')\n      console.log(e.nativeEvent.target.innerHTML)\n      if (e.nativeEvent.target.innerHTML === 'Climate Scoreâ„¢'){\n        this.setState({\n          showAQI: false\n        })\n      }\n    }\n\n  markerHover = () => {\n    const google = this.props.google\n    if (this._marker.marker.getAnimation() !== null) {\n      this._marker.marker.setAnimation(null);\n    } else {\n      this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  }\n  mouseOut = e => {\n    this.setState({\n      showInfo: false\n    })\n  }\n\n  onMarkerClick = (marker, e) => {\n    console.log(\"i got clicked\")\n    fetch(`https://api.waqi.info/feed/geo:${marker.info.lat};${marker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          data: data.data,\n        })\n        console.log(data)\n      })\n  }  \n  \n  onMarkerHover = (props, marker, e) => {\n    console.log(marker)\n    console.log(e)\n    this.setState({\n      activeMarker: marker,\n      showInfo: true\n    })\n  }\n\n  // showInfo = () => {\n  //   console.log('works')\n  // }\n\n  render() {\n    let config, days, hour, minutes \n    if (this.state.data !== false && 'o3' in this.state.data.forecast.daily){\n      let labelArr = [], avgArr = [], minArr = [], maxArr = []\n      let now = new Date().getTime();\n      let newDate = new Date(this.state.data.time.iso).getTime()\n      console.log(newDate)\n      console.log(now)\n      let distance = newDate - now;\n      days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      hour = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      console.log('days:' + days + 'hours:' + hours + 'mins:' + minutes)\n      for(let i=0;i<this.state.data.forecast.daily.o3.length;i++){\n        labelArr.push((new Date(this.state.data.forecast.daily.o3[i].day)).toString().substring(0, 10))\n        avgArr.push(this.state.data.forecast.daily.o3[i].avg)\n        minArr.push(this.state.data.forecast.daily.o3[i].min)\n        maxArr.push(this.state.data.forecast.daily.o3[i].max)\n      }\n      config = {\n        labels: labelArr, \n        datasets: [\n          {\n            label: \"max\",\n            backgroundColor: '#ff7070',\n            borderColor: \"rgba(140, 140, 140, 0.0)\",\n            borderWidth: 0,\n            data: maxArr,\n            fill: \"1\",\n            line: false,\n            radius: 0,\n          },\n          {\n            label: \"avg\",\n            backgroundColor: '#f7ff66',\n            \n            borderColor: '#f7ff66',\n            borderWidth: 5,\n            data: avgArr,\n            fill: \"-1\",\n            radius: 0\n          },\n          {\n            label: \"min\",\n            backgroundColor: '#87ff9f',\n            borderColor: \"rgba(140, 140, 140, 0.0)\",\n            borderWidth: 0,\n            data: minArr,\n            fill: '1',\n            radius: 0,\n          }\n        ],\n      }\n    }\n    \n      \n      // options: {\n      //   tooltips: {\n      //     mode: 'index',\n      //     intersect: false,\n      //     displayColors: false,\n      //   },\n      //   responsive: true,\n      //   title: {\n      //     display: true,\n      //     text: \"Chart.js stackable with Min/Avg/Max\"\n      //   },\n      //   scales: {\n      //     xAxes: [\n      //       {\n      //         type: \"time\",\n      //         stacked: false,\n      //         // time: {\n      //         //   format: timeFormat,\n      //         //   // round: 'day'\n      //         //   tooltipFormat: \"ll HH:mm\"\n      //         // },\n      //         scaleLabel: {\n      //           display: true,\n      //           labelString: \"Date\"\n      //         },\n      //         ticks: {\n      //           maxRotation: 0\n      //         }\n      //       }\n      //     ],\n      //     yAxes: [\n      //       {\n      //         stacked: false,\n      //         scaleLabel: {\n      //           display: true,\n      //           labelString: \"value\"\n      //         }\n      //       }\n      //     ]\n      //   }\n      // }\n    \n    console.log(this.state)\n    let o3ChartData\n    let pm10ChartData\n    if (this.state.data !== false && 'o3' in this.state.data.forecast.daily){\n      let labelArr = []\n      let dataArr = []\n      for(let i=0;i<this.state.data.forecast.daily.o3.length;i++){\n        labelArr.push(this.state.data.forecast.daily.o3[i].day)\n        dataArr.push(this.state.data.forecast.daily.o3[i].avg)\n      }\n      o3ChartData = {\n        labels: labelArr,\n        datasets: [\n        { label: `Ozone (O3) - Currently:${'o3' in this.state.data.iaqi ? this.state.data.iaqi.o3.v : '-'}`,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: dataArr\n        }]\n      }\n    }\n    if (this.state.data !== false && 'pm10' in this.state.data.forecast.daily){\n      let labelArr = []\n      let dataArr = []\n      for(let i=0;i<this.state.data.forecast.daily.o3.length;i++){\n        labelArr.push(this.state.data.forecast.daily.pm10[i].day)\n        dataArr.push(this.state.data.forecast.daily.pm10[i].avg)\n      }\n      pm10ChartData = {\n        labels: labelArr,\n        datasets: [\n          { label: `PM10 (Small Particles) - Currently:${'pm10' in this.state.data.iaqi ? this.state.data.iaqi.pm10.v : '-'}`,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: dataArr\n        }]\n      }\n    }      \n    const mapOptions = [\n      {\n        key: 'Climate Score',\n        text: 'Climate Scoreâ„¢',\n        value: 'Climate Score',\n      },\n      {\n        key: 'Air Quality Index',\n        text: 'Air Quality Index',\n        value: 'Air Quality Index',\n      }\n    ] \n    let response\n    if (this.state.data !== false){\n      if(this.state.data.aqi <= 25){\n        response = 'Great Quality!'\n      } else if (this.state.data.aqi <= 50){\n        response = 'Good'\n      } else {\n        response = 'HIGH'\n      }\n    }\n\n    return(\n    <Grid padded>\n    <Grid.Row>\n      <Grid.Column width={11}>\n     \n      <div className='location'>\n      <Map  ref={(map) => this._map = map}\n            google={this.props.google}\n            styles={mapStyles}\n            style={{width: '100%',height: '100%', 'border-bottom-left-radius': '15px','border-bottom-right-radius': '15px','border-top-left-radius': '15px'}}\n            mapTypeControlOptions={{\n              style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n              mapTypeIds: [\n                this.props.google.maps.MapTypeId.ROADMAP,\n                this.props.google.maps.MapTypeId.SATELLITE,\n                this.props.google.maps.MapTypeId.HYBRID\n              ]\n            }}\n            onCenterChanged={()=>{\n            }}\n            initialCenter={this.state.coords}\n            center={this.state.coords}\n            onClick={this.mapCLicked} \n            zoom={14}\n            >\n        <Dropdown\n          closeOnChange\n          inline\n          options={mapOptions}\n          onChange={this.labelClicked}\n          defaultValue={mapOptions[1].value}\n          />\n        <Markers onMouseover={this.onMarkerHover}\n                onMouseout={this.mouseOut}\n                onClick={this.onMarkerClick}\n        >\n        </Markers>\n        <Marker ref={(marker)=>this._marker = marker}\n                onClick={this.onMarkerClick}\n                name={'Current location'} \n                draggable={true}\n                onMouseover={()=>this.markerHover()}\n                initialCenter={this.state.coords}\n                position={this.state.coords}\n                onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}/>\n        <InfoWindow\n          marker={this.state.activeMarker}\n          maxWidth={175}\n          onMouseover={()=>this.showInfo()}\n          style={{'background-color': '#000000'}}\n          visible={this.state.showInfo}>\n          \n          {/* <div class=\"ui card\">\n            <div class=\"content\">\n              <h3 class=\"ui sub header\">{this.state.showInfo? this.state.activeMarker.info.station.name:null}</h3>\n            </div>\n            <div class=\"extra content\">\n              <button class=\"ui primary button\">More Details</button>\n            </div>\n          </div>     */}\n          <div >\n          <h4>{this.state.showInfo? this.state.activeMarker.info.station.name:null} </h4>\n          </div>\n          {/* <Card>\n      <Card.Content>\n        <Card.Header>Matthew Harris</Card.Header>\n        <Card.Meta>Co-Worker</Card.Meta>\n        <Card.Description>\n          Matthew is a pianist living in Nashville.\n          <div class=\"ui animated button\" tabindex=\"0\">\n  <div class=\"visible content\">Next</div>\n  <div class=\"hidden content\">\n    <i class=\"right arrow icon\"></i>\n  </div>\n  </div>\n        </Card.Description>\n      </Card.Content>\n    </Card> */}\n        </InfoWindow>\n      </Map>\n      </div>\n      </Grid.Column>\n      <Grid.Column  width={5}>\n   \n    <GooglePlacesAutocomplete onSelect={({ value }) => {(this.setState({ searchText: value }))}}\n                                  onSelect={this.handleSubmit}\n          \n                                  placeholder='ðŸ”Ž Search Anywhere!'\n                                  // suggestionsStyles={{container: {width: '50%',height: '100%','border-radius': '1px'}}}\n                                  \n                                  \n                                  />  \n                                  \n\n  <Card  fluid color='blue'>\n  <Card.Header>{this.state.data !== false ? this.state.data.city.name:null}</Card.Header>\n<Image src={xyz} wrapped ui={false} />\n<Card.Content>\n  <Card.Header>{this.state.data !== false ? 'Air Quality Index: ' + this.state.data.aqi :null}</Card.Header>\n  <Card.Meta>updated {this.state.data !== false ? + '..' + hours.substr(1) + ', and ' + minutes.substr(1) + ' ago-' + this.state.data.time.s:null}</Card.Meta>\n  <Card.Description>\n  <Line\n      data={config}\n      options={{\n        responsive: true,\n        tooltips: {\n          mode: 'index',\n          intersect: false,\n          displayColors: true,\n        },\n        title: {\n          display:false,\n          text:'Local Air Quality Forecast',\n          fontSize:20\n        },\n        legend:{\n          display:false,\n          position:'top'\n        }\n      }}\n    />\n  <Bar\n      data={o3ChartData}\n      options={{\n        title:{\n          display:false,\n          text:'Local Air Quality Forecast',\n          fontSize:20\n        },\n        legend:{\n          display:true,\n          position:'top'\n        }\n      }}\n    />\n    <HorizontalBar\n      data={pm10ChartData}\n      options={{\n        title:{\n          display:false,\n          fontSize:20\n        },\n        legend:{\n          display:true,\n          position:'top'\n        }\n      }}\n    />\n  </Card.Description>\n</Card.Content>\n<Card.Content extra>\n  <a>\n    <Icon name='user' />\n    10 Friends\n  </a>\n</Card.Content>\n</Card>\n\n<ClimateScore ref={(score)=>this._score = score} map={this._map} onMarkerDragEnd={this.onMarkerDragEnd}\n    coords={this.state.coords} scores={this.state.allScores} address={this.state.address} />\n    \n   \n      </Grid.Column>\n    </Grid.Row>\n    </Grid>\n      \n    )\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8')\n})(ClimateMap)"]},"metadata":{},"sourceType":"module"}