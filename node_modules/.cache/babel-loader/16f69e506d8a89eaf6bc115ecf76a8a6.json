{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/MarkersList.js\";\nimport React, { Component } from \"react\";\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from \"google-maps-react\";\n\nclass MarkersList extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.markersRendered = false;\n  // }\n  // state = {\n  //   stations: false\n  // }\n  // componentDidMount(){\n  //   fetch('https://api.waqi.info/map/bounds/?latlng=85,-180,-85.05115,180&token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c')\n  //   .then(resp => resp.json())\n  //   .then(stations => {\n  //     console.log(stations)\n  //     this.setState({\n  //       stations: stations.data\n  //     })\n  //   })\n  // }\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if (JSON.stringify(this.props.places) === JSON.stringify(nextProps.places) && this.markersRendered) {\n  //     return false;\n  //   }\n  //   this.markersRendered = true;\n  //   return true;\n  // }\n  // renderMarkers = () =>{\n  //   return this.state.stations.map((statObj)=>{\n  //     console.log('PENIS')\n  //       const google = this.props.google\n  //       let iw = 83,\n  //       ih = 107;\n  //       if (statObj.aqi !== '-'){\n  //         console.log('balls')\n  //         const test = statObj.uid\n  //         return (\n  //           <Marker  info={statObj}\n  //           position={{lat: statObj.lat, lng: statObj.lon}}\n  //           onClick={this.props.onMarkerClick}\n  //           // onMouseover={(e)=>this.pinHover(e)}\n  //           // onMouseout={(e)=>this.mouseOut(e)}\n  //           icon={{\n  //             url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n  //             anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n  //             size: new google.maps.Size(iw / 2, ih / 2),\n  //             scaledSize: new google.maps.Size(30, 40)\n  //           }}\n  //           />\n  //           )\n  //         }  \n  //       })\n  // }\n  constructor(props) {\n    super(props);\n    this.markersRendered = false;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (JSON.stringify(this.props.places) === JSON.stringify(nextProps.places) && this.markersRendered) {\n      return false;\n    }\n\n    this.markersRendered = true;\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      position: {\n        lat: 45,\n        lng: 45\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default MarkersList; // return this.props.stations.map((statObj)=>{\n//   const google = this.props.google\n//   let iw = 83,\n//   ih = 107;\n//   if (statObj.aqi !== '-'){\n//     const test = statObj.uid\n//     return (\n//       <Marker  info={statObj}\n//       position={{lat: statObj.lat, lng: statObj.lon}}\n//       onClick={this.onMarkerClick}\n//       // onMouseover={(e)=>this.pinHover(e)}\n//       // onMouseout={(e)=>this.mouseOut(e)}\n//       icon={{\n//         url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n//         anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n//         size: new google.maps.Size(iw / 2, ih / 2),\n//         scaledSize: new google.maps.Size(30, 40)\n//       }}\n//       />\n//       )\n//     }  \n//   })","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/MarkersList.js"],"names":["React","Component","Map","Marker","InfoWindow","GoogleApiWrapper","MarkersList","constructor","props","markersRendered","shouldComponentUpdate","nextProps","nextState","JSON","stringify","places","render","lat","lng"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,EAAkCC,gBAAlC,QAA0D,mBAA1D;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACC,SAAhC,CAA0C;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACD;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,QAAIC,IAAI,CAACC,SAAL,CAAe,KAAKN,KAAL,CAAWO,MAA1B,MAAsCF,IAAI,CAACC,SAAL,CAAeH,SAAS,CAACI,MAAzB,CAAtC,IAA0E,KAAKN,eAAnF,EAAoG;AAClG,aAAO,KAAP;AACD;;AACD,SAAKA,eAAL,GAAuB,IAAvB;AACA,WAAO,IAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEM,oBAAC,MAAD;AAEE,MAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,GAAG,EAAE;AAAhB,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,CADF;AAWD;;AAjFuC;;AAqF1C,eAAeZ,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from \"google-maps-react\";\n\nclass MarkersList extends React.Component {\n\n  // constructor(props) {\n  //   super(props);\n  //   this.markersRendered = false;\n  // }\n  // state = {\n  //   stations: false\n  // }\n\n  // componentDidMount(){\n  //   fetch('https://api.waqi.info/map/bounds/?latlng=85,-180,-85.05115,180&token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c')\n  //   .then(resp => resp.json())\n  //   .then(stations => {\n  //     console.log(stations)\n  //     this.setState({\n  //       stations: stations.data\n  //     })\n  //   })\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if (JSON.stringify(this.props.places) === JSON.stringify(nextProps.places) && this.markersRendered) {\n  //     return false;\n  //   }\n  //   this.markersRendered = true;\n  //   return true;\n  // }\n\n  // renderMarkers = () =>{\n  //   return this.state.stations.map((statObj)=>{\n  //     console.log('PENIS')\n  //       const google = this.props.google\n  //       let iw = 83,\n  //       ih = 107;\n  //       if (statObj.aqi !== '-'){\n  //         console.log('balls')\n  //         const test = statObj.uid\n  //         return (\n  //           <Marker  info={statObj}\n  //           position={{lat: statObj.lat, lng: statObj.lon}}\n  //           onClick={this.props.onMarkerClick}\n  //           // onMouseover={(e)=>this.pinHover(e)}\n  //           // onMouseout={(e)=>this.mouseOut(e)}\n  //           icon={{\n  //             url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n  //             anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n  //             size: new google.maps.Size(iw / 2, ih / 2),\n  //             scaledSize: new google.maps.Size(30, 40)\n  //           }}\n  //           />\n  //           )\n  //         }  \n  //       })\n  // }\n\n  constructor(props) {\n    super(props);\n    this.markersRendered = false;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (JSON.stringify(this.props.places) === JSON.stringify(nextProps.places) && this.markersRendered) {\n      return false;\n    }\n    this.markersRendered = true;\n    return true;\n  }\n\n  render() {\n    return (\n      <span>\n\n            <Marker\n\n              position={{ lat: 45, lng: 45 }}\n            />\n\n\n      </span>\n    )\n  }\n\n}\n\nexport default MarkersList\n\n// return this.props.stations.map((statObj)=>{\n//   const google = this.props.google\n//   let iw = 83,\n//   ih = 107;\n//   if (statObj.aqi !== '-'){\n//     const test = statObj.uid\n//     return (\n//       <Marker  info={statObj}\n//       position={{lat: statObj.lat, lng: statObj.lon}}\n//       onClick={this.onMarkerClick}\n//       // onMouseover={(e)=>this.pinHover(e)}\n//       // onMouseout={(e)=>this.mouseOut(e)}\n//       icon={{\n//         url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n//         anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n//         size: new google.maps.Size(iw / 2, ih / 2),\n//         scaledSize: new google.maps.Size(30, 40)\n//       }}\n//       />\n//       )\n//     }  \n//   })"]},"metadata":{},"sourceType":"module"}