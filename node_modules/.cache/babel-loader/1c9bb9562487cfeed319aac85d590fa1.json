{"ast":null,"code":"import React from 'react';\nimport '../App.css';\nimport NavBar from './NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Loading from \"./loading.js\";\nimport cities from './cities.json';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scores: {\n        climateScores: {},\n        coords: {\n          lat: '',\n          lng: ''\n        }\n      },\n      coordsAndScores: [],\n      cities: cities.records,\n      one: 1\n    };\n\n    this.getClimateScores = () => {\n      if (this.state.one === 1) {\n        const lat = this.state.cities[this.state.one].fields.coordinates[0];\n        const lon = this.state.cities[this.state.one].fields.coordinates[1];\n        fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n          }\n        }).then(resp => resp.json()).then(data => {\n          console.log(data);\n          this.setState({\n            scores: { ...this.state.scores,\n              climateScores: data,\n              coords: {\n                lat: lat,\n                lng: lon\n              }\n            }\n          });\n        });\n      } else {\n        const lat = this.state.cities[this.state.one].fields.coordinates[0];\n        const lon = this.state.cities[this.state.one].fields.coordinates[1];\n        console.log(lat, lon);\n        fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n          }\n        }).then(resp => resp.json()).then(data => {\n          this.setState({\n            scores: [...this.state.scores, data]\n          });\n        });\n        this.setState({\n          one: this.state.one + 1\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    this.getClimateScores();\n    this.timerId = setInterval(() => this.getClimateScores(), 10000);\n    console.log(this.state.scores);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    console.log(this.state.cities);\n    console.log(this.state.scores);\n    console.log(this.state.coordsAndScores);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Hello\");\n  }\n\n}\n\nexport default App; // function App() {\n//   return (\n//     <BrowserRouter>\n//     <div className=\"App\">\n//     <NavBar icon=\"logo\" title=\"ClyMate\" description=\"climate app\" />\n//     <Loading />\n//       <Switch>\n//         <Route show={false} path='/home' component={Dashboard} />\n//       </Switch>\n//     </div>\n//     </BrowserRouter>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/App.js"],"names":["React","NavBar","Route","Switch","BrowserRouter","Dashboard","Loading","cities","App","Component","state","scores","climateScores","coords","lat","lng","coordsAndScores","records","one","getClimateScores","fields","coordinates","lon","fetch","then","resp","json","data","console","log","setState","componentDidMount","timerId","setInterval","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport NavBar from './NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Loading from \"./loading.js\"\nimport cities from './cities.json'\n\nclass App extends React.Component {\n\n  state = {\n    scores: {\n      climateScores: {},\n      coords: {\n        lat: '',\n        lng: ''\n      }\n    },\n    coordsAndScores: [],\n    cities: cities.records,\n    one: 1\n  }\n\n  componentDidMount() {\n    console.log(this.state)\n    this.getClimateScores()\n    this.timerId = setInterval(() => this.getClimateScores(), 10000)\n    console.log(this.state.scores)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId)\n  }\n\n  getClimateScores = () => {\n    if (this.state.one === 1){ \n    const lat = this.state.cities[this.state.one].fields.coordinates[0]\n    const lon = this.state.cities[this.state.one].fields.coordinates[1]\n    fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n\t  \"method\": \"GET\",\n\t  \"headers\": {\n\t\t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t\t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n  \t}\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n\t    this.setState({ \n        scores: {\n          ...this.state.scores, \n          climateScores: data,\n          coords: {\n            lat: lat,\n            lng: lon\n          }\n        }\n      })\n    })\n    } else {\n    const lat = this.state.cities[this.state.one].fields.coordinates[0]\n    const lon = this.state.cities[this.state.one].fields.coordinates[1]\n    console.log(lat,lon)\n    fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n\t  \"method\": \"GET\",\n\t  \"headers\": {\n\t\t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t\t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n  \t}\n    })\n    .then(resp => resp.json())\n    .then(data => {\n\t    this.setState({ \n        scores: [\n          ...this.state.scores, data\n        ]\n      })\n    })\n      this.setState({\n        one: this.state.one + 1\n      })\n    }\n    \n\n  }\n\n  render() {\n    console.log(this.state.cities)\n    console.log(this.state.scores)\n    console.log(this.state.coordsAndScores)\n    return (\n      <>\n       Hello\n      </>\n    )\n  }\n}\n\nexport default App\n\n// function App() {\n//   return (\n    \n//     <BrowserRouter>\n//     <div className=\"App\">\n//     <NavBar icon=\"logo\" title=\"ClyMate\" description=\"climate app\" />\n//     <Loading />\n//       <Switch>\n//         <Route show={false} path='/home' component={Dashboard} />\n//       </Switch>\n//     </div>\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}