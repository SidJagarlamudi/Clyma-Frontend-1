{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateScore.js\";\nimport React, { Component } from \"react\";\nimport SearchForm from './SearchForm';\nexport class ClimateScore extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nextProps: {}\n    };\n\n    this.searchForm = () => {\n      return;\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      console.log(this.props.scores);\n      console.log(nextProps.scores);\n      this.setState({\n        nextProps: nextProps.scores\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.nextProps);\n\n    if (this.props.scores === this.state.nextProps.scores) {\n      console.log('working?');\n    }\n\n    const {\n      ClimateScore,\n      DroughtScore,\n      FireScore,\n      SeaLevelScore,\n      StormScore,\n      TempScore\n    } = this.props.scores;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"Climate Score:\", ClimateScore + '...', \"Drought Score: \", DroughtScore + '...', \" Fire Score: \", FireScore + '...', \" Sea Level Score: \", SeaLevelScore + '...', \" Storm Score: \", StormScore + '...', \" Temperature Score: \", TempScore), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"Latitude: \", this.props.coords.lat + '------', \"Longitude: \", this.props.coords.lng)); // }      \n  }\n\n}\nexport default ClimateScore;","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateScore.js"],"names":["React","Component","SearchForm","ClimateScore","state","nextProps","searchForm","componentWillReceiveProps","console","log","props","scores","setState","render","DroughtScore","FireScore","SeaLevelScore","StormScore","TempScore","coords","lat","lng"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAE1CG,KAF0C,GAElC;AACNC,MAAAA,SAAS,EAAE;AADL,KAFkC;;AAAA,SAM1CC,UAN0C,GAM7B,MAAM;AACjB;AACD,KARyC;;AAAA,SAU1CC,yBAV0C,GAUbF,SAAD,IAAe;AACzCG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,MAAvB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,CAACM,MAAtB;AACA,WAAKC,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAEA,SAAS,CAACM;AADT,OAAd;AAGD,KAhByC;AAAA;;AAkB1CE,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,SAAvB;;AACA,QAAG,KAAKK,KAAL,CAAWC,MAAX,KAAsB,KAAKP,KAAL,CAAWC,SAAX,CAAqBM,MAA9C,EAAqD;AACnDH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AACD,UAAM;AAACN,MAAAA,YAAD;AAAeW,MAAAA,YAAf;AAA6BC,MAAAA,SAA7B;AAAwCC,MAAAA,aAAxC;AAAuDC,MAAAA,UAAvD;AAAmEC,MAAAA;AAAnE,QAAgF,KAAKR,KAAL,CAAWC,MAAjG;AACE,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBR,YAAY,GAAG,KAAjC,qBAAuDW,YAAY,GAAE,KAArE,mBAAyFC,SAAS,GAAE,KAApG,wBAA6HC,aAAa,GAAE,KAA5I,oBAAiKC,UAAU,GAAE,KAA7K,0BAAwMC,SAAxM,CADA,eAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKR,KAAL,CAAWS,MAAX,CAAkBC,GAAlB,GAAwB,QAAtC,iBAA2D,KAAKV,KAAL,CAAWS,MAAX,CAAkBE,GAA7E,CAHN,CADA,CANK,CAYL;AACH;;AA/ByC;AAmC5C,eAAelB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport SearchForm from './SearchForm'\n\nexport class ClimateScore extends Component {\n\n  state = {\n    nextProps: {}\n  }\n\n  searchForm = () => {\n    return \n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    console.log(this.props.scores)\n    console.log(nextProps.scores)\n    this.setState({\n      nextProps: nextProps.scores\n    })\n  }\n\n  render() {\n    console.log(this.state.nextProps)\n    if(this.props.scores === this.state.nextProps.scores){\n      console.log('working?')\n    }  \n    const {ClimateScore, DroughtScore, FireScore, SeaLevelScore, StormScore, TempScore} = this.props.scores\n      return (\n      <div>\n      <p>Climate Score:{ClimateScore + '...'}Drought Score: {DroughtScore+ '...'} Fire Score: {FireScore+ '...'} Sea Level Score: {SeaLevelScore+ '...'} Storm Score: {StormScore+ '...'} Temperature Score: {TempScore}</p>\n\n            <p>Latitude: {this.props.coords.lat + '------'}Longitude: {this.props.coords.lng}</p>\n            </div>)\n      // }      \n  }\n\n} \n\nexport default ClimateScore"]},"metadata":{},"sourceType":"module"}