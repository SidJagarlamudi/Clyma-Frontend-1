{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/Dashboard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsersSuccess } from '../actions/user';\nimport { fetchStatSuccess } from '../actions/stat';\nimport { fetchCitiesSuccess } from '../actions/city';\nimport ClimateMap from './ClimateMap';\nimport cities from './cities.json';\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: cities\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.cities); // fetch('http://localhost:3001/users')\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   this.props.fetchUsersSuccess(data)\n    // })\n    // fetch('https://api.waqi.info/map/bounds/?latlng=85,-180,-85.05115,180&token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c')\n    // .then(resp => resp.json())\n    // .then(stations => {\n    //   this.props.fetchStatSuccess(stations.data)\n    // })\n    // fetch('https://public.opendatasoft.com/api/records/1.0/search/?dataset=1000-largest-us-cities-by-population-with-geographic-coordinates&q=&rows=1000&sort=-rank&facet=city&facet=state')\n    // .then(resp => resp.json())\n    // .then(cities => {\n    //   console.log(cities.records)\n    //   this.props.fetchCitiesSuccess(cities.records)\n    // })\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"hello\"));\n  }\n\n} // const mapStateToProps = (state) => {\n//   return {\n//     users: state.users,\n//     stats: state.stats,\n//     cities: state.cities\n//   }\n// }\n// const mapDispatchToProps = {\n//   fetchUsersSuccess,\n//   fetchStatSuccess,\n//   fetchCitiesSuccess\n// }\n\n\nexport default Dashboard; // connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/Dashboard.js"],"names":["React","connect","fetchUsersSuccess","fetchStatSuccess","fetchCitiesSuccess","ClimateMap","cities","Dashboard","Component","state","componentDidMount","console","log","componentWillUnmount","clearInterval","interval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAGA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACNH,MAAAA,MAAM,EAAEA;AADF,KAF8B;AAAA;;AAMtCI,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWH,MAAvB,EADiB,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDO,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACD;;AAGDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AArCqC,C,CAwCxC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,SAAf,C,CACA","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { fetchUsersSuccess } from '../actions/user'\nimport { fetchStatSuccess } from '../actions/stat'\nimport { fetchCitiesSuccess } from '../actions/city'\nimport ClimateMap from './ClimateMap'\nimport cities from './cities.json'\n\n\nclass Dashboard extends React.Component {\n\n  state = {\n    cities: cities\n  }\n\n  componentDidMount(){\n    console.log(this.state.cities)\n      // fetch('http://localhost:3001/users')\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   this.props.fetchUsersSuccess(data)\n      // })\n      // fetch('https://api.waqi.info/map/bounds/?latlng=85,-180,-85.05115,180&token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c')\n      // .then(resp => resp.json())\n      // .then(stations => {\n      //   this.props.fetchStatSuccess(stations.data)\n      // })\n      // fetch('https://public.opendatasoft.com/api/records/1.0/search/?dataset=1000-largest-us-cities-by-population-with-geographic-coordinates&q=&rows=1000&sort=-rank&facet=city&facet=state')\n      // .then(resp => resp.json())\n      // .then(cities => {\n      //   console.log(cities.records)\n      //   this.props.fetchCitiesSuccess(cities.records)\n      // })\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n \n\n  render(){ \n    return (\n      <div>\n        <h2>hello</h2>\n        {/* <ClimateMap stations={this.props.stats} cities={this.props.cities}/> */}\n      </div>)\n  };\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//     users: state.users,\n//     stats: state.stats,\n//     cities: state.cities\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   fetchUsersSuccess,\n//   fetchStatSuccess,\n//   fetchCitiesSuccess\n// }\n\nexport default Dashboard\n// connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n\n"]},"metadata":{},"sourceType":"module"}