{"ast":null,"code":"import { useState, useReducer, useCallback, useMemo } from \"react\";\nconst geolocationDefault = {\n  suppressOnMount: false,\n  positionOptions: {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0\n  },\n  watchMode: false\n};\nexport default (({\n  suppressOnMount = geolocationDefault.suppressOnMount,\n  positionOptions = Object.assign({}, geolocationDefault.positionOptions),\n  watchMode = geolocationDefault.watchMode\n} = Object.assign({}, geolocationDefault)) => {\n  const [suppress, setSuppress] = useState(suppressOnMount);\n  const [patch, dispatch] = useReducer((state, {\n    type,\n    value,\n    coords,\n    watchId\n  }) => {\n    switch (type) {\n      case \"enable\":\n        return Object.assign(Object.assign({}, state), {\n          isEnabled: value,\n          coords\n        });\n\n      case \"available\":\n        return Object.assign(Object.assign({}, state), {\n          isAvailable: value\n        });\n\n      case \"suppressed\":\n        return Object.assign(Object.assign({}, state), {\n          isSupressed: value\n        });\n\n      case \"timedout\":\n        return Object.assign(Object.assign({}, state), {\n          isExpired: value\n        });\n\n      case \"watch\":\n        return Object.assign(Object.assign({}, state), {\n          watchId\n        });\n\n      default:\n        return state;\n    }\n  }, {\n    coords: undefined,\n    isSupressed: suppress,\n    isAvailable: true,\n    isEnabled: undefined,\n    isExpired: false,\n    suppressRequest: setSuppress,\n    watchId: undefined\n  });\n  const GeolocationPosition = useCallback(({\n    coords\n  }) => {\n    if (!!coords) {\n      dispatch({\n        type: \"enable\",\n        value: true,\n        coords\n      });\n    }\n  }, []);\n  const GeolocationPositionError = useCallback(error => {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        dispatch({\n          type: \"enable\",\n          value: false\n        });\n        break;\n\n      case error.POSITION_UNAVAILABLE:\n        dispatch({\n          type: \"available\",\n          value: false\n        });\n        break;\n\n      case error.TIMEOUT:\n        dispatch({\n          type: \"timedout\",\n          value: true\n        });\n        break;\n\n      default:\n        throw new Error(\"Position request got an error\");\n    }\n  }, []);\n  useMemo(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.permissions.query({\n        name: \"geolocation\"\n      }).then(({\n        state\n      }) => {\n        if (state === \"denied\") {\n          dispatch({\n            type: \"enable\",\n            value: false\n          });\n        } else {\n          if (!suppress) {\n            if (watchMode) {\n              if (!patch.watchId) {\n                const watchId = navigator.geolocation.watchPosition(GeolocationPosition, GeolocationPositionError, Object.assign({}, positionOptions));\n                dispatch({\n                  type: \"watch\",\n                  watchId\n                });\n              }\n            } else {\n              navigator.geolocation.getCurrentPosition(GeolocationPosition, GeolocationPositionError, Object.assign({}, positionOptions));\n            }\n          } else {\n            dispatch({\n              type: \"suppressed\",\n              value: true\n            });\n          }\n        }\n      }).catch(error => {\n        throw new Error(error);\n      });\n    } else {\n      dispatch({\n        type: \"available\",\n        value: false\n      });\n    } // eslint-disable-next-line\n\n  }, [suppress, watchMode, patch.watchId]);\n  return patch;\n});","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { useState, useReducer, useCallback, useMemo } from \"react\";\nconst geolocationDefault = {\n    suppressOnMount: false,\n    positionOptions: {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n    },\n    watchMode: false,\n};\nexport default ({ suppressOnMount = geolocationDefault.suppressOnMount, positionOptions = Object.assign({}, geolocationDefault.positionOptions), watchMode = geolocationDefault.watchMode, } = Object.assign({}, geolocationDefault)) => {\n    const [suppress, setSuppress] = useState(suppressOnMount);\n    const [patch, dispatch] = useReducer((state, { type, value, coords, watchId }) => {\n        switch (type) {\n            case \"enable\":\n                return Object.assign(Object.assign({}, state), { isEnabled: value, coords });\n            case \"available\":\n                return Object.assign(Object.assign({}, state), { isAvailable: value });\n            case \"suppressed\":\n                return Object.assign(Object.assign({}, state), { isSupressed: value });\n            case \"timedout\":\n                return Object.assign(Object.assign({}, state), { isExpired: value });\n            case \"watch\":\n                return Object.assign(Object.assign({}, state), { watchId });\n            default:\n                return state;\n        }\n    }, {\n        coords: undefined,\n        isSupressed: suppress,\n        isAvailable: true,\n        isEnabled: undefined,\n        isExpired: false,\n        suppressRequest: setSuppress,\n        watchId: undefined,\n    });\n    const GeolocationPosition = useCallback(({ coords }) => {\n        if (!!coords) {\n            dispatch({ type: \"enable\", value: true, coords });\n        }\n    }, []);\n    const GeolocationPositionError = useCallback((error) => {\n        switch (error.code) {\n            case error.PERMISSION_DENIED:\n                dispatch({ type: \"enable\", value: false });\n                break;\n            case error.POSITION_UNAVAILABLE:\n                dispatch({ type: \"available\", value: false });\n                break;\n            case error.TIMEOUT:\n                dispatch({ type: \"timedout\", value: true });\n                break;\n            default:\n                throw new Error(\"Position request got an error\");\n        }\n    }, []);\n    useMemo(() => {\n        if (\"geolocation\" in navigator) {\n            navigator.permissions.query({ name: \"geolocation\" }).then(({ state }) => {\n                if (state === \"denied\") {\n                    dispatch({ type: \"enable\", value: false });\n                }\n                else {\n                    if (!suppress) {\n                        if (watchMode) {\n                            if (!patch.watchId) {\n                                const watchId = navigator.geolocation.watchPosition(GeolocationPosition, GeolocationPositionError, Object.assign({}, positionOptions));\n                                dispatch({ type: \"watch\", watchId });\n                            }\n                        }\n                        else {\n                            navigator.geolocation.getCurrentPosition(GeolocationPosition, GeolocationPositionError, Object.assign({}, positionOptions));\n                        }\n                    }\n                    else {\n                        dispatch({ type: \"suppressed\", value: true });\n                    }\n                }\n            }).catch((error) => {\n                throw new Error(error);\n            });\n        }\n        else {\n            dispatch({ type: \"available\", value: false });\n        }\n        // eslint-disable-next-line\n    }, [suppress, watchMode, patch.watchId]);\n    return patch;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}