{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore';\nimport { Dropdown, Checkbox } from 'semantic-ui-react';\nimport mapStyles from './mapStyles';\nimport MoreDetails from './MoreDetails';\nimport useMouse from '@react-hook/mouse-position';\nexport class ClimateMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      showClimateScore: false,\n      coords: {\n        lat: -23.304354,\n        lng: 151.916417\n      },\n      address: 'Wilson Island, Australia',\n      allScores: false,\n      showAQI: true,\n      hoveredPinStat: {}\n    };\n\n    this.mapCLicked = (mapProps, map, event) => {\n      console.log(event);\n    };\n\n    this.onMarkerDragEnd = coord => {\n      const {\n        latLng\n      } = coord;\n      const newLat = latLng.lat();\n      const newLon = latLng.lng();\n      this.setState({\n        coords: {\n          lat: newLat,\n          lng: newLon\n        }\n      });\n      console.log(this.state.coords);\n      this._score.state.lat = newLat;\n      this._score.state.lng = newLon;\n\n      this._map.map.setCenter({\n        lat: newLat,\n        lng: newLon\n      }); // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n      // \t\"method\": \"GET\",\n      // \t\"headers\": {\n      // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n      //   this.setState({\n      //     allScores: false,\n      //   })\n      //   console.log(err)})\n\n\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(newLat, newLon).then(response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress;\n      }, error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        console.log(data);\n        this._score.state.aqi = data.data.aqi;\n      });\n    };\n\n    this.handleSubmit = value => {\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromAddress(`${value.description}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this._score.state.lat = lat;\n        this._score.state.lng = lng;\n\n        this._map.map.setCenter({\n          lat: lat,\n          lng: lng\n        });\n\n        console.log(this._marker.marker.position.lat());\n\n        this._marker.marker.setPosition({\n          lat: lat,\n          lng: lng\n        }); // fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n        //   \"method\": \"GET\",\n        //   \"headers\": {\n        //   \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n        //   \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        //   }\n        // })\n        // .then(resp => resp.json())\n        // .then(data => {\n        //   console.log(data)\n        //   this.setState({\n        //     allScores: {\n        //       ClimateScore: data.ClimateScore,\n        //       DroughtScore: data.DroughtScore,\n        //       FireScore: data.FireScore,\n        //       SeaLevelScore: data.SeaLevelScore,\n        //       StormScore: data.StormScore,\n        //       TempScore: data.TempScore,\n        //     },\n        //   })\n        // })\n        // .catch(err => {\n        // this.setState({\n        //   allScores: false,\n        // })\n        // console.log(err)})\n\n\n        Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n        Geocode.fromLatLng(lat, lng).then(response => {\n          const newAddress = response.results[0].formatted_address;\n          this._score.state.address = newAddress;\n        }, error => {\n          console.error(error);\n        });\n        fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.mouseOut = e => {\n      this._more.state.display = 'none';\n    };\n\n    this.renderMarkers = () => {\n      if (this.state.showAQI) {\n        return this.props.stations.map(statObj => {\n          const google = this.props.google;\n          let iw = 83,\n              ih = 107;\n\n          if (statObj.aqi !== '-') {\n            const test = statObj.uid;\n            return /*#__PURE__*/React.createElement(Marker, {\n              info: statObj,\n              position: {\n                lat: statObj.lat,\n                lng: statObj.lon\n              },\n              onClick: e => this.pinHover(e),\n              onMouseover: e => this.pinHover(e),\n              onMouseout: e => this.mouseOut(e),\n              icon: {\n                url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n                anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n                size: new google.maps.Size(iw / 2, ih / 2),\n                scaledSize: new google.maps.Size(30, 40)\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 11\n              }\n            });\n          }\n        });\n      } else {\n        return this.props.climateScores.map(score => {\n          const numberString = score.ClimateScore.toString();\n          const google = this.props.google;\n          let iw = 83,\n              ih = 107;\n          return /*#__PURE__*/React.createElement(Marker, {\n            position: {\n              lat: score.lat,\n              lng: score.lng\n            },\n            icon: {\n              url: `https://waqi.info/mapicon/${numberString}.50.png`,\n              anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n              size: new google.maps.Size(iw / 2, ih / 2),\n              scaledSize: new google.maps.Size(30, 40)\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 16\n            }\n          });\n        });\n      }\n    };\n\n    this.labelClicked = e => {\n      console.log('working');\n      console.log(e.nativeEvent.target.innerHTML);\n\n      if (e.nativeEvent.target.innerHTML === 'Climate Score™') {\n        this.setState({\n          showAQI: false\n        });\n      }\n    };\n\n    this.markerHover = () => {\n      const google = this.props.google;\n\n      if (this._marker.marker.getAnimation() !== null) {\n        this._marker.marker.setAnimation(null);\n      } else {\n        this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n      }\n    };\n\n    this.pinHover = e => {\n      console.log(e);\n      console.log(this._more);\n      this._more.state.display = 'block';\n      const lat = e.info.lat;\n      const lng = e.info.lon;\n      fetch(`https://api.waqi.info/feed/geo:${lat};${lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        this._more.state.data = data.data;\n        console.log(data);\n      });\n    };\n\n    this.mouseMove = e => {\n      this._more.state.clientX = e.pageX;\n      this._more.state.clientY = e.pageY;\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.coords !== nextState.coords) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      let currentLocation = {\n        lat: lat,\n        lng: lng\n      };\n      this.setState({\n        coords: currentLocation\n      });\n    });\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n  }\n\n  render() {\n    const mapOptions = [{\n      key: 'Climate Score',\n      text: 'Climate Score™',\n      value: 'Climate Score'\n    }, {\n      key: 'Air Quality Index',\n      text: 'Air Quality Index',\n      value: 'Air Quality Index'\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseMove: e => this.mouseMove(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MoreDetails, {\n      ref: more => this._more = more,\n      coords: this.state.coords,\n      pinHover: this.pinHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      onSelect: ({\n        value\n      }) => {\n        this.setState({\n          searchText: value\n        });\n      },\n      onSelect: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ClimateScore, {\n      ref: score => this._score = score,\n      map: this._map,\n      onMarkerDragEnd: this.onMarkerDragEnd,\n      coords: this.state.coords,\n      scores: this.state.allScores,\n      address: this.state.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      ref: map => this._map = map,\n      google: this.props.google,\n      styles: mapStyles,\n      style: {\n        width: '90%',\n        height: '90%'\n      } // mapTypeControlOptions={{\n      //   style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n      //   mapTypeIds: [\n      //     this.props.google.maps.MapTypeId.ROADMAP,\n      //     this.props.google.maps.MapTypeId.SATELLITE,\n      //     this.props.google.maps.MapTypeId.HYBRID\n      //   ]\n      // }}\n      ,\n      onCenterChanged: () => {},\n      initialCenter: this.state.coords,\n      center: this.state.coords,\n      onClick: this.mapCLicked,\n      zoom: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      closeOnChange: true,\n      inline: true,\n      options: mapOptions,\n      onChange: this.labelClicked,\n      defaultValue: mapOptions[1].value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }), this.renderMarkers(), /*#__PURE__*/React.createElement(Marker, {\n      ref: marker => this._marker = marker,\n      onClick: this.onMarkerClick,\n      name: 'Current location',\n      draggable: true,\n      onMouseover: () => this.markerHover(),\n      initialCenter: this.state.coords,\n      position: this.state.coords,\n      onDragend: (t, map, coord) => this.onMarkerDragEnd(coord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8'\n})(ClimateMap);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js"],"names":["React","Component","Map","InfoWindow","Marker","MarkerWithLabel","GoogleApiWrapper","GooglePlacesAutocomplete","Geocode","ClimateScore","Dropdown","Checkbox","mapStyles","MoreDetails","useMouse","ClimateMap","state","searchText","showClimateScore","coords","lat","lng","address","allScores","showAQI","hoveredPinStat","mapCLicked","mapProps","map","event","console","log","onMarkerDragEnd","coord","latLng","newLat","newLon","setState","_score","_map","setCenter","setApiKey","fromLatLng","then","response","newAddress","results","formatted_address","error","fetch","resp","json","data","aqi","handleSubmit","value","fromAddress","description","geometry","location","_marker","marker","position","setPosition","mouseOut","e","_more","display","renderMarkers","props","stations","statObj","google","iw","ih","test","uid","lon","pinHover","url","anchor","maps","Point","size","Size","scaledSize","climateScores","score","numberString","toString","labelClicked","nativeEvent","target","innerHTML","markerHover","getAnimation","setAnimation","Animation","BOUNCE","info","mouseMove","clientX","pageX","clientY","pageY","shouldComponentUpdate","nextProps","nextState","componentDidMount","navigator","geolocation","getCurrentPosition","latitude","longitude","currentLocation","render","mapOptions","key","text","more","width","height","onMarkerClick","t","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper, } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore'\nimport { Dropdown, Checkbox } from 'semantic-ui-react'\nimport mapStyles from './mapStyles'\nimport MoreDetails from './MoreDetails'\nimport useMouse from '@react-hook/mouse-position'\n\n\nexport class ClimateMap extends Component {\n\n  state = {\n    searchText: '',\n    showClimateScore: false,\n    coords: {\n      lat: -23.304354,\n      lng: 151.916417\n    },\n    address: 'Wilson Island, Australia',\n    allScores: false,\n    showAQI: true,\n    hoveredPinStat: {}\n  }\n\n  shouldComponentUpdate( nextProps, nextState ){\n    if (this.state.coords !== nextState.coords){\n      return false\n    } else {\n      return true\n    }\n  }\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude\n      let lng = position.coords.longitude\n      let currentLocation = {lat: lat,lng: lng}\n      this.setState({\n        coords: currentLocation\n      })\n    })\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => console.log(data.data))\n    \n  }\n\n  \n  mapCLicked = (mapProps, map, event) => {\n    console.log(event)\n  }\n\n  onMarkerDragEnd = (coord) => {\n    const { latLng } = coord;\n    const newLat = latLng.lat();\n    const newLon = latLng.lng();\n    this.setState({\n      coords: {\n        lat: newLat,\n        lng: newLon\n      }\n    })\n    console.log(this.state.coords)\n    this._score.state.lat = newLat\n    this._score.state.lng = newLon\n    this._map.map.setCenter({lat: newLat, lng: newLon})    \n    // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n    // \t\"method\": \"GET\",\n    // \t\"headers\": {\n\t  // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t  // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n    //   }\n    // })\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   console.log(data)\n    //   this.setState({\n    //     allScores: {\n    //       ClimateScore: data.ClimateScore,\n    //       DroughtScore: data.DroughtScore,\n    //       FireScore: data.FireScore,\n    //       SeaLevelScore: data.SeaLevelScore,\n    //       StormScore: data.StormScore,\n    //       TempScore: data.TempScore,\n    //     },\n    //   })\n    // })\n    // .catch(err => {\n    //   this.setState({\n    //     allScores: false,\n    //   })\n    //   console.log(err)})\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromLatLng(newLat, newLon).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress\n      },\n      error => {\n        console.error(error);\n      }\n    );\n    fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n      this._score.state.aqi = data.data.aqi})  \n  };\n\n  handleSubmit = (value) => {\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromAddress(`${value.description}`).then(\n      response => {\n      const { lat, lng } = response.results[0].geometry.location;\n      this._score.state.lat = lat\n      this._score.state.lng = lng\n      this._map.map.setCenter({lat: lat, lng: lng})  \n      console.log(this._marker.marker.position.lat())\n      this._marker.marker.setPosition({lat: lat, lng: lng})  \n      // fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n      //   \"method\": \"GET\",\n      //   \"headers\": {\n      //   \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      //   \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n        // this.setState({\n        //   allScores: false,\n        // })\n        // console.log(err)})\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(lat, lng).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress\n      },\n      error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => console.log(data.data))  \n      },\n      error => {\n      console.error(error);\n    })\n  }\n\n  mouseOut = (e) => {\n    this._more.state.display = 'none'\n  }\n\n  renderMarkers = () => {\n    if (this.state.showAQI){\n      return this.props.stations.map((statObj)=>{\n        const google = this.props.google\n        let iw = 83,\n            ih = 107;\n        if (statObj.aqi !== '-'){\n          const test = statObj.uid\n          return (\n          <Marker  info={statObj}\n          position={{lat: statObj.lat, lng: statObj.lon}}\n          onClick={(e)=>this.pinHover(e)}\n          onMouseover={(e)=>this.pinHover(e)}\n          onMouseout={(e)=>this.mouseOut(e)}\n          icon={{\n            url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n            anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n            size: new google.maps.Size(iw / 2, ih / 2),\n            scaledSize: new google.maps.Size(30, 40)\n                        }}\n                        \n                        \n                        /> \n          )\n        \n        }  \n      })\n    } else {\n      return this.props.climateScores.map((score)=>{\n        const numberString = score.ClimateScore.toString()\n        const google = this.props.google\n        let iw = 83,\n            ih = 107\n        return <Marker position={{lat: score.lat, lng: score.lng}}\n        \n        icon={{\n          url: `https://waqi.info/mapicon/${numberString}.50.png`,\n          anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n          size: new google.maps.Size(iw / 2, ih / 2),\n          scaledSize: new google.maps.Size(30, 40)\n        }}\n\n\n        />})\n      }  \n    }\n\n  labelClicked = (e) => {\n    console.log('working')\n    console.log(e.nativeEvent.target.innerHTML)\n    if (e.nativeEvent.target.innerHTML === 'Climate Score™'){\n      this.setState({\n        showAQI: false\n      })\n    }\n  }\n\n  markerHover = () => {\n    const google = this.props.google\n    if (this._marker.marker.getAnimation() !== null) {\n      this._marker.marker.setAnimation(null);\n    } else {\n      this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  }\n\n  pinHover = (e) => {\n    console.log(e)\n    console.log(this._more)\n    this._more.state.display = 'block'\n    const lat = e.info.lat\n    const lng = e.info.lon\n    fetch(`https://api.waqi.info/feed/geo:${lat};${lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => {\n        this._more.state.data = data.data\n        console.log(data)\n      })\n  }\n\n  mouseMove = (e) => {\n    this._more.state.clientX = e.pageX\n    this._more.state.clientY = e.pageY\n  }\n\n  render() {\n    \n    const mapOptions = [\n      {\n        key: 'Climate Score',\n        text: 'Climate Score™',\n        value: 'Climate Score',\n      },\n      {\n        key: 'Air Quality Index',\n        text: 'Air Quality Index',\n        value: 'Air Quality Index',\n      }\n    ] \n    return(\n      <div onMouseMove={(e)=>this.mouseMove(e)}>\n        <MoreDetails ref={(more)=>this._more = more}\n        coords={this.state.coords}\n        pinHover={this.pinHover}\n                      />\n      <GooglePlacesAutocomplete onSelect={({ value }) => {(this.setState({ searchText: value }))}}\n                                    onSelect={this.handleSubmit}\n          />  \n      <ClimateScore ref={(score)=>this._score = score} map={this._map} onMarkerDragEnd={this.onMarkerDragEnd}\n              coords={this.state.coords} scores={this.state.allScores} address={this.state.address} />\n      <Map  ref={(map) => this._map = map}\n            google={this.props.google}\n            styles={mapStyles}\n            style={{width: '90%',height: '90%'}}\n            // mapTypeControlOptions={{\n              //   style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n            //   mapTypeIds: [\n              //     this.props.google.maps.MapTypeId.ROADMAP,\n            //     this.props.google.maps.MapTypeId.SATELLITE,\n            //     this.props.google.maps.MapTypeId.HYBRID\n            //   ]\n            // }}\n            onCenterChanged={()=>{\n            }}\n            initialCenter={this.state.coords}\n            center={this.state.coords}\n            onClick={this.mapCLicked} \n            zoom={14}\n            >\n\n        \n        <Dropdown\n          closeOnChange\n          inline\n          options={mapOptions}\n          onChange={this.labelClicked}\n          defaultValue={mapOptions[1].value}\n          />\n        \n        {this.renderMarkers()}\n\n        <Marker ref={(marker)=>this._marker = marker}\n                onClick={this.onMarkerClick}\n                name={'Current location'} \n                draggable={true}\n                onMouseover={()=>this.markerHover()}\n                initialCenter={this.state.coords}\n                position={this.state.coords}\n                onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}/>\n \n      </Map>\n      </div>)\n\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8')\n})(ClimateMap)"]},"metadata":{},"sourceType":"module"}