{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore';\nimport { Dropdown, Checkbox } from 'semantic-ui-react';\nimport mapStyles from './mapStyles';\nimport MoreDetails from './MoreDetails';\nimport useMouse from '@react-hook/mouse-position';\nimport InfoWindowTest from './InfoWindowTest';\nimport MarkersList from './MarkersList';\nexport class ClimateMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      showClimateScore: false,\n      coords: {\n        lat: -23.304354,\n        lng: 151.916417\n      },\n      address: 'Wilson Island, Australia',\n      allScores: false,\n      showAQI: true,\n      hoveredPinStat: {},\n      hoveredCoords: {\n        lat: '',\n        lng: ''\n      },\n      showInfo: false,\n      activeMarker: {},\n      selectedPlace: {},\n      data: {}\n    };\n\n    this.mapCLicked = (mapProps, map, event) => {\n      console.log(event);\n    };\n\n    this.onMarkerDragEnd = coord => {\n      const {\n        latLng\n      } = coord;\n      const newLat = latLng.lat();\n      const newLon = latLng.lng(); // this.setState({\n      //   coords: {\n      //     lat: newLat,\n      //     lng: newLon\n      //   }\n      // })\n\n      console.log(this.state.coords);\n      this._score.state.coords.lat = newLat;\n      this._score.state.coords.lng = newLon;\n\n      this._map.map.setCenter({\n        lat: newLat,\n        lng: newLon\n      }); // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n      // \t\"method\": \"GET\",\n      // \t\"headers\": {\n      // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n      //   this.setState({\n      //     allScores: false,\n      //   })\n      //   console.log(err)})\n      // Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      // Geocode.fromLatLng(newLat, newLon).then(\n      //   response => {\n      //     const newAddress = response.results[0].formatted_address;\n      //     this._score.state.address = newAddress\n      //   },\n      //   error => {\n      //     console.error(error);\n      //   }\n      // );\n      // fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this._score.state.aqi = data.data.aqi})  \n\n    };\n\n    this.handleSubmit = value => {\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromAddress(`${value.description}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this._score.state.lat = lat;\n        this._score.state.lng = lng;\n\n        this._map.map.setCenter({\n          lat: lat,\n          lng: lng\n        });\n\n        console.log(this._marker.marker.position.lat());\n\n        this._marker.marker.setPosition({\n          lat: lat,\n          lng: lng\n        }); // fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n        //   \"method\": \"GET\",\n        //   \"headers\": {\n        //   \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n        //   \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        //   }\n        // })\n        // .then(resp => resp.json())\n        // .then(data => {\n        //   console.log(data)\n        //   this.setState({\n        //     allScores: {\n        //       ClimateScore: data.ClimateScore,\n        //       DroughtScore: data.DroughtScore,\n        //       FireScore: data.FireScore,\n        //       SeaLevelScore: data.SeaLevelScore,\n        //       StormScore: data.StormScore,\n        //       TempScore: data.TempScore,\n        //     },\n        //   })\n        // })\n        // .catch(err => {\n        // this.setState({\n        //   allScores: false,\n        // })\n        // console.log(err)})\n\n\n        Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n        Geocode.fromLatLng(lat, lng).then(response => {\n          const newAddress = response.results[0].formatted_address;\n          this._score.state.address = newAddress;\n        }, error => {\n          console.error(error);\n        });\n        fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.renderMarkers = () => {\n      if (this.state.showAQI) {\n        return /*#__PURE__*/React.createElement(MarkersList, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return this.props.climateScores.map(score => {\n          const numberString = score.ClimateScore.toString();\n          const google = this.props.google;\n          let iw = 83,\n              ih = 107;\n          return /*#__PURE__*/React.createElement(Marker, {\n            position: {\n              lat: score.lat,\n              lng: score.lng\n            },\n            icon: {\n              url: `https://waqi.info/mapicon/${numberString}.50.png`,\n              anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n              size: new google.maps.Size(iw / 2, ih / 2),\n              scaledSize: new google.maps.Size(30, 40)\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 18\n            }\n          });\n        });\n      }\n    };\n\n    this.labelClicked = e => {\n      console.log('working');\n      console.log(e.nativeEvent.target.innerHTML);\n\n      if (e.nativeEvent.target.innerHTML === 'Climate Score™') {\n        this.setState({\n          showAQI: false\n        });\n      }\n    };\n\n    this.markerHover = () => {\n      const google = this.props.google;\n\n      if (this._marker.marker.getAnimation() !== null) {\n        this._marker.marker.setAnimation(null);\n      } else {\n        this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n      }\n    };\n\n    this.mouseOut = e => {\n      this._more.state.display = 'none'; //   this.setState({\n      //     showInfo: 'false'\n      //   })\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      fetch(`https://api.waqi.info/feed/geo:${marker.info.lat};${marker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        this.setState({\n          data: data.data,\n          selectedPlace: props,\n          activeMarker: marker,\n          showInfo: true\n        });\n        console.log(data);\n      });\n    };\n  }\n\n  // shouldComponentUpdate( nextProps, nextState ){\n  //   if (this.state.coords == nextState.coords){\n  //     return false\n  //   } else {\n  //     return true\n  //   }\n  // }\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      let currentLocation = {\n        lat: lat,\n        lng: lng\n      };\n      this.setState({\n        coords: currentLocation\n      });\n    });\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n  }\n\n  // mouseMove = (e) => {\n  //   this._more.state.clientX = e.pageX\n  //   this._more.state.clientY = e.pageY\n  // }\n  render() {\n    console.log(this.state);\n    const mapOptions = [{\n      key: 'Climate Score',\n      text: 'Climate Score™',\n      value: 'Climate Score'\n    }, {\n      key: 'Air Quality Index',\n      text: 'Air Quality Index',\n      value: 'Air Quality Index'\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MoreDetails, {\n      ref: more => this._more = more,\n      coords: this.state.coords,\n      pinHover: this.pinHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }\n    }, this.state.coords.lat), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      onSelect: ({\n        value\n      }) => {\n        this.setState({\n          searchText: value\n        });\n      },\n      onSelect: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ClimateScore, {\n      ref: score => this._score = score,\n      map: this._map,\n      onMarkerDragEnd: this.onMarkerDragEnd,\n      coords: this.state.coords,\n      scores: this.state.allScores,\n      address: this.state.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      ref: map => this._map = map,\n      google: this.props.google,\n      styles: mapStyles,\n      style: {\n        width: '90%',\n        height: '90%'\n      } // mapTypeControlOptions={{\n      //   style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n      //   mapTypeIds: [\n      //     this.props.google.maps.MapTypeId.ROADMAP,\n      //     this.props.google.maps.MapTypeId.SATELLITE,\n      //     this.props.google.maps.MapTypeId.HYBRID\n      //   ]\n      // }}\n      ,\n      onCenterChanged: () => {},\n      initialCenter: this.state.coords,\n      center: this.state.coords,\n      onClick: this.mapCLicked,\n      zoom: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      closeOnChange: true,\n      inline: true,\n      options: mapOptions,\n      onChange: this.labelClicked,\n      defaultValue: mapOptions[1].value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }\n    }), this.renderMarkers(), /*#__PURE__*/React.createElement(Marker, {\n      ref: marker => this._marker = marker,\n      onClick: this.onMarkerClick,\n      name: 'Current location',\n      draggable: true,\n      onMouseover: () => this.markerHover(),\n      initialCenter: this.state.coords,\n      position: this.state.coords,\n      onDragend: (t, map, coord) => this.onMarkerDragEnd(coord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, this.state.showInfo ? this.state.data.city.name : null)))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8'\n})(ClimateMap);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js"],"names":["React","Component","Map","InfoWindow","Marker","MarkerWithLabel","GoogleApiWrapper","GooglePlacesAutocomplete","Geocode","ClimateScore","Dropdown","Checkbox","mapStyles","MoreDetails","useMouse","InfoWindowTest","MarkersList","ClimateMap","state","searchText","showClimateScore","coords","lat","lng","address","allScores","showAQI","hoveredPinStat","hoveredCoords","showInfo","activeMarker","selectedPlace","data","mapCLicked","mapProps","map","event","console","log","onMarkerDragEnd","coord","latLng","newLat","newLon","_score","_map","setCenter","handleSubmit","value","setApiKey","fromAddress","description","then","response","results","geometry","location","_marker","marker","position","setPosition","fromLatLng","newAddress","formatted_address","error","fetch","resp","json","renderMarkers","props","climateScores","score","numberString","toString","google","iw","ih","url","anchor","maps","Point","size","Size","scaledSize","labelClicked","e","nativeEvent","target","innerHTML","setState","markerHover","getAnimation","setAnimation","Animation","BOUNCE","mouseOut","_more","display","onMarkerClick","info","lon","componentDidMount","navigator","geolocation","getCurrentPosition","latitude","longitude","currentLocation","render","mapOptions","key","text","more","pinHover","width","height","t","city","name","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,UAAb,EAAyBC,MAAzB,EAAiCC,eAAjC,EAAkDC,gBAAlD,QAA2E,mBAA3E;AACA,OAAOC,wBAAP,MAAqC,kCAArC;AACA,OAAO,qDAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,OAAO,MAAMC,UAAN,SAAyBhB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAExCiB,KAFwC,GAEhC;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,gBAAgB,EAAE,KAFZ;AAGNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CAAC,SADA;AAENC,QAAAA,GAAG,EAAE;AAFC,OAHF;AAONC,MAAAA,OAAO,EAAE,0BAPH;AAQNC,MAAAA,SAAS,EAAE,KARL;AASNC,MAAAA,OAAO,EAAE,IATH;AAUNC,MAAAA,cAAc,EAAE,EAVV;AAWNC,MAAAA,aAAa,EAAE;AACbN,QAAAA,GAAG,EAAE,EADQ;AAEbC,QAAAA,GAAG,EAAE;AAFQ,OAXT;AAeNM,MAAAA,QAAQ,EAAE,KAfJ;AAgBNC,MAAAA,YAAY,EAAE,EAhBR;AAiBNC,MAAAA,aAAa,EAAE,EAjBT;AAkBNC,MAAAA,IAAI,EAAE;AAlBA,KAFgC;;AAAA,SA+CxCC,UA/CwC,GA+C3B,CAACC,QAAD,EAAWC,GAAX,EAAgBC,KAAhB,KAA0B;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAjDuC;;AAAA,SAmDxCG,eAnDwC,GAmDrBC,KAAD,IAAW;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAaD,KAAnB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACnB,GAAP,EAAf;AACA,YAAMqB,MAAM,GAAGF,MAAM,CAAClB,GAAP,EAAf,CAH2B,CAI3B;AACA;AACA;AACA;AACA;AACA;;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWG,MAAvB;AACA,WAAKuB,MAAL,CAAY1B,KAAZ,CAAkBG,MAAlB,CAAyBC,GAAzB,GAA+BoB,MAA/B;AACA,WAAKE,MAAL,CAAY1B,KAAZ,CAAkBG,MAAlB,CAAyBE,GAAzB,GAA+BoB,MAA/B;;AACA,WAAKE,IAAL,CAAUV,GAAV,CAAcW,SAAd,CAAwB;AAACxB,QAAAA,GAAG,EAAEoB,MAAN;AAAcnB,QAAAA,GAAG,EAAEoB;AAAnB,OAAxB,EAb2B,CAc3B;AACA;AACA;AACD;AACA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KA1GuC;;AAAA,SA4GxCI,YA5GwC,GA4GxBC,KAAD,IAAW;AACxBxC,MAAAA,OAAO,CAACyC,SAAR,CAAkB,yCAAlB;AACAzC,MAAAA,OAAO,CAAC0C,WAAR,CAAqB,GAAEF,KAAK,CAACG,WAAY,EAAzC,EAA4CC,IAA5C,CACEC,QAAQ,IAAI;AACZ,cAAM;AAAE/B,UAAAA,GAAF;AAAOC,UAAAA;AAAP,YAAe8B,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAAlD;AACA,aAAKZ,MAAL,CAAY1B,KAAZ,CAAkBI,GAAlB,GAAwBA,GAAxB;AACA,aAAKsB,MAAL,CAAY1B,KAAZ,CAAkBK,GAAlB,GAAwBA,GAAxB;;AACA,aAAKsB,IAAL,CAAUV,GAAV,CAAcW,SAAd,CAAwB;AAACxB,UAAAA,GAAG,EAAEA,GAAN;AAAWC,UAAAA,GAAG,EAAEA;AAAhB,SAAxB;;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKmB,OAAL,CAAaC,MAAb,CAAoBC,QAApB,CAA6BrC,GAA7B,EAAZ;;AACA,aAAKmC,OAAL,CAAaC,MAAb,CAAoBE,WAApB,CAAgC;AAACtC,UAAAA,GAAG,EAAEA,GAAN;AAAWC,UAAAA,GAAG,EAAEA;AAAhB,SAAhC,EANY,CAOZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;;;AACFf,QAAAA,OAAO,CAACyC,SAAR,CAAkB,yCAAlB;AACAzC,QAAAA,OAAO,CAACqD,UAAR,CAAmBvC,GAAnB,EAAwBC,GAAxB,EAA6B6B,IAA7B,CACAC,QAAQ,IAAI;AACV,gBAAMS,UAAU,GAAGT,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBS,iBAAvC;AACA,eAAKnB,MAAL,CAAY1B,KAAZ,CAAkBM,OAAlB,GAA4BsC,UAA5B;AACD,SAJD,EAKAE,KAAK,IAAI;AACP3B,UAAAA,OAAO,CAAC2B,KAAR,CAAcA,KAAd;AACD,SAPD;AAQAC,QAAAA,KAAK,CAAE,kCAAiC,KAAK/C,KAAL,CAAWG,MAAX,CAAkBC,GAAI,IAAG,KAAKJ,KAAL,CAAWG,MAAX,CAAkBE,GAAI,kDAAlF,CAAL,CACC6B,IADD,CACMc,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECf,IAFD,CAEMpB,IAAI,IAAIK,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACA,IAAjB,CAFd;AAGC,OA9CH,EA+CEgC,KAAK,IAAI;AACT3B,QAAAA,OAAO,CAAC2B,KAAR,CAAcA,KAAd;AACD,OAjDD;AAkDD,KAhKuC;;AAAA,SAmKxCI,aAnKwC,GAmKxB,MAAM;AACpB,UAAI,KAAKlD,KAAL,CAAWQ,OAAf,EAAuB;AACrB,4BAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACC,OAFH,MAES;AACL,eAAO,KAAK2C,KAAL,CAAWC,aAAX,CAAyBnC,GAAzB,CAA8BoC,KAAD,IAAS;AAC3C,gBAAMC,YAAY,GAAGD,KAAK,CAAC9D,YAAN,CAAmBgE,QAAnB,EAArB;AACA,gBAAMC,MAAM,GAAG,KAAKL,KAAL,CAAWK,MAA1B;AACA,cAAIC,EAAE,GAAG,EAAT;AAAA,cACAC,EAAE,GAAG,GADL;AAEA,8BAAO,oBAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE;AAACtD,cAAAA,GAAG,EAAEiD,KAAK,CAACjD,GAAZ;AAAiBC,cAAAA,GAAG,EAAEgD,KAAK,CAAChD;AAA5B,aAAlB;AAEP,YAAA,IAAI,EAAE;AACJsD,cAAAA,GAAG,EAAG,6BAA4BL,YAAa,SAD3C;AAEJM,cAAAA,MAAM,EAAE,IAAIJ,MAAM,CAACK,IAAP,CAAYC,KAAhB,CAAsBL,EAAE,GAAG,CAA3B,EAA8BC,EAAE,GAAG,CAAL,GAAS,CAAvC,CAFJ;AAGJK,cAAAA,IAAI,EAAE,IAAIP,MAAM,CAACK,IAAP,CAAYG,IAAhB,CAAqBP,EAAE,GAAG,CAA1B,EAA6BC,EAAE,GAAG,CAAlC,CAHF;AAIJO,cAAAA,UAAU,EAAE,IAAIT,MAAM,CAACK,IAAP,CAAYG,IAAhB,CAAqB,EAArB,EAAyB,EAAzB;AAJR,aAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAUG,SAfE,CAAP;AAgBC;AACF,KAxLmC;;AAAA,SA0LpCE,YA1LoC,GA0LpBC,CAAD,IAAO;AACpBhD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACJD,MAAAA,OAAO,CAACC,GAAR,CAAY+C,CAAC,CAACC,WAAF,CAAcC,MAAd,CAAqBC,SAAjC;;AACA,UAAIH,CAAC,CAACC,WAAF,CAAcC,MAAd,CAAqBC,SAArB,KAAmC,gBAAvC,EAAwD;AACtD,aAAKC,QAAL,CAAc;AACZ/D,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF,KAlMuC;;AAAA,SAoMxCgE,WApMwC,GAoM1B,MAAM;AAClB,YAAMhB,MAAM,GAAG,KAAKL,KAAL,CAAWK,MAA1B;;AACA,UAAI,KAAKjB,OAAL,CAAaC,MAAb,CAAoBiC,YAApB,OAAuC,IAA3C,EAAiD;AAC/C,aAAKlC,OAAL,CAAaC,MAAb,CAAoBkC,YAApB,CAAiC,IAAjC;AACD,OAFD,MAEO;AACL,aAAKnC,OAAL,CAAaC,MAAb,CAAoBkC,YAApB,CAAiClB,MAAM,CAACK,IAAP,CAAYc,SAAZ,CAAsBC,MAAvD;AACD;AACF,KA3MuC;;AAAA,SA4MxCC,QA5MwC,GA4M7BV,CAAC,IAAI;AACd,WAAKW,KAAL,CAAW9E,KAAX,CAAiB+E,OAAjB,GAA2B,MAA3B,CADc,CAEhB;AACA;AACA;AACC,KAjNuC;;AAAA,SAmNxCC,aAnNwC,GAmNxB,CAAC7B,KAAD,EAAQX,MAAR,EAAgB2B,CAAhB,KAAsB;AACpCpB,MAAAA,KAAK,CAAE,kCAAiCP,MAAM,CAACyC,IAAP,CAAY7E,GAAI,IAAGoC,MAAM,CAACyC,IAAP,CAAYC,GAAI,kDAAtE,CAAL,CACGhD,IADH,CACQc,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGf,IAFH,CAEQpB,IAAI,IAAI;AACZ,aAAKyD,QAAL,CAAc;AACZzD,UAAAA,IAAI,EAAEA,IAAI,CAACA,IADC;AAEZD,UAAAA,aAAa,EAAEsC,KAFH;AAGZvC,UAAAA,YAAY,EAAE4B,MAHF;AAIZ7B,UAAAA,QAAQ,EAAE;AAJE,SAAd;AAMAQ,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD,OAVH;AAWD,KA/NuC;AAAA;;AAuBxC;AACA;AACA;AACA;AACA;AACA;AACA;AAEAqE,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0C7C,QAAD,IAAc;AACrD,UAAIrC,GAAG,GAAGqC,QAAQ,CAACtC,MAAT,CAAgBoF,QAA1B;AACA,UAAIlF,GAAG,GAAGoC,QAAQ,CAACtC,MAAT,CAAgBqF,SAA1B;AACA,UAAIC,eAAe,GAAG;AAACrF,QAAAA,GAAG,EAAEA,GAAN;AAAUC,QAAAA,GAAG,EAAEA;AAAf,OAAtB;AACA,WAAKkE,QAAL,CAAc;AACZpE,QAAAA,MAAM,EAAEsF;AADI,OAAd;AAGD,KAPD;AAQA1C,IAAAA,KAAK,CAAE,kCAAiC,KAAK/C,KAAL,CAAWG,MAAX,CAAkBC,GAAI,IAAG,KAAKJ,KAAL,CAAWG,MAAX,CAAkBE,GAAI,kDAAlF,CAAL,CACC6B,IADD,CACMc,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECf,IAFD,CAEMpB,IAAI,IAAIK,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACA,IAAjB,CAFd;AAID;;AAqLD;AACA;AACA;AACA;AAEA4E,EAAAA,MAAM,GAAG;AACPvE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAjB;AACA,UAAM2F,UAAU,GAAG,CACjB;AACEC,MAAAA,GAAG,EAAE,eADP;AAEEC,MAAAA,IAAI,EAAE,gBAFR;AAGE/D,MAAAA,KAAK,EAAE;AAHT,KADiB,EAMjB;AACE8D,MAAAA,GAAG,EAAE,mBADP;AAEEC,MAAAA,IAAI,EAAE,mBAFR;AAGE/D,MAAAA,KAAK,EAAE;AAHT,KANiB,CAAnB;AAYA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAGgE,IAAD,IAAQ,KAAKhB,KAAL,GAAagB,IAAvC;AACA,MAAA,MAAM,EAAE,KAAK9F,KAAL,CAAWG,MADnB;AAEA,MAAA,QAAQ,EAAE,KAAK4F,QAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK/F,KAAL,CAAWG,MAAX,CAAkBC,GAAvB,CAPA,eAQA,oBAAC,wBAAD;AAA0B,MAAA,QAAQ,EAAE,CAAC;AAAE0B,QAAAA;AAAF,OAAD,KAAe;AAAE,aAAKyC,QAAL,CAAc;AAAEtE,UAAAA,UAAU,EAAE6B;AAAd,SAAd,CAAD;AAAuC,OAA3F;AAC8B,MAAA,QAAQ,EAAE,KAAKD,YAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,eAWA,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAGwB,KAAD,IAAS,KAAK3B,MAAL,GAAc2B,KAA1C;AAAiD,MAAA,GAAG,EAAE,KAAK1B,IAA3D;AAAiE,MAAA,eAAe,EAAE,KAAKN,eAAvF;AACQ,MAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWG,MAD3B;AACmC,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWO,SADtD;AACiE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWM,OADrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,eAaA,oBAAC,GAAD;AAAM,MAAA,GAAG,EAAGW,GAAD,IAAS,KAAKU,IAAL,GAAYV,GAAhC;AACM,MAAA,MAAM,EAAE,KAAKkC,KAAL,CAAWK,MADzB;AAEM,MAAA,MAAM,EAAE9D,SAFd;AAGM,MAAA,KAAK,EAAE;AAACsG,QAAAA,KAAK,EAAE,KAAR;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAHb,CAIM;AACE;AACF;AACE;AACF;AACA;AACA;AACA;AAXN;AAYM,MAAA,eAAe,EAAE,MAAI,CACpB,CAbP;AAcM,MAAA,aAAa,EAAE,KAAKjG,KAAL,CAAWG,MAdhC;AAeM,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MAfzB;AAgBM,MAAA,OAAO,EAAE,KAAKY,UAhBpB;AAiBM,MAAA,IAAI,EAAE,EAjBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAoBE,oBAAC,QAAD;AACE,MAAA,aAAa,MADf;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,OAAO,EAAE4E,UAHX;AAIE,MAAA,QAAQ,EAAE,KAAKzB,YAJjB;AAKE,MAAA,YAAY,EAAEyB,UAAU,CAAC,CAAD,CAAV,CAAc7D,KAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EA4BG,KAAKoB,aAAL,EA5BH,eA6BE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAGV,MAAD,IAAU,KAAKD,OAAL,GAAeC,MAAtC;AACQ,MAAA,OAAO,EAAE,KAAKwC,aADtB;AAEQ,MAAA,IAAI,EAAE,kBAFd;AAGQ,MAAA,SAAS,EAAE,IAHnB;AAIQ,MAAA,WAAW,EAAE,MAAI,KAAKR,WAAL,EAJzB;AAKQ,MAAA,aAAa,EAAE,KAAKxE,KAAL,CAAWG,MALlC;AAMQ,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,MAN7B;AAOQ,MAAA,SAAS,EAAE,CAAC+F,CAAD,EAAIjF,GAAJ,EAASK,KAAT,KAAmB,KAAKD,eAAL,CAAqBC,KAArB,CAPtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,eAqCE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWY,YADrB;AAEE,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWW,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKX,KAAL,CAAWW,QAAX,GAAqB,KAAKX,KAAL,CAAWc,IAAX,CAAgBqF,IAAhB,CAAqBC,IAA1C,GAAiD,IAAtD,CADF,CAJJ,CArCF,CAbA,CADF;AA8DD;;AAlTuC;AAoT1C,eAAehH,gBAAgB,CAAC;AAC9BiH,EAAAA,MAAM,EAAG;AADqB,CAAD,CAAhB,CAEZtG,UAFY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper, } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore'\nimport { Dropdown, Checkbox } from 'semantic-ui-react'\nimport mapStyles from './mapStyles'\nimport MoreDetails from './MoreDetails'\nimport useMouse from '@react-hook/mouse-position'\nimport InfoWindowTest from './InfoWindowTest'\nimport MarkersList from './MarkersList'\n\n\nexport class ClimateMap extends Component {\n\n  state = {\n    searchText: '',\n    showClimateScore: false,\n    coords: {\n      lat: -23.304354,\n      lng: 151.916417\n    },\n    address: 'Wilson Island, Australia',\n    allScores: false,\n    showAQI: true,\n    hoveredPinStat: {},\n    hoveredCoords: {\n      lat: '',\n      lng: ''\n    },\n    showInfo: false,\n    activeMarker: {},\n    selectedPlace: {},\n    data: {}\n  }\n\n  // shouldComponentUpdate( nextProps, nextState ){\n  //   if (this.state.coords == nextState.coords){\n  //     return false\n  //   } else {\n  //     return true\n  //   }\n  // }\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude\n      let lng = position.coords.longitude\n      let currentLocation = {lat: lat,lng: lng}\n      this.setState({\n        coords: currentLocation\n      })\n    })\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => console.log(data.data))\n    \n  }\n\n  \n  mapCLicked = (mapProps, map, event) => {\n    console.log(event)\n  }\n\n  onMarkerDragEnd = (coord) => {\n    const { latLng } = coord;\n    const newLat = latLng.lat();\n    const newLon = latLng.lng();\n    // this.setState({\n    //   coords: {\n    //     lat: newLat,\n    //     lng: newLon\n    //   }\n    // })\n    console.log(this.state.coords)\n    this._score.state.coords.lat = newLat\n    this._score.state.coords.lng = newLon\n    this._map.map.setCenter({lat: newLat, lng: newLon})    \n    // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n    // \t\"method\": \"GET\",\n    // \t\"headers\": {\n\t  // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t  // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n    //   }\n    // })\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   console.log(data)\n    //   this.setState({\n    //     allScores: {\n    //       ClimateScore: data.ClimateScore,\n    //       DroughtScore: data.DroughtScore,\n    //       FireScore: data.FireScore,\n    //       SeaLevelScore: data.SeaLevelScore,\n    //       StormScore: data.StormScore,\n    //       TempScore: data.TempScore,\n    //     },\n    //   })\n    // })\n    // .catch(err => {\n    //   this.setState({\n    //     allScores: false,\n    //   })\n    //   console.log(err)})\n    // Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    // Geocode.fromLatLng(newLat, newLon).then(\n    //   response => {\n    //     const newAddress = response.results[0].formatted_address;\n    //     this._score.state.address = newAddress\n    //   },\n    //   error => {\n    //     console.error(error);\n    //   }\n    // );\n    // fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   console.log(data)\n    //   this._score.state.aqi = data.data.aqi})  \n  };\n\n  handleSubmit = (value) => {\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromAddress(`${value.description}`).then(\n      response => {\n      const { lat, lng } = response.results[0].geometry.location;\n      this._score.state.lat = lat\n      this._score.state.lng = lng\n      this._map.map.setCenter({lat: lat, lng: lng})  \n      console.log(this._marker.marker.position.lat())\n      this._marker.marker.setPosition({lat: lat, lng: lng})  \n      // fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n      //   \"method\": \"GET\",\n      //   \"headers\": {\n      //   \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      //   \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n        // this.setState({\n        //   allScores: false,\n        // })\n        // console.log(err)})\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(lat, lng).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress\n      },\n      error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => console.log(data.data))  \n      },\n      error => {\n      console.error(error);\n    })\n  }\n\n  \n  renderMarkers = () => {\n    if (this.state.showAQI){\n      return <MarkersList/>\n      } else {\n        return this.props.climateScores.map((score)=>{\n          const numberString = score.ClimateScore.toString()\n          const google = this.props.google\n          let iw = 83,\n          ih = 107\n          return <Marker position={{lat: score.lat, lng: score.lng}}\n          \n          icon={{\n            url: `https://waqi.info/mapicon/${numberString}.50.png`,\n            anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n            size: new google.maps.Size(iw / 2, ih / 2),\n            scaledSize: new google.maps.Size(30, 40)\n          }}\n          \n          \n          />})\n        }  \n      }\n      \n      labelClicked = (e) => {\n        console.log('working')\n    console.log(e.nativeEvent.target.innerHTML)\n    if (e.nativeEvent.target.innerHTML === 'Climate Score™'){\n      this.setState({\n        showAQI: false\n      })\n    }\n  }\n\n  markerHover = () => {\n    const google = this.props.google\n    if (this._marker.marker.getAnimation() !== null) {\n      this._marker.marker.setAnimation(null);\n    } else {\n      this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  }\n  mouseOut = e => {\n    this._more.state.display = 'none'\n  //   this.setState({\n  //     showInfo: 'false'\n  //   })\n  }\n  \n  onMarkerClick = (props, marker, e) => {\n    fetch(`https://api.waqi.info/feed/geo:${marker.info.lat};${marker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          data: data.data,\n          selectedPlace: props,\n          activeMarker: marker,\n          showInfo: true\n        })\n        console.log(data)\n      })\n  }\n\n  // mouseMove = (e) => {\n  //   this._more.state.clientX = e.pageX\n  //   this._more.state.clientY = e.pageY\n  // }\n\n  render() {\n    console.log(this.state)\n    const mapOptions = [\n      {\n        key: 'Climate Score',\n        text: 'Climate Score™',\n        value: 'Climate Score',\n      },\n      {\n        key: 'Air Quality Index',\n        text: 'Air Quality Index',\n        value: 'Air Quality Index',\n      }\n    ] \n    return(\n      <div \n      // onMouseMove={(e)=>this.mouseMove(e)}\n      >\n        <MoreDetails ref={(more)=>this._more = more}\n        coords={this.state.coords}\n        pinHover={this.pinHover}\n                      />\n      <h2>{this.state.coords.lat}</h2>\n      <GooglePlacesAutocomplete onSelect={({ value }) => {(this.setState({ searchText: value }))}}\n                                    onSelect={this.handleSubmit}\n          />  \n      <ClimateScore ref={(score)=>this._score = score} map={this._map} onMarkerDragEnd={this.onMarkerDragEnd}\n              coords={this.state.coords} scores={this.state.allScores} address={this.state.address} />\n      <Map  ref={(map) => this._map = map}\n            google={this.props.google}\n            styles={mapStyles}\n            style={{width: '90%',height: '90%'}}\n            // mapTypeControlOptions={{\n              //   style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n            //   mapTypeIds: [\n              //     this.props.google.maps.MapTypeId.ROADMAP,\n            //     this.props.google.maps.MapTypeId.SATELLITE,\n            //     this.props.google.maps.MapTypeId.HYBRID\n            //   ]\n            // }}\n            onCenterChanged={()=>{\n            }}\n            initialCenter={this.state.coords}\n            center={this.state.coords}\n            onClick={this.mapCLicked} \n            zoom={14}\n            >\n\n        <Dropdown\n          closeOnChange\n          inline\n          options={mapOptions}\n          onChange={this.labelClicked}\n          defaultValue={mapOptions[1].value}\n          />\n        \n        {this.renderMarkers()}\n        <Marker ref={(marker)=>this._marker = marker}\n                onClick={this.onMarkerClick}\n                name={'Current location'} \n                draggable={true}\n                onMouseover={()=>this.markerHover()}\n                initialCenter={this.state.coords}\n                position={this.state.coords}\n                onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}/>\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showInfo}>\n          \n            <div>\n              <h1>{this.state.showInfo? this.state.data.city.name : null}</h1>\n            </div>\n        </InfoWindow>\n      </Map>\n      </div>)\n\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8')\n})(ClimateMap)"]},"metadata":{},"sourceType":"module"}