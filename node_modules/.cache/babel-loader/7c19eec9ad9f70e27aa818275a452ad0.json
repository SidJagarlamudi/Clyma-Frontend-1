{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore';\nimport { Image, Loader, Segment, Dimmer } from 'semantic-ui-react';\nexport class ClimateMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      showClimateScore: false,\n      coords: {\n        lat: '-23.304354',\n        lng: '151.916417'\n      },\n      address: 'Wilson Island, Australia',\n      allScores: false\n    };\n\n    this.mapCLicked = (mapProps, map, event) => {\n      console.log('I was clicked!');\n      console.log(mapProps);\n      console.log(map);\n      console.log(event);\n    };\n\n    this.onMarkerDragEnd = coord => {\n      const {\n        latLng\n      } = coord;\n      const newLat = latLng.lat();\n      const newLon = latLng.lng();\n      fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        }\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n        this.setState({\n          allScores: {\n            ClimateScore: data.ClimateScore,\n            DroughtScore: data.DroughtScore,\n            FireScore: data.FireScore,\n            SeaLevelScore: data.SeaLevelScore,\n            StormScore: data.StormScore,\n            TempScore: data.TempScore\n          }\n        });\n      }).catch(err => {\n        this.setState({\n          allScores: false\n        });\n        console.log(err);\n      });\n      this.setState({\n        coords: {\n          lat: newLat,\n          lng: newLon\n        }\n      });\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(this.state.coords.lat, this.state.coords.lng).then(response => {\n        const newAddress = response.results[0].formatted_address;\n        this.setState({\n          address: newAddress\n        });\n      }, error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n    };\n\n    this.handleSubmit = value => {\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromAddress(`${value.description}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        console.log(lat, lng);\n        fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n          }\n        }).then(resp => resp.json()).then(data => {\n          console.log(data);\n          this.setState({\n            allScores: {\n              ClimateScore: data.ClimateScore,\n              DroughtScore: data.DroughtScore,\n              FireScore: data.FireScore,\n              SeaLevelScore: data.SeaLevelScore,\n              StormScore: data.StormScore,\n              TempScore: data.TempScore\n            }\n          });\n        }).catch(err => {\n          this.setState({\n            allScores: false\n          });\n          console.log(err);\n        });\n        Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n        Geocode.fromLatLng(lat, lng).then(response => {\n          const newAddress = response.results[0].formatted_address;\n          this.setState({\n            address: newAddress\n          });\n        }, error => {\n          console.error(error);\n        });\n        this.setState({\n          coords: {\n            lat: lat,\n            lng: lng\n          }\n        });\n        fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.renderMarkers = () => {\n      return this.props.stations.map(statObj => {\n        const google = this.props.google;\n        let iw = 83,\n            ih = 107;\n        return /*#__PURE__*/React.createElement(Marker, Object.assign({}, statObj, {\n          position: {\n            lat: statObj.lat,\n            lng: statObj.lon\n          },\n          icon: {\n            url: `https://waqi.info/mapicon/${statObj.aqi}.30.png`,\n            anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n            size: new google.maps.Size(iw / 2, ih / 2),\n            scaledSize: new google.maps.Size(30, 40)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 14\n          }\n        }));\n      });\n    };\n\n    this.mapDisplay = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(ClimateScore, {\n        coords: this.state.coords,\n        scores: this.state.allScores,\n        address: this.state.address,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n        onSelect: ({\n          value\n        }) => {\n          this.setState({\n            searchText: value\n          });\n        },\n        onSelect: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Map, {\n        google: this.props.google,\n        style: style,\n        initialCenter: this.state.coords,\n        center: this.state.coords,\n        onClick: this.mapCLicked,\n        zoom: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 5\n        }\n      }, this.renderMarkers(), /*#__PURE__*/React.createElement(Marker, {\n        position: {\n          lat: 56.999,\n          lng: 55.888\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'Current location',\n        draggable: true,\n        initialCenter: this.state.coords,\n        position: this.state.coords,\n        onDragend: (t, map, coord) => this.onMarkerDragEnd(coord),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }\n      })));\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      let currentLocation = {\n        lat: lat,\n        lng: lng\n      };\n      this.setState({\n        coords: currentLocation\n      });\n    });\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n  }\n\n  render() {\n    const style = {\n      width: '90%',\n      height: '90%'\n    };\n    const test = document.getElementByID('loader');\n    {\n      test ? this.mapDisplay() : null;\n    }\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8'\n})(ClimateMap);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js"],"names":["React","Component","Map","InfoWindow","Marker","MarkerWithLabel","GoogleApiWrapper","GooglePlacesAutocomplete","Geocode","ClimateScore","Image","Loader","Segment","Dimmer","ClimateMap","state","searchText","showClimateScore","coords","lat","lng","address","allScores","mapCLicked","mapProps","map","event","console","log","onMarkerDragEnd","coord","latLng","newLat","newLon","fetch","then","resp","json","data","setState","DroughtScore","FireScore","SeaLevelScore","StormScore","TempScore","catch","err","setApiKey","fromLatLng","response","newAddress","results","formatted_address","error","handleSubmit","value","fromAddress","description","geometry","location","renderMarkers","props","stations","statObj","google","iw","ih","lon","url","aqi","anchor","maps","Point","size","Size","scaledSize","mapDisplay","style","onMarkerClick","t","componentDidMount","navigator","geolocation","getCurrentPosition","position","latitude","longitude","currentLocation","render","width","height","test","document","getElementByID","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper} from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore'\nimport { Image, Loader, Segment, Dimmer } from 'semantic-ui-react'\n\n\nexport class ClimateMap extends Component {\n\n  state = {\n    searchText: '',\n    showClimateScore: false,\n    coords: {\n      lat: '-23.304354',\n      lng: '151.916417'\n    },\n    address: 'Wilson Island, Australia',\n    allScores: false,\n  }\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude\n      let lng = position.coords.longitude\n      let currentLocation = {lat: lat,lng: lng}\n      this.setState({\n        coords: currentLocation\n      })\n    })\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => console.log(data.data))\n  }\n\n  mapCLicked = (mapProps, map, event) => {\n    console.log('I was clicked!')\n    console.log(mapProps)\n    console.log(map)\n    console.log(event)\n  }\n\n\n  onMarkerDragEnd = (coord) => {\n    const { latLng } = coord;\n    const newLat = latLng.lat();\n    const newLon = latLng.lng();\n    fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n    \t\"method\": \"GET\",\n    \t\"headers\": {\n\t  \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t  \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      }\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n      this.setState({\n        allScores: {\n          ClimateScore: data.ClimateScore,\n          DroughtScore: data.DroughtScore,\n          FireScore: data.FireScore,\n          SeaLevelScore: data.SeaLevelScore,\n          StormScore: data.StormScore,\n          TempScore: data.TempScore,\n        },\n      })\n    })\n    .catch(err => {\n      this.setState({\n        allScores: false,\n      })\n      console.log(err)})\n    this.setState({\n      coords: {\n        lat: newLat,\n        lng: newLon\n      }\n    })\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromLatLng(this.state.coords.lat, this.state.coords.lng).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this.setState({\n          address: newAddress\n        });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => console.log(data.data))  \n  };\n\n  handleSubmit = (value) => {\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromAddress(`${value.description}`).then(\n      response => {\n      const { lat, lng } = response.results[0].geometry.location;\n      console.log(lat, lng);\n      fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n        \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        }\n      })\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data)\n        this.setState({\n          allScores: {\n            ClimateScore: data.ClimateScore,\n            DroughtScore: data.DroughtScore,\n            FireScore: data.FireScore,\n            SeaLevelScore: data.SeaLevelScore,\n            StormScore: data.StormScore,\n            TempScore: data.TempScore,\n          },\n        })\n      })\n      .catch(err => {\n        this.setState({\n          allScores: false,\n        })\n        console.log(err)})\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(lat, lng).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this.setState({\n          address: newAddress\n        });\n      },\n      error => {\n        console.error(error);\n      });\n      this.setState({\n        coords: {\n          lat: lat,\n          lng: lng\n        }\n      })\n      fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => console.log(data.data))  \n      },\n      error => {\n      console.error(error);\n    })\n  }\n\n  renderMarkers = () => {\n    return this.props.stations.map((statObj)=>{\n      const google = this.props.google\n      let iw = 83,\n          ih = 107;\n      return <Marker  {...statObj}\n                      position={{lat: statObj.lat, lng: statObj.lon}}\n                      icon={{\n                        url: `https://waqi.info/mapicon/${statObj.aqi}.30.png`,\n                        anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n                        size: new google.maps.Size(iw / 2, ih / 2),\n                        scaledSize: new google.maps.Size(30, 40)\n                      }}\n        \n      \n      />\n             \n    })\n  }\n\n\n  mapDisplay = () => {\n    return <div>\n    <ClimateScore coords={this.state.coords} scores={this.state.allScores} address={this.state.address} />\n      <GooglePlacesAutocomplete onSelect={({ value }) => {(this.setState({ searchText: value }))}}\n                                onSelect={this.handleSubmit}\n      />\n      \n    <Map  google={this.props.google}\n          style={style} \n          initialCenter={this.state.coords}\n          center={this.state.coords}\n          onClick={this.mapCLicked} \n          zoom={20}\n          >\n      {this.renderMarkers()}\n      <Marker \n        position={{lat: 56.999, lng: 55.888}}\n        />\n      <Marker onClick={this.onMarkerClick}\n              name={'Current location'} \n              draggable={true}\n              initialCenter={this.state.coords}\n              position={this.state.coords}\n              onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}/>\n\n      {/* <InfoWindow onClose={this.onInfoWindowClose}>\n      </InfoWindow> */}\n    </Map>\n    </div>\n  }\n\n  render() {\n    const style = {\n      width: '90%',\n      height: '90%'\n    }\n    const test = document.getElementByID('loader')\n      {test ? this.mapDisplay()\n      : null\n      }\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8')\n})(ClimateMap)"]},"metadata":{},"sourceType":"module"}