{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore';\nexport class ClimateMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      showClimateScore: false,\n      coords: {\n        lat: '40.6499541',\n        lng: '-87.8512693'\n      },\n      allScores: {\n        ClimateScore: 33,\n        DroughtScore: 67,\n        FireScore: 33,\n        SeaLevelScore: 0,\n        StormScore: 63,\n        TempScore: 1\n      }\n    };\n\n    this.mapCLicked = (mapProps, map, event) => {\n      console.log('I was clicked!');\n      console.log(mapProps);\n      console.log(map);\n      console.log(event);\n    };\n\n    this.onMarkerDragEnd = coord => {\n      const {\n        latLng\n      } = coord;\n      const newLat = latLng.lat();\n      const newLon = latLng.lng();\n      fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        }\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n        this.setState({\n          allScores: {\n            ClimateScore: data.ClimateScore,\n            DroughtScore: data.DroughtScore,\n            FireScore: data.FireScore,\n            SeaLevelScore: data.SeaLevelScore,\n            StormScore: data.StormScore,\n            TempScore: data.TempScore\n          }\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n      this.setState({\n        coords: {\n          lat: newLat,\n          lng: newLon\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        searchText: e.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromAddress(`${event.target.firstElementChild.value}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        console.log(lat, lng);\n        this.setState({\n          coords: {\n            lat: lat,\n            lng: lng\n          }\n        });\n      }, error => {\n        console.error(error);\n        console.log(this.state.coords);\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.allScores);\n    console.log(this.state.coords);\n    const style = {\n      width: '90%',\n      height: '90%'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ClimateScore, {\n      coords: this.state.coords,\n      scores: this.state.allScores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.text,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      style: style,\n      initialCenter: this.state.coords,\n      center: this.state.coords,\n      onClick: this.mapCLicked,\n      zoom: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'Current location',\n      draggable: true,\n      onDragend: (t, map, coord) => this.onMarkerDragEnd(coord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8'\n})(ClimateMap);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","Geocode","ClimateScore","ClimateMap","state","searchText","showClimateScore","coords","lat","lng","allScores","DroughtScore","FireScore","SeaLevelScore","StormScore","TempScore","mapCLicked","mapProps","map","event","console","log","onMarkerDragEnd","coord","latLng","newLat","newLon","fetch","then","resp","json","data","setState","catch","err","handleChange","e","target","value","handleSubmit","preventDefault","setApiKey","fromAddress","firstElementChild","response","results","geometry","location","error","render","style","width","height","text","props","google","onMarkerClick","t","onInfoWindowClose","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore'\n\nexport class ClimateMap extends Component {\n  \n  state = {\n    searchText: '',\n    showClimateScore: false,\n    coords: {\n      lat: '40.6499541',\n      lng: '-87.8512693'\n    },\n    allScores: {\n      ClimateScore: 33,\n      DroughtScore: 67,\n      FireScore: 33,\n      SeaLevelScore: 0,\n      StormScore: 63,\n      TempScore: 1\n    } \n  }\n\n  mapCLicked = (mapProps, map, event) => {\n    console.log('I was clicked!')\n    console.log(mapProps)\n    console.log(map)\n    console.log(event)\n  }\n\n\n  onMarkerDragEnd = (coord) => {\n    const { latLng } = coord;\n    const newLat = latLng.lat();\n    const newLon = latLng.lng();\n    fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n    \t\"method\": \"GET\",\n    \t\"headers\": {\n\t  \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t  \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      }\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n      this.setState({\n        allScores: {\n          ClimateScore: data.ClimateScore,\n          DroughtScore: data.DroughtScore,\n          FireScore: data.FireScore,\n          SeaLevelScore: data.SeaLevelScore,\n          StormScore: data.StormScore,\n          TempScore: data.TempScore,\n        },\n      })\n    })\n    .catch(err => {console.log(err)})\n    this.setState({\n      coords: {\n        lat: newLat,\n        lng: newLon\n      }\n    })\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      searchText: e.target.value\n    })\n\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromAddress(`${event.target.firstElementChild.value}`).then(\n      response => {\n      const { lat, lng } = response.results[0].geometry.location;\n      console.log(lat, lng);\n      this.setState({\n        coords: {\n          lat: lat,\n          lng: lng\n        }\n      })\n      },\n      error => {\n      console.error(error);\n      console.log(this.state.coords)\n    })\n  }\n\n  render() {\n    console.log(this.state.allScores)\n    console.log(this.state.coords)\n    const style = {\n      width: '90%',\n      height: '90%'\n    }\n    return (\n      <div>\n      <ClimateScore coords={this.state.coords} scores={this.state.allScores} />\n        <form onSubmit={this.handleSubmit}>\n            <input type='text' value={this.state.text} onChange={this.handleChange} />\n            <input type='submit' value='Search!'/>\n        </form>\n      <Map  google={this.props.google}\n            style={style} \n            initialCenter={this.state.coords}\n            center={this.state.coords}\n            onClick={this.mapCLicked} \n            zoom={14}\n            >\n \n        <Marker onClick={this.onMarkerClick}\n                name={'Current location'} \n                draggable={true}\n                onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}/>\n \n        <InfoWindow onClose={this.onInfoWindowClose}>\n        </InfoWindow>\n      </Map>\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8')\n})(ClimateMap)"]},"metadata":{},"sourceType":"module"}