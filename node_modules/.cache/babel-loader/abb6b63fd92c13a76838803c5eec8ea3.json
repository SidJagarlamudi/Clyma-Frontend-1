{"ast":null,"code":"import React from 'react';\nimport '../App.css';\nimport NavBar from './NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Loading from \"./loading.js\";\nimport cities from './cities.json';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scores: [],\n      coordsAndScores: [],\n      cities: cities.records\n    };\n\n    this.getClimateScores = () => {\n      console.log(this.state.cities);\n      console.log(this.state.cities[1].fields.coordinates[0]);\n      let i = 1;\n      const lat = this.state.cities[i].fields.coordinates[0];\n      const lon = this.state.cities[i][1];\n      fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        }\n      });\n      i = i + 1 .then(resp => resp.json()).then(data => {\n        console.log(data);\n        this.setState({\n          scores: [...this.state.scores, data]\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    this.getClimateScores();\n    this.timerId = setInterval(() => this.getClimateScores(), 10000);\n    console.log(this.state.scores);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    console.log(this.state.cities);\n    console.log(this.state.scores);\n    console.log(this.state.coordsAndScores);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Hello\");\n  }\n\n}\n\nexport default App; // function App() {\n//   return (\n//     <BrowserRouter>\n//     <div className=\"App\">\n//     <NavBar icon=\"logo\" title=\"ClyMate\" description=\"climate app\" />\n//     <Loading />\n//       <Switch>\n//         <Route show={false} path='/home' component={Dashboard} />\n//       </Switch>\n//     </div>\n//     </BrowserRouter>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/App.js"],"names":["React","NavBar","Route","Switch","BrowserRouter","Dashboard","Loading","cities","App","Component","state","scores","coordsAndScores","records","getClimateScores","console","log","fields","coordinates","i","lat","lon","fetch","then","resp","json","data","setState","componentDidMount","timerId","setInterval","componentWillUnmount","clearInterval","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,eAAe,EAAE,EAFX;AAGNL,MAAAA,MAAM,EAAEA,MAAM,CAACM;AAHT,KAFwB;;AAAA,SAmBhCC,gBAnBgC,GAmBb,MAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWH,MAAvB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWH,MAAX,CAAkB,CAAlB,EAAqBU,MAArB,CAA4BC,WAA5B,CAAwC,CAAxC,CAAZ;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,YAAMC,GAAG,GAAG,KAAKV,KAAL,CAAWH,MAAX,CAAkBY,CAAlB,EAAqBF,MAArB,CAA4BC,WAA5B,CAAwC,CAAxC,CAAZ;AACA,YAAMG,GAAG,GAAG,KAAKX,KAAL,CAAWH,MAAX,CAAkBY,CAAlB,EAAqB,CAArB,CAAZ;AACAG,MAAAA,KAAK,CAAE,wCAAuCF,GAAI,IAAGC,GAAI,EAApD,EAAuD;AAC7D,kBAAU,KADmD;AAE7D,mBAAW;AACZ,6BAAmB,8BADP;AAEZ,4BAAkB;AAFN;AAFkD,OAAvD,CAAL;AAOAF,MAAAA,CAAC,GAAGA,CAAC,GAAG,GACPI,IADO,CACFC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADN,EAEPF,IAFO,CAEFG,IAAI,IAAI;AACZX,QAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACD,aAAKC,QAAL,CAAc;AACXhB,UAAAA,MAAM,EAAE,CACN,GAAG,KAAKD,KAAL,CAAWC,MADR,EACgBe,IADhB;AADG,SAAd;AAKA,OATO,CAAR;AAWD,KA3C+B;AAAA;;AAQhCE,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,SAAKI,gBAAL;AACA,SAAKe,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKhB,gBAAL,EAAP,EAAgC,KAAhC,CAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,MAAvB;AACD;;AAEDoB,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACD;;AA4BDI,EAAAA,MAAM,GAAG;AACPlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWH,MAAvB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,MAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,eAAvB;AACA,wBACE,kDADF;AAKD;;AAtD+B;;AAyDlC,eAAeJ,GAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport NavBar from './NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Loading from \"./loading.js\"\nimport cities from './cities.json'\n\nclass App extends React.Component {\n\n  state = {\n    scores: [],\n    coordsAndScores: [],\n    cities: cities.records\n  }\n\n  componentDidMount() {\n    console.log(this.state)\n    this.getClimateScores()\n    this.timerId = setInterval(() => this.getClimateScores(), 10000)\n    console.log(this.state.scores)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId)\n  }\n\n  getClimateScores = () => {\n    console.log(this.state.cities)\n    console.log(this.state.cities[1].fields.coordinates[0])\n    let i = 1\n    const lat = this.state.cities[i].fields.coordinates[0]\n    const lon = this.state.cities[i][1]\n    fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n\t  \"method\": \"GET\",\n\t  \"headers\": {\n\t\t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t\t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n  \t}\n    })\n    i = i + 1\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n\t    this.setState({ \n        scores: [\n          ...this.state.scores, data\n        ]\n      })\n    })\n\n  }\n\n  render() {\n    console.log(this.state.cities)\n    console.log(this.state.scores)\n    console.log(this.state.coordsAndScores)\n    return (\n      <>\n       Hello\n      </>\n    )\n  }\n}\n\nexport default App\n\n// function App() {\n//   return (\n    \n//     <BrowserRouter>\n//     <div className=\"App\">\n//     <NavBar icon=\"logo\" title=\"ClyMate\" description=\"climate app\" />\n//     <Loading />\n//       <Switch>\n//         <Route show={false} path='/home' component={Dashboard} />\n//       </Switch>\n//     </div>\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}