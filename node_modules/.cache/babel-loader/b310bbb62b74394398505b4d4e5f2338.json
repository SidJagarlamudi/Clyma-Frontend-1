{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore';\nimport { Dropdown, Checkbox } from 'semantic-ui-react';\nimport mapStyles from './mapStyles';\nimport MoreDetails from './MoreDetails';\nimport useMouse from '@react-hook/mouse-position';\nexport class ClimateMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      showClimateScore: false,\n      coords: {\n        lat: -23.304354,\n        lng: 151.916417\n      },\n      address: 'Wilson Island, Australia',\n      allScores: false,\n      showAQI: true,\n      hoveredPinStat: {}\n    };\n\n    this.mapCLicked = (mapProps, map, event) => {\n      console.log(event);\n    };\n\n    this.onMarkerDragEnd = coord => {\n      const {\n        latLng\n      } = coord;\n      const newLat = latLng.lat();\n      const newLon = latLng.lng();\n      this._score.state.lat = newLat;\n      this._score.state.lng = newLon;\n\n      this._map.map.setCenter({\n        lat: newLat,\n        lng: newLon\n      }); // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n      // \t\"method\": \"GET\",\n      // \t\"headers\": {\n      // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n      //   this.setState({\n      //     allScores: false,\n      //   })\n      //   console.log(err)})\n\n\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(newLat, newLon).then(response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress;\n      }, error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        console.log(data);\n        this._score.state.aqi = data.data.aqi;\n      });\n    };\n\n    this.handleSubmit = value => {\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromAddress(`${value.description}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this._score.state.lat = lat;\n        this._score.state.lng = lng;\n\n        this._map.map.setCenter({\n          lat: lat,\n          lng: lng\n        });\n\n        console.log(this._marker.marker.position.lat());\n\n        this._marker.marker.setPosition({\n          lat: lat,\n          lng: lng\n        }); // fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n        //   \"method\": \"GET\",\n        //   \"headers\": {\n        //   \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n        //   \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        //   }\n        // })\n        // .then(resp => resp.json())\n        // .then(data => {\n        //   console.log(data)\n        //   this.setState({\n        //     allScores: {\n        //       ClimateScore: data.ClimateScore,\n        //       DroughtScore: data.DroughtScore,\n        //       FireScore: data.FireScore,\n        //       SeaLevelScore: data.SeaLevelScore,\n        //       StormScore: data.StormScore,\n        //       TempScore: data.TempScore,\n        //     },\n        //   })\n        // })\n        // .catch(err => {\n        // this.setState({\n        //   allScores: false,\n        // })\n        // console.log(err)})\n\n\n        Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n        Geocode.fromLatLng(lat, lng).then(response => {\n          const newAddress = response.results[0].formatted_address;\n          this._score.state.address = newAddress;\n        }, error => {\n          console.error(error);\n        });\n        fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.renderMarkers = () => {\n      if (this.state.showAQI) {\n        return this.props.stations.map(statObj => {\n          const google = this.props.google;\n          let iw = 83,\n              ih = 107;\n\n          if (statObj.aqi !== '-') {\n            const test = statObj.uid;\n            return /*#__PURE__*/React.createElement(Marker, {\n              info: statObj,\n              position: {\n                lat: statObj.lat,\n                lng: statObj.lon\n              },\n              onClick: e => this.pinHover(e),\n              onMouseover: e => this.pinHover(e),\n              icon: {\n                url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n                anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n                size: new google.maps.Size(iw / 2, ih / 2),\n                scaledSize: new google.maps.Size(30, 40)\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 11\n              }\n            });\n          }\n        });\n      } else {\n        return this.props.climateScores.map(score => {\n          const numberString = score.ClimateScore.toString();\n          const google = this.props.google;\n          let iw = 83,\n              ih = 107;\n          return /*#__PURE__*/React.createElement(Marker, {\n            position: {\n              lat: score.lat,\n              lng: score.lng\n            },\n            icon: {\n              url: `https://waqi.info/mapicon/${numberString}.50.png`,\n              anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n              size: new google.maps.Size(iw / 2, ih / 2),\n              scaledSize: new google.maps.Size(30, 40)\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 16\n            }\n          });\n        });\n      }\n    };\n\n    this.labelClicked = e => {\n      console.log('working');\n      console.log(e.nativeEvent.target.innerHTML);\n\n      if (e.nativeEvent.target.innerHTML === 'Climate Score™') {\n        this.setState({\n          showAQI: false\n        });\n      }\n    };\n\n    this.markerHover = () => {\n      const google = this.props.google;\n\n      if (this._marker.marker.getAnimation() !== null) {\n        this._marker.marker.setAnimation(null);\n      } else {\n        this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n      }\n    };\n\n    this.pinHover = e => {\n      console.log(e);\n      console.log(this._more);\n      const lat = e.info.lat;\n      const lng = e.info.lon;\n      fetch(`https://api.waqi.info/feed/geo:${lat};${lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        this._more.state.data = data.data;\n        console.log(data);\n      });\n    };\n\n    this.mouseMove = e => {\n      console.log('working!');\n      console.log(e.clientX, e.pageY, e.clientY, e.nativeEvent.target.offsetTop, e.offsetY);\n      this._more.state.clientX = e.pageX;\n      this._more.state.clientY = e.pageY;\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      let currentLocation = {\n        lat: lat,\n        lng: lng\n      };\n      this.setState({\n        coords: currentLocation\n      });\n    });\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n  }\n\n  render() {\n    const mapOptions = [{\n      key: 'Climate Score',\n      text: 'Climate Score™',\n      value: 'Climate Score'\n    }, {\n      key: 'Air Quality Index',\n      text: 'Air Quality Index',\n      value: 'Air Quality Index'\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseMove: e => this.mouseMove(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MoreDetails, {\n      ref: more => this._more = more,\n      coords: this.state.coords,\n      pinHover: this.pinHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      onSelect: ({\n        value\n      }) => {\n        this.setState({\n          searchText: value\n        });\n      },\n      onSelect: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ClimateScore, {\n      ref: score => this._score = score,\n      map: this._map,\n      onMarkerDragEnd: this.onMarkerDragEnd,\n      coords: this.state.coords,\n      scores: this.state.allScores,\n      address: this.state.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      ref: map => this._map = map,\n      google: this.props.google,\n      styles: mapStyles,\n      style: {\n        width: '90%',\n        height: '90%'\n      } // mapTypeControlOptions={{\n      //   style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n      //   mapTypeIds: [\n      //     this.props.google.maps.MapTypeId.ROADMAP,\n      //     this.props.google.maps.MapTypeId.SATELLITE,\n      //     this.props.google.maps.MapTypeId.HYBRID\n      //   ]\n      // }}\n      ,\n      onCenterChanged: () => {},\n      initialCenter: this.state.coords,\n      center: this.state.coords,\n      onClick: this.mapCLicked,\n      zoom: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      closeOnChange: true,\n      inline: true,\n      options: mapOptions,\n      onChange: this.labelClicked,\n      defaultValue: mapOptions[1].value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }), this.renderMarkers(), /*#__PURE__*/React.createElement(Marker, {\n      ref: marker => this._marker = marker,\n      onClick: this.onMarkerClick,\n      name: 'Current location',\n      draggable: true,\n      onMouseover: () => this.markerHover(),\n      initialCenter: this.state.coords,\n      position: this.state.coords,\n      onDragend: (t, map, coord) => this.onMarkerDragEnd(coord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8'\n})(ClimateMap);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js"],"names":["React","Component","Map","InfoWindow","Marker","MarkerWithLabel","GoogleApiWrapper","GooglePlacesAutocomplete","Geocode","ClimateScore","Dropdown","Checkbox","mapStyles","MoreDetails","useMouse","ClimateMap","state","searchText","showClimateScore","coords","lat","lng","address","allScores","showAQI","hoveredPinStat","mapCLicked","mapProps","map","event","console","log","onMarkerDragEnd","coord","latLng","newLat","newLon","_score","_map","setCenter","setApiKey","fromLatLng","then","response","newAddress","results","formatted_address","error","fetch","resp","json","data","aqi","handleSubmit","value","fromAddress","description","geometry","location","_marker","marker","position","setPosition","renderMarkers","props","stations","statObj","google","iw","ih","test","uid","lon","e","pinHover","url","anchor","maps","Point","size","Size","scaledSize","climateScores","score","numberString","toString","labelClicked","nativeEvent","target","innerHTML","setState","markerHover","getAnimation","setAnimation","Animation","BOUNCE","_more","info","mouseMove","clientX","pageY","clientY","offsetTop","offsetY","pageX","componentDidMount","navigator","geolocation","getCurrentPosition","latitude","longitude","currentLocation","render","mapOptions","key","text","more","width","height","onMarkerClick","t","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper, } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore'\nimport { Dropdown, Checkbox } from 'semantic-ui-react'\nimport mapStyles from './mapStyles'\nimport MoreDetails from './MoreDetails'\nimport useMouse from '@react-hook/mouse-position'\n\n\nexport class ClimateMap extends Component {\n\n  state = {\n    searchText: '',\n    showClimateScore: false,\n    coords: {\n      lat: -23.304354,\n      lng: 151.916417\n    },\n    address: 'Wilson Island, Australia',\n    allScores: false,\n    showAQI: true,\n    hoveredPinStat: {}\n  }\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude\n      let lng = position.coords.longitude\n      let currentLocation = {lat: lat,lng: lng}\n      this.setState({\n        coords: currentLocation\n      })\n    })\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => console.log(data.data))\n    \n  }\n\n  \n  mapCLicked = (mapProps, map, event) => {\n    console.log(event)\n  }\n\n  onMarkerDragEnd = (coord) => {\n    const { latLng } = coord;\n    const newLat = latLng.lat();\n    const newLon = latLng.lng();\n    this._score.state.lat = newLat\n    this._score.state.lng = newLon\n    this._map.map.setCenter({lat: newLat, lng: newLon})    \n    // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n    // \t\"method\": \"GET\",\n    // \t\"headers\": {\n\t  // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t  // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n    //   }\n    // })\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   console.log(data)\n    //   this.setState({\n    //     allScores: {\n    //       ClimateScore: data.ClimateScore,\n    //       DroughtScore: data.DroughtScore,\n    //       FireScore: data.FireScore,\n    //       SeaLevelScore: data.SeaLevelScore,\n    //       StormScore: data.StormScore,\n    //       TempScore: data.TempScore,\n    //     },\n    //   })\n    // })\n    // .catch(err => {\n    //   this.setState({\n    //     allScores: false,\n    //   })\n    //   console.log(err)})\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromLatLng(newLat, newLon).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress\n      },\n      error => {\n        console.error(error);\n      }\n    );\n    fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n      this._score.state.aqi = data.data.aqi})  \n  };\n\n  handleSubmit = (value) => {\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromAddress(`${value.description}`).then(\n      response => {\n      const { lat, lng } = response.results[0].geometry.location;\n      this._score.state.lat = lat\n      this._score.state.lng = lng\n      this._map.map.setCenter({lat: lat, lng: lng})  \n      console.log(this._marker.marker.position.lat())\n      this._marker.marker.setPosition({lat: lat, lng: lng})  \n      // fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n      //   \"method\": \"GET\",\n      //   \"headers\": {\n      //   \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      //   \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n        // this.setState({\n        //   allScores: false,\n        // })\n        // console.log(err)})\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(lat, lng).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress\n      },\n      error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => console.log(data.data))  \n      },\n      error => {\n      console.error(error);\n    })\n  }\n\n  renderMarkers = () => {\n    if (this.state.showAQI){\n      return this.props.stations.map((statObj)=>{\n        const google = this.props.google\n        let iw = 83,\n            ih = 107;\n        if (statObj.aqi !== '-'){\n          const test = statObj.uid\n          return (\n          <Marker  info={statObj}\n          position={{lat: statObj.lat, lng: statObj.lon}}\n          onClick={(e)=>this.pinHover(e)}\n          onMouseover={(e)=>this.pinHover(e)}\n          icon={{\n            url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n            anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n            size: new google.maps.Size(iw / 2, ih / 2),\n            scaledSize: new google.maps.Size(30, 40)\n                        }}\n                        \n                        \n                        /> \n          )\n        \n        }  \n      })\n    } else {\n      return this.props.climateScores.map((score)=>{\n        const numberString = score.ClimateScore.toString()\n        const google = this.props.google\n        let iw = 83,\n            ih = 107\n        return <Marker position={{lat: score.lat, lng: score.lng}}\n        \n        icon={{\n          url: `https://waqi.info/mapicon/${numberString}.50.png`,\n          anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n          size: new google.maps.Size(iw / 2, ih / 2),\n          scaledSize: new google.maps.Size(30, 40)\n        }}\n\n\n        />})\n      }  \n    }\n\n  labelClicked = (e) => {\n    console.log('working')\n    console.log(e.nativeEvent.target.innerHTML)\n    if (e.nativeEvent.target.innerHTML === 'Climate Score™'){\n      this.setState({\n        showAQI: false\n      })\n    }\n  }\n\n  markerHover = () => {\n    const google = this.props.google\n    if (this._marker.marker.getAnimation() !== null) {\n      this._marker.marker.setAnimation(null);\n    } else {\n      this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  }\n\n  pinHover = (e) => {\n    console.log(e)\n    console.log(this._more)\n    const lat = e.info.lat\n    const lng = e.info.lon\n    fetch(`https://api.waqi.info/feed/geo:${lat};${lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => {\n        this._more.state.data = data.data\n        console.log(data)\n      })\n  }\n\n  mouseMove = (e) => {\n    console.log('working!')\n    console.log(e.clientX, e.pageY, e.clientY, e.nativeEvent.target.offsetTop, e.offsetY)\n    this._more.state.clientX = e.pageX\n    this._more.state.clientY = e.pageY\n  }\n\n  render() {\n    \n    const mapOptions = [\n      {\n        key: 'Climate Score',\n        text: 'Climate Score™',\n        value: 'Climate Score',\n      },\n      {\n        key: 'Air Quality Index',\n        text: 'Air Quality Index',\n        value: 'Air Quality Index',\n      }\n    ] \n    return(\n      <div onMouseMove={(e)=>this.mouseMove(e)}>\n        <MoreDetails ref={(more)=>this._more = more}\n        coords={this.state.coords}\n        pinHover={this.pinHover}\n                      />\n      <GooglePlacesAutocomplete onSelect={({ value }) => {(this.setState({ searchText: value }))}}\n                                    onSelect={this.handleSubmit}\n          />  \n      <ClimateScore ref={(score)=>this._score = score} map={this._map} onMarkerDragEnd={this.onMarkerDragEnd}\n              coords={this.state.coords} scores={this.state.allScores} address={this.state.address} />\n      <Map  ref={(map) => this._map = map}\n            google={this.props.google}\n            styles={mapStyles}\n            style={{width: '90%',height: '90%'}}\n            // mapTypeControlOptions={{\n              //   style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n            //   mapTypeIds: [\n              //     this.props.google.maps.MapTypeId.ROADMAP,\n            //     this.props.google.maps.MapTypeId.SATELLITE,\n            //     this.props.google.maps.MapTypeId.HYBRID\n            //   ]\n            // }}\n            onCenterChanged={()=>{\n            }}\n            initialCenter={this.state.coords}\n            center={this.state.coords}\n            onClick={this.mapCLicked} \n            zoom={14}\n            >\n\n        \n        <Dropdown\n          closeOnChange\n          inline\n          options={mapOptions}\n          onChange={this.labelClicked}\n          defaultValue={mapOptions[1].value}\n          />\n        \n        {this.renderMarkers()}\n\n        <Marker ref={(marker)=>this._marker = marker}\n                onClick={this.onMarkerClick}\n                name={'Current location'} \n                draggable={true}\n                onMouseover={()=>this.markerHover()}\n                initialCenter={this.state.coords}\n                position={this.state.coords}\n                onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}/>\n \n      </Map>\n      </div>)\n\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8')\n})(ClimateMap)"]},"metadata":{},"sourceType":"module"}