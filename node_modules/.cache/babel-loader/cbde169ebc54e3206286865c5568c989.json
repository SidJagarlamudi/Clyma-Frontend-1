{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/loading.js\";\nimport React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport Lottie from \"react-lottie\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as worldData from \"./1055-world-locations.json\";\nimport * as doneData from \"./doneloading.json\";\nimport ReactDOM, { unmountComponentAtNode } from 'react-dom';\nimport loadingGIF from './loadingGIF.gif';\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: worldData.default\n};\nconst defaultOptions2 = {\n  loop: false,\n  autoplay: true,\n  animationData: doneData.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\nexport default class Loading extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLoadingGIF = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: loadingGIF,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    this.state = {\n      done: undefined\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => {\n        this.setState({\n          loading: true\n        });\n        setTimeout(() => {\n          this.setState({\n            done: true\n          });\n        }, 1000);\n      });\n    }, 1500);\n  }\n\n  componentDidUpdate() {\n    unmountComponentAtNode(document.getElementById('loader'));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, !this.state.done ? /*#__PURE__*/React.createElement(FadeIn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, !this.state.loading ? // <Lottie options={defaultOptions} height={700} width={9000} />\n    // ) : (\n    this.renderLoadingGIF() : null //   <Lottie options={defaultOptions2} height={700} width={900} />\n    )) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/loading.js"],"names":["React","FadeIn","Lottie","worldData","doneData","ReactDOM","unmountComponentAtNode","loadingGIF","defaultOptions","loop","autoplay","animationData","default","defaultOptions2","rendererSettings","preserveAspectRatio","Loading","Component","constructor","props","renderLoadingGIF","state","done","undefined","componentDidMount","setTimeout","fetch","then","response","json","setState","loading","componentDidUpdate","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,kCAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,6BAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;AACA,OAAOC,QAAP,IAAmBC,sBAAnB,QAAiD,WAAjD;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAGA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,IADe;AAErBC,EAAAA,QAAQ,EAAE,IAFW;AAGrBC,EAAAA,aAAa,EAAER,SAAS,CAACS;AAHJ,CAAvB;AAKA,MAAMC,eAAe,GAAG;AACtBJ,EAAAA,IAAI,EAAE,KADgB;AAEtBC,EAAAA,QAAQ,EAAE,IAFY;AAGtBC,EAAAA,aAAa,EAAEP,QAAQ,CAACQ,OAHF;AAItBE,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,mBAAmB,EAAE;AADL;AAJI,CAAxB;AASA,eAAe,MAAMC,OAAN,SAAsBhB,KAAK,CAACiB,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,gBAxBmB,GAwBA,MAAM;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACL;AAAK,QAAA,GAAG,EAAEb,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,CAAP;AAGD,KA5BkB;;AAEjB,SAAKc,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEC;AADK,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACAN,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKK,QAAL,CAAc;AAAER,YAAAA,IAAI,EAAE;AAAR,WAAd;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAPH;AAQD,KATS,EASP,IATO,CAAV;AAUD;;AAEDU,EAAAA,kBAAkB,GAAE;AAClB1B,IAAAA,sBAAsB,CAAC2B,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAD,CAAtB;AACD;;AAQDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKd,KAAL,CAAWC,IAAZ,gBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,kDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKD,KAAL,CAAWU,OAAZ,GACC;AACF;AACE,SAAKX,gBAAL,EAHD,GAKC,IALD,CAMD;AAPF,KADF,CADD,GAcC,IAfJ,CADF;AAoBD;;AApDkD","sourcesContent":["import React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport Lottie from \"react-lottie\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as worldData from \"./1055-world-locations.json\";\nimport * as doneData from \"./doneloading.json\";\nimport ReactDOM, { unmountComponentAtNode } from 'react-dom'\nimport loadingGIF from './loadingGIF.gif'\n\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: worldData.default,\n};\nconst defaultOptions2 = {\n  loop: false,\n  autoplay: true,\n  animationData: doneData.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\n\nexport default class Loading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      done: undefined\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        .then(response => response.json())\n        .then(json => {\n          this.setState({ loading: true });\n          setTimeout(() => {\n            this.setState({ done: true });\n          }, 1000);\n        });\n    }, 1500);\n  }\n\n  componentDidUpdate(){\n    unmountComponentAtNode(document.getElementById('loader'))\n  }\n\n  renderLoadingGIF = () => {\n    return <div>\n      <img src={loadingGIF}></img>\n    </div>\n  }\n\n  render() {\n    return (\n      <div id='loader'>\n        {!this.state.done ? (\n          <FadeIn>\n            <div class=\"d-flex justify-content-center align-items-center\">\n              {!this.state.loading ? (\n                // <Lottie options={defaultOptions} height={700} width={9000} />\n              // ) : (\n                this.renderLoadingGIF()\n              ):( \n                null\n              //   <Lottie options={defaultOptions2} height={700} width={900} />\n              )}\n            </div>\n          </FadeIn>\n        ) : (\n          null\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}