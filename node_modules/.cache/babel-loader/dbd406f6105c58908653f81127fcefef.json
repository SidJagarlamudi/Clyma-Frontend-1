{"ast":null,"code":"import React from 'react';\nimport '../App.css';\nimport NavBar from './NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Loading from \"./loading.js\";\nimport cities from './cities.json';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scores: [],\n      coordsAndScores: [],\n      cities: cities.records,\n      one: 346\n    };\n\n    this.getClimateScores = () => {\n      if (this.state.one === 1) {\n        const lat = this.state.cities[this.state.one].fields.coordinates[0];\n        const lon = this.state.cities[this.state.one].fields.coordinates[1];\n        fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n          }\n        }).then(resp => resp.json()).then(dataa => {\n          console.log(dataa);\n          this.setState({\n            scores: [...this.state.scores, { ...dataa,\n              lat: lat,\n              lng: lon\n            }],\n            one: this.state.one + 1\n          });\n        });\n      } else if (this.state.one !== 1001) {\n        console.log(this.state.one);\n        console.log(this.state);\n        const lat = this.state.cities[this.state.one].fields.coordinates[0];\n        const lon = this.state.cities[this.state.one].fields.coordinates[1];\n        console.log(lat, lon);\n        fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n          }\n        }).then(resp => resp.json()).then(dataa => {\n          this.setState({\n            scores: [...this.state.scores, { ...dataa,\n              lat: lat,\n              lng: lon\n            }],\n            one: this.state.one + 1\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    this.getClimateScores();\n    this.timerId = setInterval(() => this.getClimateScores(), 3000);\n    console.log(this.state.scores);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    console.log(this.state.cities);\n    console.log(this.state.scores);\n    console.log(JSON.stringify(this.state.scores));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Hello\");\n  }\n\n}\n\nexport default App; // function App() {\n//   return (\n//     <BrowserRouter>\n//     <div className=\"App\">\n//     <NavBar icon=\"logo\" title=\"ClyMate\" description=\"climate app\" />\n//     <Loading />\n//       <Switch>\n//         <Route show={false} path='/home' component={Dashboard} />\n//       </Switch>\n//     </div>\n//     </BrowserRouter>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/App.js"],"names":["React","NavBar","Route","Switch","BrowserRouter","Dashboard","Loading","cities","App","Component","state","scores","coordsAndScores","records","one","getClimateScores","lat","fields","coordinates","lon","fetch","then","resp","json","dataa","console","log","setState","lng","componentDidMount","timerId","setInterval","componentWillUnmount","clearInterval","render","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,eAAe,EAAE,EAFX;AAGNL,MAAAA,MAAM,EAAEA,MAAM,CAACM,OAHT;AAINC,MAAAA,GAAG,EAAE;AAJC,KAFwB;;AAAA,SAoBhCC,gBApBgC,GAoBb,MAAM;AACvB,UAAI,KAAKL,KAAL,CAAWI,GAAX,KAAmB,CAAvB,EAAyB;AACzB,cAAME,GAAG,GAAG,KAAKN,KAAL,CAAWH,MAAX,CAAkB,KAAKG,KAAL,CAAWI,GAA7B,EAAkCG,MAAlC,CAAyCC,WAAzC,CAAqD,CAArD,CAAZ;AACA,cAAMC,GAAG,GAAG,KAAKT,KAAL,CAAWH,MAAX,CAAkB,KAAKG,KAAL,CAAWI,GAA7B,EAAkCG,MAAlC,CAAyCC,WAAzC,CAAqD,CAArD,CAAZ;AACAE,QAAAA,KAAK,CAAE,wCAAuCJ,GAAI,IAAGG,GAAI,EAApD,EAAuD;AAC7D,oBAAU,KADmD;AAE7D,qBAAW;AACZ,+BAAmB,8BADP;AAEZ,8BAAkB;AAFN;AAFkD,SAAvD,CAAL,CAOCE,IAPD,CAOMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPd,EAQCF,IARD,CAQMG,KAAK,IAAI;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,eAAKG,QAAL,CAAc;AACXhB,YAAAA,MAAM,EAAE,CACN,GAAG,KAAKD,KAAL,CAAWC,MADR,EAEN,EAAC,GAAGa,KAAJ;AAAWR,cAAAA,GAAG,EAACA,GAAf;AAAmBY,cAAAA,GAAG,EAAET;AAAxB,aAFM,CADG;AAKXL,YAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWI,GAAX,GAAiB;AALX,WAAd;AAOA,SAjBD;AAkBC,OArBD,MAqBO,IAAI,KAAKJ,KAAL,CAAWI,GAAX,KAAmB,IAAvB,EAA6B;AACpCW,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWI,GAAvB;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;AACA,cAAMM,GAAG,GAAG,KAAKN,KAAL,CAAWH,MAAX,CAAkB,KAAKG,KAAL,CAAWI,GAA7B,EAAkCG,MAAlC,CAAyCC,WAAzC,CAAqD,CAArD,CAAZ;AACA,cAAMC,GAAG,GAAG,KAAKT,KAAL,CAAWH,MAAX,CAAkB,KAAKG,KAAL,CAAWI,GAA7B,EAAkCG,MAAlC,CAAyCC,WAAzC,CAAqD,CAArD,CAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ,EAAgBG,GAAhB;AACAC,QAAAA,KAAK,CAAE,wCAAuCJ,GAAI,IAAGG,GAAI,EAApD,EAAuD;AAC7D,oBAAU,KADmD;AAE7D,qBAAW;AACZ,+BAAmB,8BADP;AAEZ,8BAAkB;AAFN;AAFkD,SAAvD,CAAL,CAOCE,IAPD,CAOMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPd,EAQCF,IARD,CAQMG,KAAK,IAAI;AACd,eAAKG,QAAL,CAAc;AACXhB,YAAAA,MAAM,EAAE,CACN,GAAG,KAAKD,KAAL,CAAWC,MADR,EAEN,EAAC,GAAGa,KAAJ;AAAWR,cAAAA,GAAG,EAACA,GAAf;AAAmBY,cAAAA,GAAG,EAAET;AAAxB,aAFM,CADG;AAKXL,YAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWI,GAAX,GAAiB;AALX,WAAd;AAOE,SAhBH;AAiBC;AACF,KAlE+B;AAAA;;AAShCe,EAAAA,iBAAiB,GAAG;AAClBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;AACA,SAAKK,gBAAL;AACA,SAAKe,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKhB,gBAAL,EAAP,EAAgC,IAAhC,CAA1B;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,MAAvB;AACD;;AAEDqB,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACD;;AAkDDI,EAAAA,MAAM,GAAG;AACPT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWH,MAAvB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,MAAvB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACC,SAAL,CAAe,KAAK1B,KAAL,CAAWC,MAA1B,CAAZ;AACA,wBACE,kDADF;AAKD;;AA7E+B;;AAgFlC,eAAeH,GAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport NavBar from './NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Loading from \"./loading.js\"\nimport cities from './cities.json'\n\nclass App extends React.Component {\n\n  state = {\n    scores: [],\n    coordsAndScores: [],\n    cities: cities.records,\n    one: 346\n  }\n\n  componentDidMount() {\n    console.log(this.state)\n    this.getClimateScores()\n    this.timerId = setInterval(() => this.getClimateScores(), 3000)\n    console.log(this.state.scores)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId)\n  }\n\n  getClimateScores = () => {\n    if (this.state.one === 1){ \n    const lat = this.state.cities[this.state.one].fields.coordinates[0]\n    const lon = this.state.cities[this.state.one].fields.coordinates[1]\n    fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n\t  \"method\": \"GET\",\n\t  \"headers\": {\n\t\t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t\t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n  \t}\n    })\n    .then(resp => resp.json())\n    .then(dataa => {\n      console.log(dataa)\n\t    this.setState({ \n        scores: [\n          ...this.state.scores, \n          {...dataa, lat:lat,lng: lon}\n        ],\n        one: this.state.one + 1\n      })\n    })\n    } else if (this.state.one !== 1001) {\n    console.log(this.state.one)\n    console.log(this.state)\n    const lat = this.state.cities[this.state.one].fields.coordinates[0]\n    const lon = this.state.cities[this.state.one].fields.coordinates[1]\n    console.log(lat,lon)\n    fetch(`https://climate-score.p.rapidapi.com/${lat}/${lon}`, {\n\t  \"method\": \"GET\",\n\t  \"headers\": {\n\t\t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t\t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n  \t}\n    })\n    .then(resp => resp.json())\n    .then(dataa => {\n\t    this.setState({ \n        scores: [\n          ...this.state.scores, \n          {...dataa, lat:lat,lng: lon}\n        ],\n        one: this.state.one + 1\n        })\n      })\n    }\n  }\n\n  render() {\n    console.log(this.state.cities)\n    console.log(this.state.scores)\n    console.log(JSON.stringify(this.state.scores))\n    return (\n      <>\n       Hello\n      </>\n    )\n  }\n}\n\nexport default App\n\n// function App() {\n//   return (\n    \n//     <BrowserRouter>\n//     <div className=\"App\">\n//     <NavBar icon=\"logo\" title=\"ClyMate\" description=\"climate app\" />\n//     <Loading />\n//       <Switch>\n//         <Route show={false} path='/home' component={Dashboard} />\n//       </Switch>\n//     </div>\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}