{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/Login.js\";\nimport React from 'react';\nimport { loginSuccess } from '../actions/auth';\nimport { connect } from 'react-redux';\nimport { useSpring, animated } from 'react-spring';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const reqObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      };\n      fetch('http://localhost:3001/auth', reqObj).then(resp => resp.json()).then(data => {\n        if (data.error) {\n          alert(data.error);\n        } else {\n          localStorage.setItem('token', data.token);\n          this.props.loginSuccess(data);\n          this.props.history.push('/home');\n        }\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\n\n    const trans1 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`;\n\n    const trans2 = (x, y) => `translate3d(${x / 8 + 35}px,${y / 8 - 230}px,0)`;\n\n    const trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`;\n\n    const trans4 = (x, y) => `translate3d(${x / 3.5}px,${y / 3.5}px,0)`;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Please sign-in below!\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: 'username',\n      placeholder: \"username\",\n      onChange: this.handleInputChange,\n      value: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: 'password',\n      placeholder: \"password\",\n      onChange: this.handleInputChange,\n      value: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  loginSuccess\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/Login.js"],"names":["React","loginSuccess","connect","useSpring","animated","Login","Component","constructor","props","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","reqObj","method","headers","body","JSON","stringify","state","fetch","then","resp","json","data","error","alert","localStorage","setItem","token","history","push","username","password","render","calc","x","y","window","innerWidth","innerHeight","trans1","trans2","trans3","trans4","bind","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { loginSuccess } from '../actions/auth'\nimport { connect }  from 'react-redux'\nimport { useSpring, animated } from 'react-spring'\n\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n    }\n  }\n\n  handleInputChange = (e) => { this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const reqObj = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json'},\n      body: JSON.stringify(this.state)\n    }\n\n    fetch('http://localhost:3001/auth', reqObj)\n    .then(resp => resp.json())\n    .then(data => {\n      if (data.error) {\n        alert(data.error)\n      } else {\n        localStorage.setItem('token', data.token)\n        this.props.loginSuccess(data)\n        this.props.history.push('/home')\n      }\n    })\n  }\n\n  render(){\n    const calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\n    const trans1 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`\n    const trans2 = (x, y) => `translate3d(${x / 8 + 35}px,${y / 8 - 230}px,0)`\n    const trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`\n    const trans4 = (x, y) => `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n\n    return (\n      <div>\n        <h3>Please sign-in below!</h3>\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <input name={'username'} placeholder='username' onChange={this.handleInputChange} value={this.state.username} />\n          <input name={'password'} placeholder='password' onChange={this.handleInputChange} value={this.state.password} />\n          <input type='submit' value='login' />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  loginSuccess\n}\n\nexport default connect(null, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}