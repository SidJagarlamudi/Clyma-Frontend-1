{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore';\nimport Grid from '@material-ui/core/Grid';\nimport { Dropdown, Checkbox, Button, Icon, Image, Segment } from 'semantic-ui-react';\nimport mapStyles from './mapStyles';\nimport Markers from './Markers';\nimport { HorizontalBar, Bar, Line } from 'react-chartjs-2';\nimport xyz from './xyz.jpg';\nimport LessThan25AQI from '../images/LessThan25AQI.jpg';\nimport LessThan50AQI from '../images/LessThan50AQI.jpg';\nimport LessThan100AQI from '../images/LessThan100AQI.jpg';\nimport LessThan150AQI from '../images/LessThan150AQI.jpg';\nimport LessThan200AQI from '../images/LessThan200AQI.jpg';\nimport LessThan300AQI from '../images/LessThan300AQI.jpg';\nimport Over300AQI from '../images/Over300AQI.jpg';\nimport { fetchCitiesSuccess } from \"../actions/city\";\nimport UserLocations from './UserLocations';\nimport { createLocationSuccess } from '../actions/location';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nexport class ClimateMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      showClimateScore: false,\n      coords: {\n        lat: -23.304354,\n        lng: 151.916417\n      },\n      address: 'Wilson Island, Australia',\n      allScores: false,\n      showAQI: true,\n      hoveredPinStat: {},\n      hoveredCoords: {\n        lat: '',\n        lng: ''\n      },\n      showInfo: false,\n      activeMarker: {},\n      selectedPlace: {},\n      data: false,\n      markersRendered: false\n    };\n\n    this.mapCLicked = (mapProps, map, event) => {\n      console.log(event);\n    };\n\n    this.onMarkerDragEnd = coord => {\n      const {\n        latLng\n      } = coord;\n      const newLat = latLng.lat();\n      const newLon = latLng.lng();\n      this.setState({\n        coords: {\n          lat: newLat,\n          lng: newLon\n        }\n      });\n      console.log(this.state.coords);\n      this._score.state.coords.lat = newLat;\n      this._score.state.coords.lng = newLon;\n\n      this._map.map.setCenter({\n        lat: newLat,\n        lng: newLon\n      }); // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n      // \t\"method\": \"GET\",\n      // \t\"headers\": {\n      // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n      //   this.setState({\n      //     allScores: false,\n      //   })\n      //   console.log(err)})\n\n\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(newLat, newLon).then(response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress;\n      }, error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        console.log(data);\n        this._score.state.aqi = data.data.aqi;\n      });\n    };\n\n    this.handleSubmit = value => {\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromAddress(`${value.description}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this.setState({\n          coords: {\n            lat: lat,\n            lng: lng\n          }\n        });\n\n        this._map.map.setCenter({\n          lat: lat,\n          lng: lng\n        });\n\n        this._marker.marker.setPosition({\n          lat: lat,\n          lng: lng\n        });\n\n        console.log(this._search);\n\n        this._search.clearValue();\n\n        fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n          }\n        }).then(resp => resp.json()).then(data => {\n          console.log(data);\n          this.setState({\n            allScores: {\n              ClimateScore: data.ClimateScore,\n              DroughtScore: data.DroughtScore,\n              FireScore: data.FireScore,\n              SeaLevelScore: data.SeaLevelScore,\n              StormScore: data.StormScore,\n              TempScore: data.TempScore\n            }\n          });\n        }).catch(err => {\n          this.setState({\n            allScores: false\n          });\n        });\n        console.log(this.state.coords);\n        Geocode.fromLatLng(lat, lng).then(response => {// const newAddress = response.results[0].formatted_address;\n          // this._score.state.address = newAddress\n        }, error => {\n          console.error(error);\n        });\n        fetch(`https://api.waqi.info/feed/geo:${lat};${lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(locationData => {\n          console.log(locationData);\n          this.setState({\n            data: locationData.data\n          });\n        }); // Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      });\n    };\n\n    this.labelClicked = e => {\n      console.log('working');\n      console.log(e.nativeEvent.target.innerHTML);\n\n      if (e.nativeEvent.target.innerHTML === 'Climate Scoreâ„¢') {\n        this.setState({\n          showAQI: false\n        });\n      }\n    };\n\n    this.markerHover = () => {\n      const google = this.props.google;\n\n      if (this._marker.marker.getAnimation() !== null) {\n        this._marker.marker.setAnimation(null);\n      } else {\n        this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n      }\n    };\n\n    this.mouseOut = e => {\n      this.setState({\n        showInfo: false\n      });\n    };\n\n    this.onMarkerClick = (marker, e) => {\n      fetch(`https://api.waqi.info/feed/geo:${marker.info.lat};${marker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        this.setState({\n          data: data.data\n        });\n        console.log(data);\n      });\n    };\n\n    this.onMarkerHover = (props, marker, e) => {\n      console.log(marker);\n      console.log(e);\n      this.setState({\n        activeMarker: marker,\n        showInfo: true\n      });\n    };\n\n    this.addLocation = () => {\n      console.log('I WAS CLICKED!!!!');\n\n      if (this.state.data !== false) {\n        const newLocation = {\n          name: this.state.data.city.name,\n          user_id: this.props.auth.id,\n          lat: this.state.data.city.geo[0],\n          lng: this.state.data.city.geo[1]\n        };\n        const reqObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newLocation)\n        };\n        fetch('http://localhost:3001/locations', reqObj).then(resp => resp.json()).then(newLocation => {\n          this.props.createLocationSuccess(newLocation);\n        });\n      }\n    };\n\n    this.goToLocation = location => {\n      console.log('I was clickEd!!');\n      console.log(location);\n\n      this._map.map.setCenter({\n        lat: location.lat,\n        lng: location.lng\n      });\n\n      fetch(`https://api.waqi.info/feed/geo:${location.lat};${location.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        this.setState({\n          data: data.data\n        });\n        console.log(data);\n      });\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.coords !== nextState.coords) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      let currentLocation = {\n        lat: lat,\n        lng: lng\n      };\n      this.setState({\n        coords: currentLocation\n      });\n    });\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n  } // shouldComponentUpdate(nextProps, nextState) {\n  //   if (this.state.coords=== nextState.coords) {\n  //     return false;\n  //   } else {\n  //   return true;\n  //   }\n  // }\n\n\n  render() {\n    let config;\n    let days;\n    let hours;\n    let minutes;\n\n    if (this.state.data !== false) {\n      if (this.state.data.forecast.daily !== undefined && 'o3' in this.state.data.forecast.daily) {\n        let labelArr = [],\n            avgArr = [],\n            minArr = [],\n            maxArr = [];\n        let now = new Date().getTime();\n        let newDate = new Date(this.state.data.time.iso).getTime();\n        console.log(newDate);\n        console.log(now);\n        let distance = newDate - now;\n        days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        console.log('days:' + days + 'hours:' + hours + 'mins:' + minutes);\n\n        for (let i = 0; i < this.state.data.forecast.daily.o3.length; i++) {\n          labelArr.push(new Date(this.state.data.forecast.daily.o3[i].day).toString().substring(0, 10));\n          avgArr.push(this.state.data.forecast.daily.o3[i].avg);\n          minArr.push(this.state.data.forecast.daily.o3[i].min);\n          maxArr.push(this.state.data.forecast.daily.o3[i].max);\n        }\n\n        config = {\n          labels: labelArr,\n          datasets: [{\n            label: \"max\",\n            backgroundColor: '#f7ff66',\n            borderColor: \"#f7ff66\",\n            borderWidth: 0,\n            data: maxArr,\n            fill: \"1\",\n            radius: 1\n          }, {\n            label: \"avg\",\n            backgroundColor: '#4a9eff',\n            // #f7ff66\n            borderColor: '#4a9eff',\n            borderWidth: 1,\n            data: avgArr,\n            fill: \"-1\",\n            line: false,\n            radius: 5\n          }, {\n            label: \"min\",\n            backgroundColor: '#87ff9f',\n            borderColor: \"#87ff9f\",\n            borderWidth: 0,\n            data: minArr,\n            line: false,\n            fill: '1',\n            radius: 1\n          }]\n        };\n      }\n    } // console.log(this.state)\n    // let o3ChartData\n    // let pm10ChartData\n    // if (this.state.data !== false && 'o3' in this.state.data.forecast.daily){\n    //   let labelArr = []\n    //   let dataArr = []\n    //   for(let i=0;i<this.state.data.forecast.daily.o3.length;i++){\n    //     labelArr.push(this.state.data.forecast.daily.o3[i].day)\n    //     dataArr.push(this.state.data.forecast.daily.o3[i].avg)\n    //   }\n    //   o3ChartData = {\n    //     labels: labelArr,\n    //     datasets: [\n    //     { label: `Ozone (O3) - Currently:${'o3' in this.state.data.iaqi ? this.state.data.iaqi.o3.v : '-'}`,\n    //       backgroundColor: 'rgba(75,192,192,1)',\n    //       borderColor: 'rgba(0,0,0,1)',\n    //       borderWidth: 2,\n    //       data: dataArr\n    //     }]\n    //   }\n    // }\n    // if (this.state.data !== false && 'pm10' in this.state.data.forecast.daily){\n    //   let labelArr = []\n    //   let dataArr = []\n    //   for(let i=0;i<this.state.data.forecast.daily.o3.length;i++){\n    //     labelArr.push(this.state.data.forecast.daily.pm10[i].day)\n    //     dataArr.push(this.state.data.forecast.daily.pm10[i].avg)\n    //   }\n    //   pm10ChartData = {\n    //     labels: labelArr,\n    //     datasets: [\n    //       { label: `PM10 (Small Particles) - Currently:${'pm10' in this.state.data.iaqi ? this.state.data.iaqi.pm10.v : '-'}`,\n    //       backgroundColor: 'rgba(75,192,192,1)',\n    //       borderColor: 'rgba(0,0,0,1)',\n    //       borderWidth: 2,\n    //       data: dataArr\n    //     }]\n    //   }\n    // }      \n    // options: {\n    //   tooltips: {\n    //     mode: 'index',\n    //     intersect: false,\n    //     displayColors: false,\n    //   },\n    //   responsive: true,\n    //   title: {\n    //     display: true,\n    //     text: \"Chart.js stackable with Min/Avg/Max\"\n    //   },\n    //   scales: {\n    //     xAxes: [\n    //       {\n    //         type: \"time\",\n    //         stacked: false,\n    //         // time: {\n    //         //   format: timeFormat,\n    //         //   // round: 'day'\n    //         //   tooltipFormat: \"ll HH:mm\"\n    //         // },\n    //         scaleLabel: {\n    //           display: true,\n    //           labelString: \"Date\"\n    //         },\n    //         ticks: {\n    //           maxRotation: 0\n    //         }\n    //       }\n    //     ],\n    //     yAxes: [\n    //       {\n    //         stacked: false,\n    //         scaleLabel: {\n    //           display: true,\n    //           labelString: \"value\"\n    //         }\n    //       }\n    //     ]\n    //   }\n    // }\n\n\n    const mapOptions = [{\n      key: 'Climate Score',\n      text: 'Climate Scoreâ„¢',\n      value: 'Climate Score'\n    }, {\n      key: 'Air Quality Index',\n      text: 'Air Quality Index',\n      value: 'Air Quality Index'\n    }];\n    let response;\n\n    if (this.state.data !== false) {\n      if (this.state.data.aqi <= 25) {\n        response = 'Great Quality!';\n      } else if (this.state.data.aqi <= 50) {\n        response = 'Good';\n      } else {\n        response = 'HIGH';\n      }\n    }\n\n    let FlexImage;\n\n    if (this.state.data !== false && this.state.data.aqi <= 25) {\n      FlexImage = LessThan25AQI;\n    } else if (this.state.data !== false && this.state.data.aqi <= 50) {\n      FlexImage = LessThan50AQI;\n    } else if (this.state.data !== false && this.state.data.aqi <= 100) {\n      FlexImage = LessThan100AQI;\n    } else if (this.state.data !== false && this.state.data.aqi <= 150) {\n      FlexImage = LessThan150AQI;\n    } else if (this.state.data !== false && this.state.data.aqi <= 200) {\n      FlexImage = LessThan200AQI;\n    } else if (this.state.data !== false && this.state.data.aqi <= 300) {\n      FlexImage = LessThan300AQI;\n    } else if (this.state.data !== false && this.state.data.aqi > 300) {\n      FlexImage = Over300AQI;\n    }\n\n    const darkTheme = createMuiTheme({\n      palette: {\n        type: 'dark'\n      }\n    });\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: darkTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ClimateScore, {\n      ref: score => this._score = score,\n      map: this._map,\n      onMarkerDragEnd: this.onMarkerDragEnd,\n      scores: this.state.allScores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      ref: map => this._map = map,\n      google: this.props.google,\n      styles: mapStyles,\n      style: {\n        width: '100%',\n        height: '100%',\n        'border-bottom-left-radius': '15px',\n        'border-bottom-right-radius': '15px',\n        'border-top-left-radius': '15px'\n      },\n      mapTypeControlOptions: {\n        style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n        mapTypeIds: [this.props.google.maps.MapTypeId.ROADMAP, this.props.google.maps.MapTypeId.SATELLITE, this.props.google.maps.MapTypeId.HYBRID]\n      },\n      onCenterChanged: () => {},\n      initialCenter: this.state.coords,\n      center: this.state.coords,\n      onClick: this.mapCLicked,\n      zoom: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      closeOnChange: true,\n      inline: true,\n      options: mapOptions,\n      onChange: this.labelClicked,\n      defaultValue: mapOptions[1].value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Markers, {\n      onMouseover: this.onMarkerHover,\n      onMouseout: this.mouseOut,\n      onClick: this.onMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Marker, {\n      ref: marker => this._marker = marker,\n      onClick: this.onMarkerClick,\n      name: 'Current location',\n      draggable: true,\n      onMouseover: () => this.markerHover(),\n      initialCenter: this.state.coords,\n      position: this.state.coords,\n      onDragend: (t, map, coord) => this.onMarkerDragEnd(coord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      maxWidth: 175,\n      onMouseover: () => this.showInfo(),\n      style: {\n        'background-color': '#000000'\n      },\n      visible: this.state.showInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 11\n      }\n    }, this.state.showInfo ? this.state.activeMarker.info.station.name : null, \" \"))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      ref: search => this._search = search,\n      onSelect: this.handleSubmit,\n      placeholder: \"\\uD83D\\uDD0E Search Anywhere!\" // suggestionsStyles={{container: {width: '50%',height: '100%','border-radius': '1px'}}}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        \"aria-label\": \"recipe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }\n      }, \"R\"),\n      action: /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }\n      })),\n      title: \"Shrimp and Chorizo Paella\",\n      subheader: \"September 14, 2016\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(CardMedia, {\n      image: \"/static/images/cards/paella.jpg\",\n      title: \"Paella dish\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }\n    }, \"This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like.\")), /*#__PURE__*/React.createElement(CardActions, {\n      disableSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"add to favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"share\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ShareIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: console.log('lol'),\n      \"aria-label\": \"show more\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = {\n  createLocationSuccess\n};\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: 'AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8'\n})(ClimateMap);\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedContainer);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","GooglePlacesAutocomplete","Geocode","ClimateScore","Grid","Dropdown","Checkbox","Button","Icon","Image","Segment","mapStyles","Markers","HorizontalBar","Bar","Line","xyz","LessThan25AQI","LessThan50AQI","LessThan100AQI","LessThan150AQI","LessThan200AQI","LessThan300AQI","Over300AQI","fetchCitiesSuccess","UserLocations","createLocationSuccess","connect","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","MoreVertIcon","createMuiTheme","ThemeProvider","ClimateMap","state","searchText","showClimateScore","coords","lat","lng","address","allScores","showAQI","hoveredPinStat","hoveredCoords","showInfo","activeMarker","selectedPlace","data","markersRendered","mapCLicked","mapProps","map","event","console","log","onMarkerDragEnd","coord","latLng","newLat","newLon","setState","_score","_map","setCenter","setApiKey","fromLatLng","then","response","newAddress","results","formatted_address","error","fetch","resp","json","aqi","handleSubmit","value","fromAddress","description","geometry","location","_marker","marker","setPosition","_search","clearValue","DroughtScore","FireScore","SeaLevelScore","StormScore","TempScore","catch","err","locationData","labelClicked","e","nativeEvent","target","innerHTML","markerHover","google","props","getAnimation","setAnimation","maps","Animation","BOUNCE","mouseOut","onMarkerClick","info","lon","onMarkerHover","addLocation","newLocation","name","city","user_id","auth","id","geo","reqObj","method","headers","body","JSON","stringify","goToLocation","shouldComponentUpdate","nextProps","nextState","componentDidMount","navigator","geolocation","getCurrentPosition","position","latitude","longitude","currentLocation","render","config","days","hours","minutes","forecast","daily","undefined","labelArr","avgArr","minArr","maxArr","now","Date","getTime","newDate","time","iso","distance","Math","floor","i","o3","length","push","day","toString","substring","avg","min","max","labels","datasets","label","backgroundColor","borderColor","borderWidth","fill","radius","line","mapOptions","key","text","FlexImage","darkTheme","palette","type","score","width","height","style","MapTypeControlStyle","HORIZONTAL_BAR","mapTypeIds","MapTypeId","ROADMAP","SATELLITE","HYBRID","t","station","search","mapStateToProps","mapDispatchToProps","WrappedContainer","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Marker, GoogleApiWrapper, } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore'\nimport Grid from '@material-ui/core/Grid';\nimport { Dropdown, Checkbox, Button, Icon, Image, Segment } from 'semantic-ui-react'\nimport mapStyles from './mapStyles'\nimport Markers from './Markers'\nimport {HorizontalBar, Bar, Line} from 'react-chartjs-2';\nimport xyz from './xyz.jpg'\nimport LessThan25AQI from '../images/LessThan25AQI.jpg'\nimport LessThan50AQI from '../images/LessThan50AQI.jpg'\nimport LessThan100AQI from '../images/LessThan100AQI.jpg'\nimport LessThan150AQI from '../images/LessThan150AQI.jpg'\nimport LessThan200AQI from '../images/LessThan200AQI.jpg'\nimport LessThan300AQI from '../images/LessThan300AQI.jpg'\nimport Over300AQI from '../images/Over300AQI.jpg'\nimport { fetchCitiesSuccess } from \"../actions/city\";\nimport UserLocations from './UserLocations'\nimport { createLocationSuccess } from '../actions/location'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\n\n\n\nexport class ClimateMap extends Component {\n\n  state = {\n    searchText: '',\n    showClimateScore: false,\n    coords: {\n      lat: -23.304354,\n      lng: 151.916417\n    },\n    address: 'Wilson Island, Australia',\n    allScores: false,\n    showAQI: true,\n    hoveredPinStat: {},\n    hoveredCoords: {\n      lat: '',\n      lng: ''\n    },\n    showInfo: false,\n    activeMarker: {},\n    selectedPlace: {},\n    data: false,\n    markersRendered: false,\n  }\n\n  shouldComponentUpdate( nextProps, nextState ){\n    if (this.state.coords !== nextState.coords){\n      return false\n    } else {\n      return true\n    }\n  }\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude\n      let lng = position.coords.longitude\n      let currentLocation = {lat: lat,lng: lng}\n      this.setState({\n        coords: currentLocation\n      })\n    })\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => console.log(data.data))\n    \n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if (this.state.coords=== nextState.coords) {\n  //     return false;\n  //   } else {\n  //   return true;\n  //   }\n  // }\n\n  mapCLicked = (mapProps, map, event) => {\n    console.log(event)\n  }\n\n  onMarkerDragEnd = (coord) => {\n    const { latLng } = coord;\n    const newLat = latLng.lat();\n    const newLon = latLng.lng();\n    this.setState({\n      coords: {\n        lat: newLat,\n        lng: newLon\n      }\n    })\n    console.log(this.state.coords)\n    this._score.state.coords.lat = newLat\n    this._score.state.coords.lng = newLon\n    this._map.map.setCenter({lat: newLat, lng: newLon})    \n    // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n    // \t\"method\": \"GET\",\n    // \t\"headers\": {\n\t  // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t  // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n    //   }\n    // })\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   console.log(data)\n    //   this.setState({\n    //     allScores: {\n    //       ClimateScore: data.ClimateScore,\n    //       DroughtScore: data.DroughtScore,\n    //       FireScore: data.FireScore,\n    //       SeaLevelScore: data.SeaLevelScore,\n    //       StormScore: data.StormScore,\n    //       TempScore: data.TempScore,\n    //     },\n    //   })\n    // })\n    // .catch(err => {\n    //   this.setState({\n    //     allScores: false,\n    //   })\n    //   console.log(err)})\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromLatLng(newLat, newLon).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress\n      },\n      error => {\n        console.error(error);\n      }\n    );\n    fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n      this._score.state.aqi = data.data.aqi})  \n  };\n\n  handleSubmit = (value) => {\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromAddress(`${value.description}`).then(\n      response => {\n      const { lat, lng } = response.results[0].geometry.location;\n\n      this.setState({\n        coords: {\n          lat: lat,\n          lng: lng\n        }\n      })\n      this._map.map.setCenter({lat: lat, lng: lng})  \n      this._marker.marker.setPosition({lat: lat, lng: lng}) \n      console.log(this._search) \n      this._search.clearValue()\n      fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n        \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        }\n      })\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data)\n        this.setState({\n          allScores: {\n            ClimateScore: data.ClimateScore,\n            DroughtScore: data.DroughtScore,\n            FireScore: data.FireScore,\n            SeaLevelScore: data.SeaLevelScore,\n            StormScore: data.StormScore,\n            TempScore: data.TempScore,\n          },\n        })\n      })\n      .catch(err => {\n        this.setState({\n          allScores: false,\n      })})\n      console.log(this.state.coords)\n      Geocode.fromLatLng(lat, lng).then(\n      response => {\n        // const newAddress = response.results[0].formatted_address;\n        // this._score.state.address = newAddress\n      \n      },\n      error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${lat};${lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(locationData => {\n        console.log(locationData)\n        this.setState({\n          data: locationData.data\n        })\n      })  \n      // Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    })\n  }\n\n      // } else {\n      //   return this.props.climateScores.map((score)=>{\n      //     const numberString = score.ClimateScore.toString()\n      //     const google = this.props.google\n      //     let iw = 83,\n      //     ih = 107\n      //     return <Marker position={{lat: score.lat, lng: score.lng}}\n          \n      //     icon={{\n      //       url: `https://waqi.info/mapicon/${numberString}.50.png`,\n      //       anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n      //       size: new google.maps.Size(iw / 2, ih / 2),\n      //       scaledSize: new google.maps.Size(30, 40)\n      //     }}\n          \n          \n      //     />})\n      //   }  \n      // }\n      \n    labelClicked = (e) => {\n      console.log('working')\n      console.log(e.nativeEvent.target.innerHTML)\n      if (e.nativeEvent.target.innerHTML === 'Climate Scoreâ„¢'){\n        this.setState({\n          showAQI: false\n        })\n      }\n    }\n\n  markerHover = () => {\n    const google = this.props.google\n    if (this._marker.marker.getAnimation() !== null) {\n      this._marker.marker.setAnimation(null);\n    } else {\n      this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  }\n  mouseOut = e => {\n    this.setState({\n      showInfo: false\n    })\n  }\n\n  onMarkerClick = (marker, e) => {\n    fetch(`https://api.waqi.info/feed/geo:${marker.info.lat};${marker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          data: data.data,\n        })\n        console.log(data)\n      })\n  }  \n  \n  onMarkerHover = (props, marker, e) => {\n    console.log(marker)\n    console.log(e)\n    this.setState({\n      activeMarker: marker,\n      showInfo: true\n    })\n  }\n\n  // showInfo = () => {\n  //   console.log('works')\n  // }\n\n\n  addLocation = () => {\n    console.log('I WAS CLICKED!!!!')\n    if (this.state.data !== false){\n      const newLocation = {name: this.state.data.city.name, user_id: this.props.auth.id, lat:this.state.data.city.geo[0], lng:this.state.data.city.geo[1]}\n      const reqObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newLocation)\n      }\n      fetch('http://localhost:3001/locations', reqObj)\n      .then(resp => resp.json())\n      .then(newLocation => {\n        this.props.createLocationSuccess(newLocation)\n      })\n    }\n  }\n    \n  goToLocation = (location) => {\n    console.log('I was clickEd!!')\n    console.log(location)\n    this._map.map.setCenter({lat: location.lat, lng: location.lng})  \n    fetch(`https://api.waqi.info/feed/geo:${location.lat};${location.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          data: data.data,\n        })\n        console.log(data)\n      })\n  }\n\n  render() {\n    let config\n    let days\n    let hours\n    let minutes \n    if (this.state.data !== false ){\n      if ( this.state.data.forecast.daily !== undefined && 'o3' in this.state.data.forecast.daily){\n        let labelArr = [], avgArr = [], minArr = [], maxArr = []\n        let now = new Date().getTime();\n        let newDate = new Date(this.state.data.time.iso).getTime()\n        console.log(newDate)\n        console.log(now)\n        let distance = newDate - now;\n        days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n        console.log('days:' + days + 'hours:' + hours + 'mins:' + minutes)\n        for(let i=0;i<this.state.data.forecast.daily.o3.length;i++){\n          labelArr.push((new Date(this.state.data.forecast.daily.o3[i].day)).toString().substring(0, 10))\n          avgArr.push(this.state.data.forecast.daily.o3[i].avg)\n          minArr.push(this.state.data.forecast.daily.o3[i].min)\n          maxArr.push(this.state.data.forecast.daily.o3[i].max)\n        }\n        config = {\n          labels: labelArr, \n          datasets: [\n            {\n              label: \"max\",\n              backgroundColor: '#f7ff66',\n              borderColor: \"#f7ff66\",\n              borderWidth: 0,\n              data: maxArr,\n              fill: \"1\",\n              radius: 1,\n            },\n            {\n              label: \"avg\",\n              backgroundColor: '#4a9eff',\n              // #f7ff66\n              borderColor: '#4a9eff',\n              borderWidth: 1,\n              data: avgArr,\n              fill: \"-1\",line: false,\n              radius: 5\n            },\n            {\n              label: \"min\",\n              backgroundColor: '#87ff9f',\n              borderColor: \"#87ff9f\",\n              borderWidth: 0,\n              data: minArr,line: false,\n              fill: '1',\n              radius: 1,\n            }\n          ],\n        }\n      }\n    }\n    \n        // console.log(this.state)\n        // let o3ChartData\n        // let pm10ChartData\n        // if (this.state.data !== false && 'o3' in this.state.data.forecast.daily){\n        //   let labelArr = []\n        //   let dataArr = []\n        //   for(let i=0;i<this.state.data.forecast.daily.o3.length;i++){\n        //     labelArr.push(this.state.data.forecast.daily.o3[i].day)\n        //     dataArr.push(this.state.data.forecast.daily.o3[i].avg)\n        //   }\n        //   o3ChartData = {\n        //     labels: labelArr,\n        //     datasets: [\n        //     { label: `Ozone (O3) - Currently:${'o3' in this.state.data.iaqi ? this.state.data.iaqi.o3.v : '-'}`,\n        //       backgroundColor: 'rgba(75,192,192,1)',\n        //       borderColor: 'rgba(0,0,0,1)',\n        //       borderWidth: 2,\n        //       data: dataArr\n        //     }]\n        //   }\n        // }\n        // if (this.state.data !== false && 'pm10' in this.state.data.forecast.daily){\n        //   let labelArr = []\n        //   let dataArr = []\n        //   for(let i=0;i<this.state.data.forecast.daily.o3.length;i++){\n        //     labelArr.push(this.state.data.forecast.daily.pm10[i].day)\n        //     dataArr.push(this.state.data.forecast.daily.pm10[i].avg)\n        //   }\n        //   pm10ChartData = {\n        //     labels: labelArr,\n        //     datasets: [\n        //       { label: `PM10 (Small Particles) - Currently:${'pm10' in this.state.data.iaqi ? this.state.data.iaqi.pm10.v : '-'}`,\n        //       backgroundColor: 'rgba(75,192,192,1)',\n        //       borderColor: 'rgba(0,0,0,1)',\n        //       borderWidth: 2,\n        //       data: dataArr\n        //     }]\n        //   }\n        // }      \n    // options: {\n      //   tooltips: {\n        //     mode: 'index',\n        //     intersect: false,\n        //     displayColors: false,\n      //   },\n      //   responsive: true,\n      //   title: {\n        //     display: true,\n        //     text: \"Chart.js stackable with Min/Avg/Max\"\n        //   },\n        //   scales: {\n          //     xAxes: [\n      //       {\n      //         type: \"time\",\n      //         stacked: false,\n      //         // time: {\n      //         //   format: timeFormat,\n      //         //   // round: 'day'\n      //         //   tooltipFormat: \"ll HH:mm\"\n      //         // },\n      //         scaleLabel: {\n      //           display: true,\n      //           labelString: \"Date\"\n      //         },\n      //         ticks: {\n      //           maxRotation: 0\n      //         }\n      //       }\n      //     ],\n      //     yAxes: [\n      //       {\n      //         stacked: false,\n      //         scaleLabel: {\n      //           display: true,\n      //           labelString: \"value\"\n      //         }\n      //       }\n      //     ]\n      //   }\n      // }\n    \n    const mapOptions = [\n      {\n        key: 'Climate Score',\n        text: 'Climate Scoreâ„¢',\n        value: 'Climate Score',\n      },\n      {\n        key: 'Air Quality Index',\n        text: 'Air Quality Index',\n        value: 'Air Quality Index',\n      }\n    ] \n    let response\n    if (this.state.data !== false){\n      if(this.state.data.aqi <= 25){\n        response = 'Great Quality!'\n      } else if (this.state.data.aqi <= 50){\n        response = 'Good'\n      } else {\n        response = 'HIGH'\n      }\n    }\n    let FlexImage\n    if (this.state.data !== false && this.state.data.aqi <= 25){\n      FlexImage = LessThan25AQI\n    } else if (this.state.data !== false && this.state.data.aqi <= 50){\n      FlexImage = LessThan50AQI\n    } else if (this.state.data !== false && this.state.data.aqi <= 100){\n      FlexImage = LessThan100AQI\n    } else if (this.state.data !== false && this.state.data.aqi <= 150){\n      FlexImage = LessThan150AQI\n    } else if (this.state.data !== false && this.state.data.aqi <= 200){\n      FlexImage = LessThan200AQI\n    } else if (this.state.data !== false && this.state.data.aqi <= 300){\n      FlexImage = LessThan300AQI\n    } else if (this.state.data !== false && this.state.data.aqi > 300){\n      FlexImage = Over300AQI\n    }\n\n    const darkTheme = createMuiTheme({\n      palette: {\n        type: 'dark',\n      },\n    });\n    return(\n      <ThemeProvider theme={darkTheme}>\n      <div>\n    <ClimateScore ref={(score)=>this._score = score} map={this._map} onMarkerDragEnd={this.onMarkerDragEnd}\n     scores={this.state.allScores} />\n     <Grid \n       container\n       direction=\"row\"\n       justify=\"flex-start\"\n       alignItems=\"flex-start\"\n     container spacing={0}>\n      <Grid item xs={8}>\n      <Map  ref={(map) => this._map = map}\n            google={this.props.google}\n            styles={mapStyles}\n            style={{width: '100%',height: '100%', 'border-bottom-left-radius': '15px','border-bottom-right-radius': '15px','border-top-left-radius': '15px'}}\n            mapTypeControlOptions={{\n              style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n              mapTypeIds: [\n                this.props.google.maps.MapTypeId.ROADMAP,\n                this.props.google.maps.MapTypeId.SATELLITE,\n                this.props.google.maps.MapTypeId.HYBRID\n              ]\n            }}\n            onCenterChanged={()=>{\n            }}\n            initialCenter={this.state.coords}\n            center={this.state.coords}\n            onClick={this.mapCLicked} \n            zoom={14}\n            >\n        <Dropdown\n          closeOnChange\n          inline\n          options={mapOptions}\n          onChange={this.labelClicked}\n          defaultValue={mapOptions[1].value}\n          />\n        <Markers onMouseover={this.onMarkerHover}\n                onMouseout={this.mouseOut}\n                onClick={this.onMarkerClick}\n        >\n        </Markers>\n        <Marker ref={(marker)=>this._marker = marker}\n                onClick={this.onMarkerClick}\n                name={'Current location'} \n                draggable={true}\n                onMouseover={()=>this.markerHover()}\n                initialCenter={this.state.coords}\n                position={this.state.coords}\n                onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}/>\n        <InfoWindow\n          marker={this.state.activeMarker}\n          maxWidth={175}\n          onMouseover={()=>this.showInfo()}\n          style={{'background-color': '#000000'}}\n          visible={this.state.showInfo}>\n          \n          {/* <div class=\"ui card\">\n            <div class=\"content\">\n              <h3 class=\"ui sub header\">{this.state.showInfo? this.state.activeMarker.info.station.name:null}</h3>\n            </div>\n            <div class=\"extra content\">\n              <button class=\"ui primary button\">More Details</button>\n            </div>\n          </div>     */}\n          <div >\n          <h4>{this.state.showInfo? this.state.activeMarker.info.station.name:null} </h4>\n          </div>\n          {/* <Card>\n      <Card.Content>\n        <Card.Header>Matthew Harris</Card.Header>\n        <Card.Meta>Co-Worker</Card.Meta>\n        <Card.Description>\n          Matthew is a pianist living in Nashville.\n          <div class=\"ui animated button\" tabindex=\"0\">\n  <div class=\"visible content\">Next</div>\n  <div class=\"hidden content\">\n    <i class=\"right arrow icon\"></i>\n  </div>\n  </div>\n        </Card.Description>\n      </Card.Content>\n    </Card> */}\n        </InfoWindow>\n      </Map>\n      {/* </div> */}\n      </Grid>\n      <Grid item xs={3}>\n      <div className='hello'>\n        <GooglePlacesAutocomplete \n        ref={(search) => this._search = search}\n        onSelect={this.handleSubmit}\n              \n                                      placeholder='ðŸ”Ž Search Anywhere!'\n                                      // suggestionsStyles={{container: {width: '50%',height: '100%','border-radius': '1px'}}}\n                                      \n                                      \n                                      />  \n                                      \n                                      <Card >\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" >\n            R\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title=\"Shrimp and Chorizo Paella\"\n        subheader=\"September 14, 2016\"\n      />\n      <CardMedia\n        \n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          This impressive paella is a perfect party dish and a fun meal to cook together with your\n          guests. Add 1 cup of frozen peas along with the mussels, if you like.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          onClick={console.log('lol')}\n          aria-label=\"show more\"\n        >\n        </IconButton>\n      </CardActions>\n    </Card>\n      {/* <Card  fluid color='blue'>\n      <Card.Header><h3>{this.state.data !== false ? this.state.data.city.name:null}</h3></Card.Header>\n    <Image src={FlexImage} wrapped ui={false} />\n    <Card.Content>\n      <Card.Header>{this.state.data !== false ? 'Air Quality Index: ' + this.state.data.aqi :null}</Card.Header>\n      <Card.Meta>updated {this.state.data !== false ? + '' + -hours + ' hrs & ' + -minutes + ' mins ago - ' + this.state.data.time.s:null}</Card.Meta>\n      <Card.Description>\n      {this.state.data !== false && this.state.data.forecast.daily !== undefined ? <Line\n          data={config}\n          options={{\n            responsive: true,\n            tooltips: {\n              mode: 'index',\n              intersect: false,\n              callbacks: { \n                label: function(tooltipItem) {\n                  return Number(tooltipItem.yLabel) + \" Âµg/mÂ³\";}\n              },\n              displayColors: true,\n            },\n            title: {\n              display:false,\n              text:'Local Air Quality pm10 Forecast',\n              fontSize:20\n            },\n            legend:{\n              display:false,\n              position:'top'\n            }\n          }}\n        /> : null }\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <a onClick={this.addLocation}>\n        <Icon name='user' \n              />\n        Add {this.state.data !== false ? this.state.data.city.name:null} To Favorites\n      </a>\n    </Card.Content>\n    <UserLocations goToLocation={this.goToLocation}/>\n    </Card> */}\n\n      </div>\n      </Grid>\n    </Grid>\n    {/* <Grid >\n    <Grid.Row> */}\n      \n     \n      {/* <div className='location'> */}\n \n\n   \n\n\n    \n   \n      {/* </Grid.Column>\n    </Grid.Row>\n    </Grid> */}\n    </div>\n    </ThemeProvider>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = {\n  createLocationSuccess\n}\n\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: ('AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8')\n})(ClimateMap)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedContainer)"]},"metadata":{},"sourceType":"module"}