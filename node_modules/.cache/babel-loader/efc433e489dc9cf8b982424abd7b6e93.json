{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore';\nimport { Dropdown, Checkbox } from 'semantic-ui-react';\nimport mapStyles from './mapStyles';\nimport { bounce } from 'react-animations';\nexport class ClimateMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      showClimateScore: false,\n      coords: {\n        lat: '-23.304354',\n        lng: '151.916417'\n      },\n      address: 'Wilson Island, Australia',\n      allScores: false,\n      showAQI: true\n    };\n\n    this.mapCLicked = (mapProps, map, event) => {\n      console.log('I was clicked!');\n      console.log(mapProps);\n      console.log(map);\n      console.log(event);\n    };\n\n    this.onMarkerDragEnd = coord => {\n      const {\n        latLng\n      } = coord;\n      const newLat = latLng.lat();\n      const newLon = latLng.lng();\n      this._score.state.lat = newLat;\n      this._score.state.lng = newLon;\n\n      this._map.map.setCenter({\n        lat: newLat,\n        lng: newLon\n      }); // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n      // \t\"method\": \"GET\",\n      // \t\"headers\": {\n      // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n      //   this.setState({\n      //     allScores: false,\n      //   })\n      //   console.log(err)})\n\n\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(newLat, newLon).then(response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress;\n      }, error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        console.log(data);\n        this._score.state.aqi = data.data.aqi;\n      });\n    };\n\n    this.handleSubmit = value => {\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromAddress(`${value.description}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this._score.state.lat = lat;\n        this._score.state.lng = lng;\n\n        this._map.map.setCenter({\n          lat: lat,\n          lng: lng\n        });\n\n        console.log(this._marker.marker.position.lat());\n\n        this._marker.marker.setPosition({\n          lat: lat,\n          lng: lng\n        }); // fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n        //   \"method\": \"GET\",\n        //   \"headers\": {\n        //   \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n        //   \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n        //   }\n        // })\n        // .then(resp => resp.json())\n        // .then(data => {\n        //   console.log(data)\n        //   this.setState({\n        //     allScores: {\n        //       ClimateScore: data.ClimateScore,\n        //       DroughtScore: data.DroughtScore,\n        //       FireScore: data.FireScore,\n        //       SeaLevelScore: data.SeaLevelScore,\n        //       StormScore: data.StormScore,\n        //       TempScore: data.TempScore,\n        //     },\n        //   })\n        // })\n        // .catch(err => {\n        // this.setState({\n        //   allScores: false,\n        // })\n        // console.log(err)})\n\n\n        Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n        Geocode.fromLatLng(lat, lng).then(response => {\n          const newAddress = response.results[0].formatted_address;\n          this._score.state.address = newAddress;\n        }, error => {\n          console.error(error);\n        });\n        fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.pinHover = () => {\n      console.log('reee');\n    };\n\n    this.renderMarkers = () => {\n      if (this.state.showAQI) {\n        return this.props.stations.map(statObj => {\n          const google = this.props.google;\n          let iw = 83,\n              ih = 107;\n\n          if (statObj.aqi != '-') {\n            return /*#__PURE__*/React.createElement(Marker, {\n              info: statObj,\n              position: {\n                lat: statObj.lat,\n                lng: statObj.lon\n              },\n              onMouseover: () => this.pinHover(),\n              icon: {\n                url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n                anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n                size: new google.maps.Size(iw / 2, ih / 2),\n                scaledSize: new google.maps.Size(30, 40)\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 16\n              }\n            });\n          }\n        });\n      } else {\n        return this.props.climateScores.map(score => {\n          const numberString = score.ClimateScore.toString();\n          const google = this.props.google;\n          let iw = 83,\n              ih = 107;\n          return /*#__PURE__*/React.createElement(Marker, {\n            position: {\n              lat: score.lat,\n              lng: score.lng\n            },\n            icon: {\n              url: `https://waqi.info/mapicon/${numberString}.50.png`,\n              anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n              size: new google.maps.Size(iw / 2, ih / 2),\n              scaledSize: new google.maps.Size(30, 40)\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 16\n            }\n          });\n        });\n      }\n    };\n\n    this.labelClicked = e => {\n      console.log('working');\n      console.log(e.nativeEvent.target.innerHTML);\n\n      if (e.nativeEvent.target.innerHTML === 'Climate Score™') {\n        this.setState({\n          showAQI: false\n        });\n      }\n    };\n\n    this.markerHover = () => {\n      const google = this.props.google;\n\n      if (this._marker.marker.getAnimation() !== null) {\n        this._marker.marker.setAnimation(null);\n      } else {\n        this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n      }\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      let currentLocation = {\n        lat: lat,\n        lng: lng\n      };\n      this.setState({\n        coords: currentLocation\n      });\n    });\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => console.log(data.data));\n  }\n\n  componentWillUpdate() {\n    return false;\n  }\n\n  render() {\n    console.log(this.props);\n    const mapOptions = [{\n      key: 'Climate Score',\n      text: 'Climate Score™',\n      value: 'Climate Score'\n    }, {\n      key: 'Air Quality Index',\n      text: 'Air Quality Index',\n      value: 'Air Quality Index'\n    }];\n    const test = [{\n      \"elementType\": \"labels\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }, {\n        \"color\": \"#f49f53\"\n      }]\n    }, {\n      \"featureType\": \"landscape\",\n      \"stylers\": [{\n        \"color\": \"#f9ddc5\"\n      }, {\n        \"lightness\": -7\n      }]\n    }, {\n      \"featureType\": \"road\",\n      \"stylers\": [{\n        \"color\": \"#813033\"\n      }, {\n        \"lightness\": 43\n      }]\n    }, {\n      \"featureType\": \"poi.business\",\n      \"stylers\": [{\n        \"color\": \"#645c20\"\n      }, {\n        \"lightness\": 38\n      }]\n    }, {\n      \"featureType\": \"water\",\n      \"stylers\": [{\n        \"color\": \"#1994bf\"\n      }, {\n        \"saturation\": -69\n      }, {\n        \"gamma\": 0.99\n      }, {\n        \"lightness\": 43\n      }]\n    }, {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [{\n        \"color\": \"#f19f53\"\n      }, {\n        \"weight\": 1.3\n      }, {\n        \"visibility\": \"on\"\n      }, {\n        \"lightness\": 16\n      }]\n    }, {\n      \"featureType\": \"poi.business\"\n    }, {\n      \"featureType\": \"poi.park\",\n      \"stylers\": [{\n        \"color\": \"#645c20\"\n      }, {\n        \"lightness\": 39\n      }]\n    }, {\n      \"featureType\": \"poi.school\",\n      \"stylers\": [{\n        \"color\": \"#a95521\"\n      }, {\n        \"lightness\": 35\n      }]\n    }, {}, {\n      \"featureType\": \"poi.medical\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [{\n        \"color\": \"#813033\"\n      }, {\n        \"lightness\": 38\n      }, {\n        \"visibility\": \"off\"\n      }]\n    }, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {\n      \"elementType\": \"labels\"\n    }, {\n      \"featureType\": \"poi.sports_complex\",\n      \"stylers\": [{\n        \"color\": \"#9e5916\"\n      }, {\n        \"lightness\": 32\n      }]\n    }, {}, {\n      \"featureType\": \"poi.government\",\n      \"stylers\": [{\n        \"color\": \"#9e5916\"\n      }, {\n        \"lightness\": 46\n      }]\n    }, {\n      \"featureType\": \"transit.station\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    }, {\n      \"featureType\": \"transit.line\",\n      \"stylers\": [{\n        \"color\": \"#813033\"\n      }, {\n        \"lightness\": 22\n      }]\n    }, {\n      \"featureType\": \"transit\",\n      \"stylers\": [{\n        \"lightness\": 38\n      }]\n    }, {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [{\n        \"color\": \"#f19f53\"\n      }, {\n        \"lightness\": -10\n      }]\n    }, {}, {}, {}];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      onSelect: ({\n        value\n      }) => {\n        this.setState({\n          searchText: value\n        });\n      },\n      onSelect: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ClimateScore, {\n      ref: score => this._score = score,\n      map: this._map,\n      onMarkerDragEnd: this.onMarkerDragEnd,\n      coords: this.state.coords,\n      scores: this.state.allScores,\n      address: this.state.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      ref: map => this._map = map,\n      google: this.props.google,\n      styles: test // mapTypeControlOptions={{\n      //   style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n      //   mapTypeIds: [\n      //     this.props.google.maps.MapTypeId.ROADMAP,\n      //     this.props.google.maps.MapTypeId.SATELLITE,\n      //     this.props.google.maps.MapTypeId.HYBRID\n      //   ]\n      // }}\n      ,\n      onCenterChanged: () => {\n        console.log('working');\n      },\n      initialCenter: this.state.coords,\n      center: this.state.coords,\n      onClick: this.mapCLicked,\n      zoom: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      closeOnChange: true,\n      inline: true,\n      options: mapOptions,\n      onChange: this.labelClicked,\n      defaultValue: mapOptions[1].value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }\n    })), this.renderMarkers(), /*#__PURE__*/React.createElement(Marker, {\n      ref: marker => this._marker = marker,\n      onClick: this.onMarkerClick,\n      name: 'Current location',\n      draggable: true,\n      onMouseover: () => this.markerHover(),\n      initialCenter: this.state.coords,\n      position: this.state.coords,\n      onDragend: (t, map, coord) => this.onMarkerDragEnd(coord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8'\n})(ClimateMap);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/frontend/src/components/ClimateMap.js"],"names":["React","Component","Map","InfoWindow","Marker","MarkerWithLabel","GoogleApiWrapper","GooglePlacesAutocomplete","Geocode","ClimateScore","Dropdown","Checkbox","mapStyles","bounce","ClimateMap","state","searchText","showClimateScore","coords","lat","lng","address","allScores","showAQI","mapCLicked","mapProps","map","event","console","log","onMarkerDragEnd","coord","latLng","newLat","newLon","_score","_map","setCenter","setApiKey","fromLatLng","then","response","newAddress","results","formatted_address","error","fetch","resp","json","data","aqi","handleSubmit","value","fromAddress","description","geometry","location","_marker","marker","position","setPosition","pinHover","renderMarkers","props","stations","statObj","google","iw","ih","lon","url","anchor","maps","Point","size","Size","scaledSize","climateScores","score","numberString","toString","labelClicked","e","nativeEvent","target","innerHTML","setState","markerHover","getAnimation","setAnimation","Animation","BOUNCE","componentDidMount","navigator","geolocation","getCurrentPosition","latitude","longitude","currentLocation","componentWillUpdate","render","mapOptions","key","text","test","onMarkerClick","t","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Marker, MarkerWithLabel, GoogleApiWrapper, } from 'google-maps-react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport Geocode from \"react-geocode\";\nimport ClimateScore from './ClimateScore'\nimport { Dropdown, Checkbox } from 'semantic-ui-react'\nimport mapStyles from './mapStyles'\nimport { bounce } from 'react-animations';\n\n\n\n\nexport class ClimateMap extends Component {\n\n  state = {\n    searchText: '',\n    showClimateScore: false,\n    coords: {\n      lat: '-23.304354',\n      lng: '151.916417'\n    },\n    address: 'Wilson Island, Australia',\n    allScores: false,\n    showAQI: true,\n  }\n\n  componentDidMount(){\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude\n      let lng = position.coords.longitude\n      let currentLocation = {lat: lat,lng: lng}\n      this.setState({\n        coords: currentLocation\n      })\n    })\n    fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => console.log(data.data))\n  }\n  \n  mapCLicked = (mapProps, map, event) => {\n    console.log('I was clicked!')\n    console.log(mapProps)\n    console.log(map)\n    console.log(event)\n  }\n\n  componentWillUpdate(){\n    return false\n  }\n\n\n  onMarkerDragEnd = (coord) => {\n    const { latLng } = coord;\n    const newLat = latLng.lat();\n    const newLon = latLng.lng();\n    this._score.state.lat = newLat\n    this._score.state.lng = newLon\n    this._map.map.setCenter({lat: newLat, lng: newLon})    \n    // fetch(`https://climate-score.p.rapidapi.com/${newLat}/${newLon}`, {\n    // \t\"method\": \"GET\",\n    // \t\"headers\": {\n\t  // \t\"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n\t  // \t\"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n    //   }\n    // })\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   console.log(data)\n    //   this.setState({\n    //     allScores: {\n    //       ClimateScore: data.ClimateScore,\n    //       DroughtScore: data.DroughtScore,\n    //       FireScore: data.FireScore,\n    //       SeaLevelScore: data.SeaLevelScore,\n    //       StormScore: data.StormScore,\n    //       TempScore: data.TempScore,\n    //     },\n    //   })\n    // })\n    // .catch(err => {\n    //   this.setState({\n    //     allScores: false,\n    //   })\n    //   console.log(err)})\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromLatLng(newLat, newLon).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress\n      },\n      error => {\n        console.error(error);\n      }\n    );\n    fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n      this._score.state.aqi = data.data.aqi})  \n  };\n\n  handleSubmit = (value) => {\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromAddress(`${value.description}`).then(\n      response => {\n      const { lat, lng } = response.results[0].geometry.location;\n      this._score.state.lat = lat\n      this._score.state.lng = lng\n      this._map.map.setCenter({lat: lat, lng: lng})  \n      console.log(this._marker.marker.position.lat())\n      this._marker.marker.setPosition({lat: lat, lng: lng})  \n      // fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n      //   \"method\": \"GET\",\n      //   \"headers\": {\n      //   \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n      //   \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n      //   }\n      // })\n      // .then(resp => resp.json())\n      // .then(data => {\n      //   console.log(data)\n      //   this.setState({\n      //     allScores: {\n      //       ClimateScore: data.ClimateScore,\n      //       DroughtScore: data.DroughtScore,\n      //       FireScore: data.FireScore,\n      //       SeaLevelScore: data.SeaLevelScore,\n      //       StormScore: data.StormScore,\n      //       TempScore: data.TempScore,\n      //     },\n      //   })\n      // })\n      // .catch(err => {\n        // this.setState({\n        //   allScores: false,\n        // })\n        // console.log(err)})\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(lat, lng).then(\n      response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress\n      },\n      error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${this.state.coords.lat};${this.state.coords.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`)\n      .then(resp => resp.json())\n      .then(data => console.log(data.data))  \n      },\n      error => {\n      console.error(error);\n    })\n  }\n\n  pinHover = () => {\n    console.log('reee')\n  }\n\n  renderMarkers = () => {\n    if (this.state.showAQI){\n      return this.props.stations.map((statObj)=>{\n        const google = this.props.google\n        let iw = 83,\n            ih = 107;\n        if (statObj.aqi != '-'){\n        return <Marker  info={statObj}\n                        position={{lat: statObj.lat, lng: statObj.lon}}\n                        onMouseover={()=>this.pinHover()}\n                        icon={{\n                          url: `https://waqi.info/mapicon/${statObj.aqi}.50.png`,\n                          anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n                          size: new google.maps.Size(iw / 2, ih / 2),\n                          scaledSize: new google.maps.Size(30, 40)\n                        }}\n          \n        \n        />\n        }  \n      })\n    } else {\n      return this.props.climateScores.map((score)=>{\n        const numberString = score.ClimateScore.toString()\n        const google = this.props.google\n        let iw = 83,\n            ih = 107\n        return <Marker position={{lat: score.lat, lng: score.lng}}\n        \n        icon={{\n          url: `https://waqi.info/mapicon/${numberString}.50.png`,\n          anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n          size: new google.maps.Size(iw / 2, ih / 2),\n          scaledSize: new google.maps.Size(30, 40)\n        }}\n\n\n        />})\n      }  \n    }\n\n\n  labelClicked = (e) => {\n    console.log('working')\n    console.log(e.nativeEvent.target.innerHTML)\n    if (e.nativeEvent.target.innerHTML === 'Climate Score™'){\n      this.setState({\n        showAQI: false\n      })\n    }\n  }\n\n  markerHover = () => {\n    const google = this.props.google\n    if (this._marker.marker.getAnimation() !== null) {\n      this._marker.marker.setAnimation(null);\n    } else {\n      this._marker.marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  }\n\n\n  render() {\n    \n    console.log(this.props)\n    const mapOptions = [\n      {\n        key: 'Climate Score',\n        text: 'Climate Score™',\n        value: 'Climate Score',\n      },\n      {\n        key: 'Air Quality Index',\n        text: 'Air Quality Index',\n        value: 'Air Quality Index',\n      }]\n    const test = [\n      {\n          \"elementType\": \"labels\",\n          \"stylers\": [\n              {\n                  \"visibility\": \"off\"\n              },\n              {\n                  \"color\": \"#f49f53\"\n              }\n          ]\n      },\n      {\n          \"featureType\": \"landscape\",\n          \"stylers\": [\n              {\n                  \"color\": \"#f9ddc5\"\n              },\n              {\n                  \"lightness\": -7\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road\",\n          \"stylers\": [\n              {\n                  \"color\": \"#813033\"\n              },\n              {\n                  \"lightness\": 43\n              }\n          ]\n      },\n      {\n          \"featureType\": \"poi.business\",\n          \"stylers\": [\n              {\n                  \"color\": \"#645c20\"\n              },\n              {\n                  \"lightness\": 38\n              }\n          ]\n      },\n      {\n          \"featureType\": \"water\",\n          \"stylers\": [\n              {\n                  \"color\": \"#1994bf\"\n              },\n              {\n                  \"saturation\": -69\n              },\n              {\n                  \"gamma\": 0.99\n              },\n              {\n                  \"lightness\": 43\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.local\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [\n              {\n                  \"color\": \"#f19f53\"\n              },\n              {\n                  \"weight\": 1.3\n              },\n              {\n                  \"visibility\": \"on\"\n              },\n              {\n                  \"lightness\": 16\n              }\n          ]\n      },\n      {\n          \"featureType\": \"poi.business\"\n      },\n      {\n          \"featureType\": \"poi.park\",\n          \"stylers\": [\n              {\n                  \"color\": \"#645c20\"\n              },\n              {\n                  \"lightness\": 39\n              }\n          ]\n      },\n      {\n          \"featureType\": \"poi.school\",\n          \"stylers\": [\n              {\n                  \"color\": \"#a95521\"\n              },\n              {\n                  \"lightness\": 35\n              }\n          ]\n      },\n      {},\n      {\n          \"featureType\": \"poi.medical\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [\n              {\n                  \"color\": \"#813033\"\n              },\n              {\n                  \"lightness\": 38\n              },\n              {\n                  \"visibility\": \"off\"\n              }\n          ]\n      },\n      {},\n      {},\n      {},\n      {},\n      {},\n      {},\n      {},\n      {},\n      {},\n      {},\n      {},\n      {\n          \"elementType\": \"labels\"\n      },\n      {\n          \"featureType\": \"poi.sports_complex\",\n          \"stylers\": [\n              {\n                  \"color\": \"#9e5916\"\n              },\n              {\n                  \"lightness\": 32\n              }\n          ]\n      },\n      {},\n      {\n          \"featureType\": \"poi.government\",\n          \"stylers\": [\n              {\n                  \"color\": \"#9e5916\"\n              },\n              {\n                  \"lightness\": 46\n              }\n          ]\n      },\n      {\n          \"featureType\": \"transit.station\",\n          \"stylers\": [\n              {\n                  \"visibility\": \"off\"\n              }\n          ]\n      },\n      {\n          \"featureType\": \"transit.line\",\n          \"stylers\": [\n              {\n                  \"color\": \"#813033\"\n              },\n              {\n                  \"lightness\": 22\n              }\n          ]\n      },\n      {\n          \"featureType\": \"transit\",\n          \"stylers\": [\n              {\n                  \"lightness\": 38\n              }\n          ]\n      },\n      {\n          \"featureType\": \"road.local\",\n          \"elementType\": \"geometry.stroke\",\n          \"stylers\": [\n              {\n                  \"color\": \"#f19f53\"\n              },\n              {\n                  \"lightness\": -10\n                }\n              ]\n            },\n            {},\n            {},\n            {}\n          ];\n          \n    return (\n      <div>\n      <GooglePlacesAutocomplete onSelect={({ value }) => {(this.setState({ searchText: value }))}}\n                                    onSelect={this.handleSubmit}\n          />  \n      <ClimateScore ref={(score)=>this._score = score} map={this._map} onMarkerDragEnd={this.onMarkerDragEnd}\n              coords={this.state.coords} scores={this.state.allScores} address={this.state.address} />\n              \n      <Map  ref={(map) => this._map = map}\n            google={this.props.google}\n            styles={test}\n            // mapTypeControlOptions={{\n              //   style: this.props.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n            //   mapTypeIds: [\n              //     this.props.google.maps.MapTypeId.ROADMAP,\n            //     this.props.google.maps.MapTypeId.SATELLITE,\n            //     this.props.google.maps.MapTypeId.HYBRID\n            //   ]\n            // }}\n            onCenterChanged={()=>{\n              console.log('working')\n            }}\n            initialCenter={this.state.coords}\n            center={this.state.coords}\n            onClick={this.mapCLicked} \n            zoom={14}\n            >\n        <div>\n          <Checkbox>\n\n          </Checkbox>\n        \n        <Dropdown\n          closeOnChange\n          inline\n          options={mapOptions}\n          onChange={this.labelClicked}\n          defaultValue={mapOptions[1].value}\n          />\n        </div>\n        {this.renderMarkers()}\n        <Marker ref={(marker)=>this._marker = marker}\n                onClick={this.onMarkerClick}\n                name={'Current location'} \n                draggable={true}\n                onMouseover={()=>this.markerHover()}\n                initialCenter={this.state.coords}\n                position={this.state.coords}\n                onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}/>\n \n        {/* <InfoWindow onClose={this.onInfoWindowClose}>\n        </InfoWindow> */}\n      </Map>\n      </div>\n    );\n  }\n}\n\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8')\n})(ClimateMap)"]},"metadata":{},"sourceType":"module"}